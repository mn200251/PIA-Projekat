{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { sankey, sankeyLeft, sankeyLinkHorizontal } from 'd3-sankey';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nconst _c0 = [\"caretElm\"];\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\nconst _c1 = function (a0) {\n  return {\n    model: a0\n  };\n};\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.context));\n  }\n}\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r1.legendOptions && ctx_r1.legendOptions.position === ctx_r1.LegendPosition.Below)(\"data\", ctx_r1.legendOptions.domain)(\"title\", ctx_r1.legendOptions.title)(\"colors\", ctx_r1.legendOptions.colors)(\"height\", ctx_r1.view[1])(\"width\", ctx_r1.legendWidth)(\"activeEntries\", ctx_r1.activeEntries);\n  }\n}\nconst _c2 = [\"*\"];\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    i0.ɵɵattribute(\"y\", i_r15 * 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r14, \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template, 2, 2, \"tspan\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r12 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r12);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtemplate(0, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 1, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    const tick_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.tickChunks(tick_r3));\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.tickTrim(tickFormatted_r5), \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 5);\n    i0.ɵɵtemplate(4, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r5 = ctx.ngIf;\n    const _r7 = i0.ɵɵreference(6);\n    const _r9 = i0.ɵɵreference(8);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"text-anchor\", ctx_r4.textAnchor)(\"transform\", ctx_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isWrapTicksSupported)(\"ngIfThen\", _r7)(\"ngIfElse\", _r9);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 6, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.tickTransform(tick_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tickFormat(tick_r3));\n  }\n}\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r19.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", -ctx_r19.gridLineHeight);\n  }\n}\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r18 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.tickTransform(tick_r18));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"rotateTicks\", ctx_r0.rotateTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.xScale)(\"orient\", ctx_r0.xOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineHeight\", ctx_r0.dims.height)(\"width\", ctx_r0.dims.width)(\"tickValues\", ctx_r0.ticks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(6);\n    i0.ɵɵattribute(\"y\", i_r18 * (8 + ctx_r16.tickSpacing));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r17, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template, 2, 2, \"tspan\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r14 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r14);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r14 = ctx.ngIf;\n    i0.ɵɵnextContext(2);\n    const _r11 = i0.ɵɵreference(8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tickLines_r14.length > 1)(\"ngIfElse\", _r11);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtemplate(0, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 2, \"ng-container\", 5);\n  }\n  if (rf & 2) {\n    const tick_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.tickChunks(tick_r5));\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = i0.ɵɵnextContext().ngIf;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.tickTrim(tickFormatted_r7), \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 6);\n    i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = ctx.ngIf;\n    const _r9 = i0.ɵɵreference(6);\n    const _r11 = i0.ɵɵreference(8);\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r6.dy)(\"x\", ctx_r6.x1)(\"y\", ctx_r6.y1)(\"text-anchor\", ctx_r6.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.wrapTicks)(\"ngIfThen\", _r9)(\"ngIfElse\", _r11);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 10, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transform(tick_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tickFormat(tick_r5));\n  }\n}\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r24.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r25.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 14);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r23.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.orient === ctx_r23.Orientation.Left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.orient === ctx_r23.Orientation.Right);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r22 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r3.transform(tick_r22));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showGridLines);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const refLine_r26 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r28.tickTrim(ctx_r28.tickFormat(refLine_r26.value)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"dy\", ctx_r28.dy)(\"y\", -6)(\"x\", ctx_r28.gridLineWidth)(\"text-anchor\", ctx_r28.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", refLine_r26.name, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 16);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r26 = i0.ɵɵnextContext().$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r27.transform(refLine_r26.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x2\", ctx_r27.gridLineWidth)(\"transform\", ctx_r27.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.showRefLabels);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRefLines);\n  }\n}\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickValues\", ctx_r0.ticks)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.yScale)(\"orient\", ctx_r0.yOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineWidth\", ctx_r0.dims.width)(\"referenceLines\", ctx_r0.referenceLines)(\"showRefLines\", ctx_r0.showRefLines)(\"showRefLabels\", ctx_r0.showRefLabels)(\"height\", ctx_r0.dims.height)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c10 = [\"ngx-charts-circle\", \"\"];\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r2.circle.cx - ctx_r2.circle.radius)(\"y\", ctx_r2.circle.cy)(\"width\", ctx_r2.circle.radius * 2)(\"height\", ctx_r2.circle.height)(\"fill\", ctx_r2.gradientFill);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2);\n    i0.ɵɵtemplate(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClick(ctx_r3.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.circle.gradientStops);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r0.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r0.circle.cx)(\"cy\", ctx_r0.circle.cy)(\"r\", ctx_r0.circle.radius)(\"fill\", ctx_r0.circle.color)(\"pointerEvents\", ctx_r0.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r0.circle.value)(\"classNames\", ctx_r0.circle.classNames)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(ctx_r0.circle))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", ctx_r0.circle.data);\n  }\n}\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c16 = [\"ngx-charts-area\", \"\"];\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\nfunction TooltipArea__svg_ng_template_2__xhtml_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tooltipItem_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getToolTipText(tooltipItem_r5), \" \");\n  }\n}\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2__xhtml_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r3 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", model_r3);\n  }\n}\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.valueFormatting ? ctx_r1.valueFormatting(ctx_r1.roundedTotal) : ctx_r1.defaultValueFormatting(ctx_r1.roundedTotal), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r4.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.valueFormatting ? ctx_r5.valueFormatting(legendItem_r3.value) : ctx_r5.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11);\n    i0.ɵɵtemplate(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14);\n    i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n  }\n}\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"baseValue\", ctx_r2.baseValue)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r2.activeEntries)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"baseValue\", ctx_r19.baseValue)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nconst _c24 = function (a0, a1) {\n  return [a0, a1];\n};\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"activeEntries\", ctx_r2.activeEntries)(\"gradient\", ctx_r2.gradient)(\"normalized\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"normalized\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c25 = \".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"activeEntries\", ctx_r2.activeEntries)(\"stacked\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"stacked\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c26 = [\"ngx-charts-bar\", \"\"];\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.data)(\"orientation\", ctx_r0.barOrientation.Horizontal)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2.data))(\"ariaLabel\", bar_r2.ariaLabel)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"noBarWhenZero\", ctx_r0.noBarWhenZero);\n  }\n}\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r9\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.barOrientation.Horizontal);\n  }\n}\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.valueScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.valueScale)(\"activeEntries\", ctx_r8.activeEntries)(\"yScale\", ctx_r8.innerScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r16.valueScale)(\"activeEntries\", ctx_r16.activeEntries)(\"yScale\", ctx_r16.innerScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"activeEntries\", ctx_r8.activeEntries)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"activeEntries\", ctx_r16.activeEntries)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r3.animations)(\"width\", bar_r4.width)(\"height\", bar_r4.height)(\"x\", bar_r4.x)(\"y\", bar_r4.y)(\"fill\", bar_r4.color)(\"stops\", bar_r4.gradientStops)(\"data\", bar_r4.data)(\"orientation\", ctx_r3.barOrientation.Vertical)(\"roundEdges\", bar_r4.roundEdges)(\"gradient\", ctx_r3.gradient)(\"ariaLabel\", bar_r4.ariaLabel)(\"isActive\", ctx_r3.isActive(bar_r4.data))(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.tooltipPlacement)(\"tooltipType\", ctx_r3.tooltipType)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : bar_r4.tooltipText)(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", bar_r4.data)(\"noBarWhenZero\", ctx_r3.noBarWhenZero)(\"animations\", ctx_r3.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bars)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r10.width)(\"height\", bar_r10.height)(\"x\", bar_r10.x)(\"y\", bar_r10.y)(\"fill\", bar_r10.color)(\"stops\", bar_r10.gradientStops)(\"data\", bar_r10.data)(\"orientation\", ctx_r9.barOrientation.Vertical)(\"roundEdges\", bar_r10.roundEdges)(\"gradient\", ctx_r9.gradient)(\"ariaLabel\", bar_r10.ariaLabel)(\"isActive\", ctx_r9.isActive(bar_r10.data))(\"tooltipDisabled\", ctx_r9.tooltipDisabled)(\"tooltipPlacement\", ctx_r9.tooltipPlacement)(\"tooltipType\", ctx_r9.tooltipType)(\"tooltipTitle\", ctx_r9.tooltipTemplate ? undefined : bar_r10.tooltipText)(\"tooltipTemplate\", ctx_r9.tooltipTemplate)(\"tooltipContext\", bar_r10.data)(\"noBarWhenZero\", ctx_r9.noBarWhenZero)(\"animations\", ctx_r9.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r17\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r16.x)(\"barY\", b_r16.y)(\"barWidth\", b_r16.width)(\"barHeight\", b_r16.height)(\"value\", b_r16.total)(\"valueFormatting\", ctx_r15.dataLabelFormatting)(\"orientation\", ctx_r15.barOrientation.Vertical);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.barsForDataLabels)(\"ngForTrackBy\", ctx_r2.trackDataLabelBy);\n  }\n}\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r8.activeEntries)(\"xScale\", ctx_r8.innerScale)(\"yScale\", ctx_r8.valueScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n  }\n}\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r16.activeEntries)(\"xScale\", ctx_r16.innerScale)(\"yScale\", ctx_r16.valueScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n  }\n}\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"activeEntries\", ctx_r16.activeEntries)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c30 = [\"ngx-charts-box\", \"\"];\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r1.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r1.medianLineWidth : ctx_r1.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r1.maskLine);\n  }\n}\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"yScale\", ctx_r0.yScale)(\"colors\", ctx_r0.colors)(\"roundEdges\", ctx_r0.roundEdges)(\"strokeColor\", ctx_r0.strokeColor)(\"strokeWidth\", ctx_r0.strokeWidth)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"series\", result_r1)(\"dims\", ctx_r0.dims)(\"animations\", ctx_r0.animations)(\"gradient\", ctx_r0.gradient);\n  }\n}\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.placementTypes.Top)(\"tooltipType\", ctx_r3.styleTypes.tooltip)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : ctx_r3.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1);\n    i0.ɵɵtemplate(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const circle_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", circle_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR);\n  }\n}\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r0.showGridLines)(\"dims\", ctx_r0.dims)(\"xScale\", ctx_r0.xScale)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const series_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, series_r9));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"rScale\", ctx_r8.rScale)(\"xScaleType\", ctx_r8.xScaleType)(\"yScaleType\", ctx_r8.yScaleType)(\"xAxisLabel\", ctx_r8.xAxisLabel)(\"yAxisLabel\", ctx_r8.yAxisLabel)(\"colors\", ctx_r8.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r8.activeEntries)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r2.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.data)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const series_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, series_r15));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"rScale\", ctx_r14.rScale)(\"xScaleType\", ctx_r14.xScaleType)(\"yScaleType\", ctx_r14.yScaleType)(\"xAxisLabel\", ctx_r14.xAxisLabel)(\"yAxisLabel\", ctx_r14.yAxisLabel)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r3.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\nconst _c35 = function (a0, a1, a2) {\n  return {\n    series: a0,\n    name: a1,\n    value: a2\n  };\n};\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r1.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit(c_r1.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit(c_r1.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"data\", c_r1.data)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r1.series, c_r1.label, c_r1.data));\n  }\n}\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n  if (rf & 2) {\n    const rect_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r7.x)(\"y\", rect_r7.y)(\"rx\", rect_r7.rx)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\nconst _c36 = [\"ngx-charts-line\", \"\"];\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r1.initialPath)(\"fill\", ctx_r1.fill)(\"stroke\", ctx_r1.stroke);\n  }\n}\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(ctx_r1.data))(\"inactive\", ctx_r1.isInactive(ctx_r1.data));\n    i0.ɵɵproperty(\"data\", ctx_r1.data)(\"path\", ctx_r1.outerPath)(\"fill\", ctx_r1.hasGradient ? ctx_r1.gradientUrl : ctx_r1.colors.getColor(ctx_r1.data.name))(\"opacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"data\", series_r11)(\"activeEntries\", ctx_r10.activeEntries)(\"scaleType\", ctx_r10.scaleType)(\"curve\", ctx_r10.curve)(\"rangeFillOpacity\", ctx_r10.rangeFillOpacity)(\"hasRange\", ctx_r10.hasRange)(\"animations\", ctx_r10.animations);\n  }\n}\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"hasRange\", ctx_r12.hasRange)(\"animations\", ctx_r12.animations);\n  }\n}\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"scaleType\", ctx_r14.scaleType)(\"visibleValue\", ctx_r14.hoveredVertical)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r4.dims)(\"xSet\", ctx_r4.xSet)(\"xScale\", ctx_r4.xScale)(\"yScale\", ctx_r4.yScale)(\"results\", ctx_r4.results)(\"colors\", ctx_r4.colors)(\"tooltipDisabled\", ctx_r4.tooltipDisabled)(\"tooltipTemplate\", ctx_r4.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results);\n  }\n}\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r24 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r23.timelineXScale)(\"yScale\", ctx_r23.timelineYScale)(\"colors\", ctx_r23.colors)(\"data\", series_r24)(\"scaleType\", ctx_r23.scaleType)(\"curve\", ctx_r23.curve)(\"hasRange\", ctx_r23.hasRange)(\"animations\", ctx_r23.animations);\n  }\n}\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r5.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.timelineWidth, ctx_r5.height))(\"height\", ctx_r5.timelineHeight)(\"scheme\", ctx_r5.scheme)(\"customColors\", ctx_r5.customColors)(\"scaleType\", ctx_r5.scaleType)(\"legend\", ctx_r5.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r5.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.select.emit(circle_r2.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit({\n        name: circle_r2.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit({\n        name: circle_r2.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r2.cx)(\"cy\", circle_r2.cy)(\"r\", ctx_r1.circleRadius)(\"fill\", circle_r2.color)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(circle_r2))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n  if (rf & 2) {\n    const r_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r7);\n  }\n}\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.radiusTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r9)(\"radius\", ctx_r8.outerRadius)(\"label\", tick_r9.label)(\"max\", ctx_r8.outerRadius)(\"value\", ctx_r8.showGridLines ? 1 : ctx_r8.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r8.animations)(\"labelTrim\", ctx_r8.labelTrim)(\"labelTrimSize\", ctx_r8.labelTrimSize);\n  }\n}\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r2.yAxisScale)(\"dims\", ctx_r2.yAxisDims)(\"showGridLines\", ctx_r2.showGridLines)(\"showLabel\", ctx_r2.showYAxisLabel)(\"labelText\", ctx_r2.yAxisLabel)(\"trimTicks\", ctx_r2.trimYAxisTicks)(\"maxTickLength\", ctx_r2.maxYAxisTickLength)(\"tickFormatting\", ctx_r2.yAxisTickFormatting)(\"wrapTicks\", ctx_r2.wrapTicks);\n    i0.ɵɵattribute(\"transform\", ctx_r2.transformYAxis);\n  }\n}\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r3.xAxisLabel)(\"offset\", ctx_r3.labelOffset)(\"orient\", ctx_r3.orientation.Bottom)(\"height\", ctx_r3.dims.height)(\"width\", ctx_r3.dims.width);\n  }\n}\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r12.gradient)(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"animations\", ctx_r12.animations)(\"tooltipDisabled\", ctx_r12.tooltipDisabled)(\"tooltipTemplate\", ctx_r12.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r18.gradient)(\"xScale\", ctx_r18.xScale)(\"yScale\", ctx_r18.yScale)(\"colors\", ctx_r18.colors)(\"data\", series_r19)(\"activeEntries\", ctx_r18.activeEntries)(\"scaleType\", ctx_r18.scaleType)(\"curve\", ctx_r18.curve)(\"rangeFillOpacity\", ctx_r18.rangeFillOpacity)(\"animations\", ctx_r18.animations)(\"tooltipDisabled\", ctx_r18.tooltipDisabled)(\"tooltipTemplate\", ctx_r18.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r5.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const arc_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r1)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r1))(\"label\", ctx_r2.labelText(arc_r1))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r1.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labelVisible(arc_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"gradient\", ctx_r0.gradient)(\"data\", arc_r1.data)(\"max\", ctx_r0.max)(\"explodeSlices\", ctx_r0.explodeSlices)(\"isActive\", ctx_r0.isActive(arc_r1.data))(\"animate\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.getTooltipTitle(arc_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", arc_r1.data);\n  }\n}\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"data\", arc_r1.data)(\"gradient\", false)(\"pointerEvents\", arc_r1.pointerEvents)(\"animate\", arc_r1.animate);\n    i0.ɵɵattribute(\"class\", arc_r1.class);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r1.percent)(\"countSuffix\", \"%\");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.percent.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r1.total)(\"countPrefix\", ctx_r4.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.label, \": \", series_r1.total.toLocaleString(), \" \");\n  }\n}\nconst _c44 = function (a0) {\n  return {\n    data: a0\n  };\n};\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5);\n    i0.ɵɵtemplate(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8);\n    i0.ɵɵtemplate(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colors\", series_r1.colors)(\"data\", series_r1.data)(\"innerRadius\", series_r1.innerRadius)(\"outerRadius\", series_r1.outerRadius)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r1)))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", series_r1.data[0].data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r0.bandColor)(\"transform\", ctx_r0.transformBand)(\"d\", ctx_r0.bandPath);\n  }\n}\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r0.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height);\n  }\n}\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"color\", c_r3.color)(\"bandColor\", c_r3.bandColor)(\"textColor\", c_r3.textColor)(\"data\", c_r3.data)(\"label\", c_r3.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r2.value)(\"valueFormatting\", ctx_r2.valueFormatting);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedValue, \" \");\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template, 1, 2, \"span\", 6);\n    i0.ɵɵtemplate(5, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r1.x)(\"y\", ctx_r1.y)(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.getTextColor())(\"height\", ctx_r1.height + \"px\")(\"width\", ctx_r1.width + \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r1.data)(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"label\", c_r1.label)(\"value\", c_r1.value)(\"valueFormatting\", ctx_r0.valueFormatting)(\"labelFormatting\", ctx_r0.labelFormatting)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", c_r1.data);\n  }\n}\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.transformLine)(\"stroke\", ctx_r0.colors.getColor(ctx_r0.units));\n  }\n}\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nconst _c52 = function () {\n  return {};\n};\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r4.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tick_r4.text, \" \");\n  }\n}\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r5.line);\n  }\n}\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.rotation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r0.cornerRadius)(\"colors\", ctx_r0.colors)(\"isActive\", ctx_r0.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"valueFormatting\", ctx_r0.valueFormatting)(\"animations\", ctx_r0.animations);\n  }\n}\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7, 8)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r2.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.units);\n  }\n}\nfunction SankeyComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5)(1, \"defs\")(2, \"linearGradient\", 6);\n    i0.ɵɵelement(3, \"stop\", 7)(4, \"stop\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"path\", 9);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_2_Template__svg_path_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const link_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.select.emit(link_r3.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_2_Template__svg_path_mouseenter_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const link_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activate.emit(link_r3.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const link_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : link_r3.tooltip)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", link_r3.data);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"id\", link_r3.id)(\"x1\", link_r3.source.x1)(\"x2\", link_r3.target.x0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"stop-color\", link_r3.startColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"stop-color\", link_r3.endColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", link_r3.path)(\"stroke\", link_r3.gradientFill)(\"stroke-width\", link_r3.strokeWidth);\n  }\n}\nfunction SankeyComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10)(1, \"rect\", 11);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_3_Template__svg_rect_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rect_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.select.emit(rect_r7.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_3_Template__svg_rect_mouseenter_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rect_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.activate.emit(rect_r7.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rect_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r7.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : rect_r7.tooltip)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", rect_r7.data);\n    i0.ɵɵattribute(\"x\", 0)(\"y\", 0)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\nfunction SankeyComponent__svg_g_4__svg_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵattribute(\"x\", rect_r11.width + 5)(\"y\", rect_r11.height / 2)(\"text-anchor\", rect_r11.labelAnchor)(\"dx\", rect_r11.labelAnchor === \"end\" ? -25 : 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rect_r11.label, \" \");\n  }\n}\nfunction SankeyComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SankeyComponent__svg_g_4__svg_text_1_Template, 2, 5, \"text\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r11 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r11.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showLabels && rect_r11.height > 15);\n  }\n}\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    context = this;\n    // eslint-disable-next-line prefer-rest-params\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\nvar PlacementTypes;\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n    return placement;\n  }\n}\nclass TooltipContentComponent {\n  constructor(element, renderer, platformId) {\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n  get cssClasses() {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n  ngAfterViewInit() {\n    setTimeout(this.position.bind(this));\n  }\n  position() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) return;\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n  positionContent(nativeElm, hostDim, elmDim) {\n    const {\n      top,\n      left\n    } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n  positionCaret(hostDim, elmDim) {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const {\n      top,\n      left\n    } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n  checkFlip(hostDim, elmDim) {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n  onWindowResize() {\n    this.position();\n  }\n}\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"hidden\"], [\"caretElm\", \"\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 0, 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3);\n      i0.ɵɵtemplate(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n  destroyByType(type) {\n    const comps = this.components.get(type);\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n  assignDefaults(bindings) {\n    const inputs = {\n      ...this.defaults.inputs\n    };\n    const outputs = {\n      ...this.defaults.outputs\n    };\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n    if (inputs) {\n      bindings.inputs = {\n        ...inputs,\n        ...bindings.inputs\n      };\n    }\n    if (outputs) {\n      bindings.outputs = {\n        ...outputs,\n        ...bindings.outputs\n      };\n    }\n    return bindings;\n  }\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n  constructor(applicationRef, componentFactoryResolver, injector) {\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container) {\n    InjectionService.globalRootViewContainer = container;\n  }\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer() {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n  }\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container) {\n    this._container = container;\n  }\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(component) {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n    if (component.hostView && component.hostView.rootNodes.length > 0) {\n      return component.hostView.rootNodes[0];\n    }\n    // the top most component root node has no `hostView`\n    return component.location.nativeElement;\n  }\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(component) {\n    return this.getComponentRootNode(component);\n  }\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component, bindings) {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n    return component;\n  }\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent(componentClass, bindings = {}, location) {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n    const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(componentClass);\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass TooltipService extends InjectionRegisteryService {\n  constructor(injectionService) {\n    super(injectionService);\n    this.type = TooltipContentComponent;\n  }\n}\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\nvar LegendPosition;\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\nvar ScaleType;\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\nclass ScaleLegendComponent {\n  constructor() {\n    this.horizontal = false;\n  }\n  ngOnChanges(changes) {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n  }\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n    return pairs.join(', ');\n  }\n}\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\nclass LegendEntryComponent {\n  constructor() {\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n  get trimmedLabel() {\n    return this.formattedLabel || '(empty)';\n  }\n  onMouseEnter() {\n    this.activate.emit({\n      name: this.label\n    });\n  }\n  onMouseLeave() {\n    this.deactivate.emit({\n      name: this.label\n    });\n  }\n}\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"title\", \"click\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n  getLegendEntries() {\n    const items = [];\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n    return items;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [LegendEntryComponent, i2.NgIf, i2.NgForOf],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartComponent {\n  constructor() {\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n      if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n        if (this.legendType === LegendType.ScaleLegend) {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n    const chartColumns = 12 - legendColumns;\n    this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n  }\n  getLegendType() {\n    return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n  }\n}\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2);\n      i0.ɵɵtemplate(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  dependencies: [ScaleLegendComponent, LegendComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n  runCheck() {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n      // https://davidwalsh.name/offsetheight-visibility\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n}\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nclass BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.animations = false;\n    }\n  }\n  ngAfterViewInit() {\n    this.bindWindowResizeEvent();\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n    if (!this.height) {\n      this.height = 400;\n    }\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  getContainerDims() {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n    if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n    return null;\n  }\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates() {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (isDate(g.label)) {\n        g.label = g.label.toLocaleDateString();\n      }\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (isDate(d.label)) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n  unbindEvents() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n  bindWindowResizeEvent() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const source = fromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  cloneData(data) {\n    const results = [];\n    for (const item of data) {\n      const copy = {};\n      if (item['name'] !== undefined) {\n        copy['name'] = item['name'];\n      }\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n      if (item['source'] !== undefined) {\n        copy['source'] = item['source'];\n      }\n      if (item['target'] !== undefined) {\n        copy['target'] = item['target'];\n      }\n      results.push(copy);\n    }\n    return results;\n  }\n}\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: ` <div></div> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nvar Orientation;\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\nclass AxisLabelComponent {\n  constructor(element) {\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n    switch (this.orient) {\n      case Orientation.Top:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Bottom:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Left:\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case Orientation.Right:\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n}\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n  return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n  const labelString = (label || '').toString();\n  let totalLines = [];\n  if (/\\s/.test(labelString)) {\n    totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n      const last = (lines.pop() || '') + ' ';\n      return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n    }, []);\n  } else {\n    let startIndex = 0;\n    while (startIndex < labelString.length) {\n      totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n      startIndex += maxLength;\n    }\n  }\n  if (totalLines.length > maxLines) {\n    totalLines = totalLines.splice(0, maxLines);\n    totalLines[totalLines.length - 1] += '...';\n  }\n  return totalLines;\n}\nvar TextAnchor;\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\nclass XAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n    this.maxPossibleLengthForTickIfWrapped = 16;\n  }\n  get isWrapTicksSupported() {\n    return this.wrapTicks && this.scale.step;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.dimensionsChanged.emit({\n        height: this.approxHeight\n      });\n      return;\n    }\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({\n        height: this.height\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n    this.adjustedScale = this.scale.bandwidth ? function (d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = TextAnchor.End;\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = TextAnchor.Middle;\n    }\n    setTimeout(() => this.updateDims());\n  }\n  getRotationAngle(ticks) {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 7; // need to measure this\n    const wordWidth = len * charWidth;\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n    let labelHeight = 14;\n    if (this.isWrapTicksSupported) {\n      const longestTick = this.ticks.reduce((earlier, current) => current.length > earlier.length ? current : earlier, '');\n      const tickLines = this.tickChunks(longestTick);\n      labelHeight = 14 * (tickLines.length || 1);\n      this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n    }\n    const requiredHeight = angle !== 0 ? Math.max(Math.abs(Math.sin(angle * Math.PI / 180)) * this.maxTickLength * charWidth, 10) : labelHeight;\n    this.approxHeight = Math.min(requiredHeight, 200);\n    return angle;\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickWidth) {\n    return Math.floor(this.width / tickWidth);\n  }\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getMaxPossibleLengthForTick(longestLabel) {\n    if (this.scale.bandwidth) {\n      const averageCharacterWidth = 7; // approximate char width\n      const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n      const truncatedText = longestLabel.slice(0, maxCharacters);\n      return Math.max(truncatedText.length, this.maxTickLength);\n    }\n    return this.maxTickLength;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      const maxAllowedLines = 5;\n      let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n      if (!isPlatformBrowser(this.platformId)) {\n        possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n      }\n      maxLines = Math.min(maxLines, maxAllowedLines);\n      const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n      return lines;\n    }\n    return [this.tickTrim(label)];\n  }\n}\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\", \"font-size\", \"12px\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass XAxisComponent {\n  constructor() {\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n  emitTicksHeight({\n    height\n  }) {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          height\n        });\n      }, 0);\n    }\n  }\n}\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 13, \"g\", 0);\n      i0.ɵɵtemplate(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [XAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n  retval += `v${h - 2 * r}`;\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n  retval += `h${2 * r - w}`;\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n  retval += `v${2 * r - h}`;\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n  retval += `z`;\n  return retval;\n}\nclass YAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.width = this.getApproximateAxisWidth();\n      this.dimensionsChanged.emit({\n        width: this.width\n      });\n      return;\n    }\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({\n        width\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    this.adjustedScale = scale.bandwidth ? d => {\n      // position the tick to middle considering number of lines of the tick\n      const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n      if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n        const chunksLength = this.tickChunks(d).length;\n        if (chunksLength === 1) {\n          return positionMiddle;\n        }\n        const bandWidth = scale.bandwidth();\n        const heightOfLines = chunksLength * 8;\n        const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n        return scale(d) + availableFreeSpace;\n      }\n      return positionMiddle;\n    } : scale;\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n    switch (this.orient) {\n      case Orientation.Top:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Bottom:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Left:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.End;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case Orientation.Right:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.Start;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n  setReferencelines() {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickHeight) {\n    return Math.floor(this.height / tickHeight);\n  }\n  tickTransform(tick) {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n  gridLineTransform() {\n    return `translate(5,0)`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getApproximateAxisWidth() {\n    const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n    const charWidth = 7;\n    return maxChars * charWidth;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      // for y-axis the width of the tick is fixed\n      const preferredWidth = this.maxTickLength;\n      const maxLines = Math.floor(this.scale.bandwidth() / 15);\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n    }\n    return [this.tickFormat(label)];\n  }\n}\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [1, \"reference-area\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 2);\n      i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 3);\n      i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass YAxisComponent {\n  constructor() {\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === Orientation.Right) {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n  emitTicksWidth({\n    width\n  }) {\n    if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    }\n  }\n}\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 15, \"g\", 0);\n      i0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [YAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\nclass AxesModule {}\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\nvar StyleTypes;\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\nvar ShowTypes;\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\nclass TooltipDirective {\n  constructor(tooltipService, viewContainerRef, renderer) {\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n  get listensForFocus() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n  get listensForHover() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n  ngOnDestroy() {\n    this.hideTooltip(true);\n  }\n  onFocus() {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n  onBlur() {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n  onMouseEnter() {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n  onMouseLeave(target) {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n  showTooltip(immediate) {\n    if (this.component || this.tooltipDisabled) return;\n    const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n      this.show.emit(true);\n    }, time);\n  }\n  addHideListeners(tooltip) {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n  hideTooltip(immediate = false) {\n    if (!this.component) return;\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent();\n      // emit events\n      this.hide.emit(true);\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n  createBoundOptions() {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TooltipModule {}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n  return id();\n}\nvar BarOrientation;\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\nclass SvgLinearGradientComponent {\n  constructor() {\n    this.orientation = BarOrientation.Vertical;\n  }\n  ngOnChanges(changes) {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n    if (this.orientation === BarOrientation.Horizontal) {\n      this.x2 = '100%';\n    } else if (this.orientation === BarOrientation.Vertical) {\n      this.y1 = '100%';\n    }\n  }\n}\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass CircleComponent {\n  constructor() {\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  ngOnChanges(changes) {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n}\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar SeriesType;\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges() {\n    this.update();\n  }\n  update() {\n    this.circle = this.getActiveCircle();\n  }\n  getActiveCircle() {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n  mapDataPointToCircle(d, i) {\n    const seriesName = this.data.name;\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n    let cx;\n    if (this.scaleType === ScaleType.Time) {\n      cx = this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n    const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n    let color;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      if (this.type === SeriesType.Standard) {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n  getTooltipText({\n    tooltipLabel,\n    value,\n    seriesName,\n    min,\n    max\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n  getTooltipMinMaxText(min, max) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n  getGradientStops(color) {\n    return [{\n      offset: 0,\n      color,\n      opacity: 0.2\n    }, {\n      offset: 100,\n      color,\n      opacity: 1\n    }];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  activateCircle() {\n    this.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle() {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n}\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CircleComponent, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GridPanelComponent {}\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\nvar ClassEnum;\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.gridPanels = this.getGridPanels();\n  }\n  getGridPanels() {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = ClassEnum.Odd;\n      if (this.orient === BarOrientation.Vertical) {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === BarOrientation.Horizontal) {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  dependencies: [GridPanelComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\nclass SvgRadialGradientComponent {\n  constructor() {\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n  get stops() {\n    return this.stopsInput || this.stopsDefault;\n  }\n  set stops(value) {\n    this.stopsInput = value;\n  }\n  ngOnChanges(changes) {\n    this.r = '30%';\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [{\n        offset: 0,\n        color: this.color,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.color,\n        opacity: this.endOpacity\n      }];\n    }\n  }\n}\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass AreaComponent {\n  constructor(element) {\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    if (!this.animationsLoaded) {\n      this.loadAnimation();\n      this.animationsLoaded = true;\n    }\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n  }\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.updatePathEl.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.area');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: this.endOpacity\n    }];\n  }\n}\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n  return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n  constructor(cd, element) {\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n  set countDecimals(val) {\n    this._countDecimals = val;\n  }\n  get countDecimals() {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n  get countTo() {\n    return this._countTo;\n  }\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n  get countFrom() {\n    return this._countFrom;\n  }\n  ngOnDestroy() {\n    cancelAnimationFrame(this.animationReq);\n  }\n  start() {\n    cancelAnimationFrame(this.animationReq);\n    const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n    const callback = ({\n      value,\n      progress,\n      finished\n    }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({\n        value: this.value,\n        progress\n      });\n      if (finished) this.countFinish.emit({\n        value: this.value,\n        progress\n      });\n    };\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: ` {{ value }} `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})();\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\nclass TooltipArea {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n  getValues(xVal) {\n    const results = [];\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n        results.push(data);\n      }\n    }\n    return results;\n  }\n  mouseMove(event) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n      const curDiff = Math.abs(currentElement - xPos);\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n    return closestIndex;\n  }\n  showTooltip() {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n  hideTooltip() {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n  getToolTipText(tooltipItem) {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n}\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mousemove\", \"mouseleave\"], [\"defaultTooltipTemplate\", \"\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [\"tooltipAnchor\", \"\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 0);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template__svg_rect_mousemove_1_listener($event) {\n        return ctx.mouseMove($event);\n      })(\"mouseleave\", function TooltipArea_Template__svg_rect_mouseleave_1_listener() {\n        return ctx.hideTooltip();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : _r0)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  dependencies: [i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass Timeline {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n  update() {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n    if (this.brush) {\n      this.updateBrush();\n    }\n    this.transform = `translate(0 , ${offsetY})`;\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n    this.cd.markForCheck();\n  }\n  getXDomain() {\n    let values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n  getXScale() {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n    }\n    return scale;\n  }\n  addBrush() {\n    if (this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n      selection\n    }) => {\n      const newSelection = selection || this.xScale.range();\n      const newDomain = newSelection.map(this.xScale.invert);\n      this.onDomainChange.emit(newDomain);\n      this.cd.markForCheck();\n    });\n    select(this.element).select('.brush').call(this.brush);\n  }\n  updateBrush() {\n    if (!this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element).select('.brush').call(this.brush);\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n    this.cd.markForCheck();\n  }\n  getDims() {\n    const width = this.view[0];\n    const dims = {\n      width,\n      height: this.height\n    };\n    return dims;\n  }\n}\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedLegendComponent {\n  constructor() {\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n    this.labelFormatting = label => label;\n    this.percentageFormatting = percentage => percentage;\n    this.defaultValueFormatting = value => value.toLocaleString();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getTotal() {\n    return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n  }\n  update() {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n    this.legendItems = this.getLegendItems();\n  }\n  getLegendItems() {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? value / this.total * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CountUpDirective, i2.NgIf, i2.NgForOf],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\nclass ChartCommonModule {}\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [...COMPONENTS, VisibilityObserver],\n      exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n    }]\n  }], null, null);\n})();\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n      default:\n        break;\n    }\n    return colorScale;\n  }\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value);\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n    return stops;\n  }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n  return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n  let min;\n  let max;\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max];\n    // Use compare function to sort numbers numerically\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\nclass AreaSeriesComponent {\n  constructor() {\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradient();\n    let currentArea;\n    let startingArea;\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    if (this.stacked || this.normalized) {\n      currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n      startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n      startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n    this.opacity = 0.8;\n    let data = this.data.series;\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n  updateGradient() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass AreaChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.baseValue = 'auto';\n    this.autoScale = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getScaleType(values) {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (isDate(value)) {\n        date = false;\n      }\n      if (isNumber(value)) {\n        num = false;\n      }\n    }\n    if (date) {\n      return ScaleType.Time;\n    }\n    if (num) {\n      return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n}();\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.yDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.seriesType = SeriesType;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n        if (total > 0) {\n          d.d0 = d.d0 * 100 / total;\n          d.d1 = d.d1 * 100 / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n}();\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.seriesType = SeriesType;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          sum += d.value;\n        }\n      }\n      domain.push(sum);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n}();\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartStackedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartModule {}\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass BarComponent {\n  constructor(element) {\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n    this.update();\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      node.transition().duration(500).attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === BarOrientation.Vertical) {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n    return path;\n  }\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n    return path;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n  }\n}\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template__svg_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar BarChartType;\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\nvar D0Types;\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nclass BarLabelComponent {\n  constructor(element) {\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getSize() {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return {\n      height: h,\n      width: w,\n      negative: this.value < 0\n    };\n  }\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n  update() {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth;\n      // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n}\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass SeriesHorizontal {\n  constructor() {\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n    this.bars = this.series.map(d => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n      bar.height = this.yScale.bandwidth();\n      if (this.type === BarChartType.Standard) {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n  click(data) {\n    this.select.emit(data);\n  }\n}\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarHorizontalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n  }\n  getXDomain() {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n  getYDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n}();\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontal2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n}();\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 11, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵtemplate(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n}();\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n}();\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SeriesVerticalComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      if (this.type === BarChartType.Standard) {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarVerticalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getXDomain() {\n    return this.results.map(d => d.label);\n  }\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n}();\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 12, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVertical2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.scaleType = ScaleType.Ordinal;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVertical2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n}();\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 11, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVertical2DComponent__svg_g_4_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n}();\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n}();\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarChartModule {}\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\nconst cloneDeep = rfdc();\nclass BoxComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n  update() {\n    this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n    this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n    this.medianLineWidth = 1.5 * this.strokeWidth;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updateLineEl();\n    this.updatePathEl();\n    this.checkToHideBar();\n    this.maskLineId = 'mask' + id().toString();\n    this.maskLine = `url(#${this.maskLineId})`;\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  loadAnimation() {\n    this.boxPath = this.oldPath = this.getStartingPath();\n    this.oldLineCoordinates = this.getStartingLineCoordinates();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const nodeBar = select(this.nativeElm).selectAll('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n    } else {\n      nodeBar.attr('d', path);\n    }\n    this.oldPath = path;\n  }\n  updateLineEl() {\n    const lineEl = select(this.nativeElm).selectAll('.bar-line');\n    const lineCoordinates = this.lineCoordinates;\n    const oldLineCoordinates = this.oldLineCoordinates;\n    if (this.animations) {\n      lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    } else {\n      lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    }\n    this.oldLineCoordinates = [...lineCoordinates];\n  }\n  /**\n   * See [D3 Selections](https://www.d3indepth.com/selections/)\n   * @param d The joined data.\n   * @param index The index of the element within the selection\n   * @param node The node element (Line).\n   */\n  lineTween(attr, d, index, node) {\n    const nodeLineEl = node[index];\n    return nodeLineEl[attr].baseVal.value;\n  }\n  // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n  pathTween(d1, precision) {\n    return function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const path0 = this;\n      const path1 = this.cloneNode();\n      path1.setAttribute('d', d1);\n      const n0 = path0?.getTotalLength();\n      const n1 = path1?.getTotalLength();\n      // Uniform sampling of distance based on specified precision.\n      const distances = [0];\n      let i = 0;\n      const dt = precision / Math.max(n0, n1);\n      while (i < 1) {\n        distances.push(i);\n        i += dt;\n      }\n      distances.push(1);\n      // Compute point-interpolators at each distance.\n      const points = distances.map(t => {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n      // 't': T is the fraction of time (between 0 and 1) since the transition began.\n      return t => {\n        return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n      };\n    };\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    const radius = this.roundEdges ? 1 : 0;\n    const {\n      x,\n      y\n    } = this.lineCoordinates[2].v1;\n    return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n  }\n  getPath() {\n    const radius = this.getRadius();\n    let path = '';\n    path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n    return path;\n  }\n  getStartingLineCoordinates() {\n    if (!this.animations) {\n      return [...this.lineCoordinates];\n    }\n    const lineCoordinates = cloneDeep(this.lineCoordinates);\n    lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n    return lineCoordinates;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getGradient() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      edges = [true, true, true, true];\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && this.height === 0;\n  }\n}\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template__svg_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BoxSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  update() {\n    this.updateTooltipSettings();\n    const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n    const seriesName = this.series.name;\n    // Calculate Quantile and Whiskers for each box serie.\n    this.counts = this.series.series;\n    const mappedCounts = this.counts.map(serie => Number(serie.value));\n    this.whiskers = [min(mappedCounts), max(mappedCounts)];\n    // We get the group count and must sort it in order to retrieve quantiles.\n    const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n    this.quartiles = this.getBoxQuantiles(groupCounts);\n    this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n    const value = this.quartiles[1];\n    const formattedLabel = formatLabel(seriesName);\n    const box = {\n      value,\n      data: this.counts,\n      label: seriesName,\n      formattedLabel,\n      width,\n      height: 0,\n      x: 0,\n      y: 0,\n      roundEdges: this.roundEdges,\n      quartiles: this.quartiles,\n      lineCoordinates: this.lineCoordinates\n    };\n    box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n    box.x = this.xScale(seriesName.toString());\n    box.y = this.yScale(this.quartiles[2]);\n    box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n    if (this.colors.scaleType === ScaleType.Ordinal) {\n      box.color = this.colors.getColor(seriesName);\n    } else {\n      box.color = this.colors.getColor(this.quartiles[1]);\n      box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n    }\n    const tooltipLabel = formattedLabel;\n    const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n    box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n    this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n    this.box = box;\n  }\n  getBoxQuantiles(inputData) {\n    return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n  }\n  getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n    // The X value is not being centered, so had to sum half the width to align it.\n    const commonX = this.xScale(seriesName);\n    const offsetX = commonX + barWidth / 2;\n    const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n    const whiskerLineWidth = Math.max(barWidth / 3, 1);\n    const whiskerZero = this.yScale(whiskers[0]);\n    const whiskerOne = this.yScale(whiskers[1]);\n    const median = this.yScale(quartiles[1]);\n    const topLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerZero\n      }\n    };\n    const medianLine = {\n      v1: {\n        x: offsetX + medianLineWidth / 2,\n        y: median\n      },\n      v2: {\n        x: offsetX - medianLineWidth / 2,\n        y: median\n      }\n    };\n    const bottomLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerOne\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerOne\n      }\n    };\n    const verticalLine = {\n      v1: {\n        x: offsetX,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX,\n        y: whiskerOne\n      }\n    };\n    return [verticalLine, topLine, medianLine, bottomLine];\n  }\n  updateTooltipSettings() {\n    if (this.tooltipDisabled) {\n      this.tooltipPlacement = undefined;\n      this.tooltipType = undefined;\n    } else {\n      if (!this.tooltipPlacement) {\n        this.tooltipPlacement = PlacementTypes.Top;\n      }\n      if (!this.tooltipType) {\n        this.tooltipType = StyleTypes.tooltip;\n      }\n    }\n  }\n}\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template__svg_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template__svg_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template__svg_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BoxChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    /** Show or hide the legend. */\n    this.legend = false;\n    this.legendPosition = LegendPosition.Right;\n    this.legendTitle = 'Legend';\n    this.showGridLines = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.strokeColor = '#FFFFFF';\n    this.strokeWidth = 2;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n    this.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n    this.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n    this.yAxisWidth = 0;\n  }\n  trackBy(index, item) {\n    return item.name;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  setColors() {\n    let domain = [];\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  setScales() {\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n  }\n  getXScale(domain, width) {\n    const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().domain(domain).range([height, 0]);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getUniqueBoxChartXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n      valueSet.add(result.name);\n    }\n    return Array.from(valueSet);\n  }\n  getXDomain() {\n    let domain = [];\n    const values = this.getUniqueBoxChartXDomainValues(this.results);\n    let min;\n    let max;\n    if (typeof values[0] === 'string') {\n      domain = values.map(val => val.toString());\n    } else if (typeof values[0] === 'number') {\n      const mappedValues = values.map(v => Number(v));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [min, max];\n    } else {\n      const mappedValues = values.map(v => Number(new Date(v)));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [new Date(min), new Date(max)];\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    const mappedValues = values.map(v => Number(v));\n    const min = Math.min(...mappedValues);\n    const max = Math.max(...mappedValues);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => `${d.name}`);\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  onActivate(data) {\n    this.activate.emit(data);\n  }\n  onDeactivate(data) {\n    this.deactivate.emit(data);\n  }\n  getLegendOptions() {\n    const legendOpts = {\n      scaleType: this.schemeType,\n      colors: this.colors,\n      domain: [],\n      position: this.legendPosition,\n      title: this.legendTitle\n    };\n    if (this.schemeType === ScaleType.Ordinal) {\n      legendOpts.domain = this.xDomain;\n      legendOpts.colors = this.colors;\n    } else {\n      legendOpts.domain = this.yDomain;\n      legendOpts.colors = this.colors.scale;\n    }\n    return legendOpts;\n  }\n}\nBoxChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n}();\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 23,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\", \"activate\", \"deactivate\", \"select\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(20, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BoxSeriesComponent, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass BoxChartModule {}\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n  return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n        if (roundDomains) {\n          return scale.nice();\n        }\n        return scale;\n      }\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n    default:\n      return undefined;\n  }\n}\nclass BubbleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.circles = this.getCircles();\n  }\n  getCircles() {\n    const seriesName = this.data.name;\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n        const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n        const isActive = !this.activeEntries.length ? true : this.isActive({\n          name: seriesName\n        });\n        const opacity = isActive ? 1 : 0.3;\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter(circle => circle !== undefined);\n  }\n  getTooltipText(circle) {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isVisible(circle) {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({\n        name: circle.seriesName\n      });\n    }\n    return circle.opacity !== 0;\n  }\n  activateCircle(circle) {\n    circle.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle(circle) {\n    circle.barVisible = false;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n  trackBy(index, circle) {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CircleComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BubbleChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showGridLines = true;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.maxRadius = 10;\n    this.minRadius = 3;\n    this.schemeType = ScaleType.Ordinal;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.scaleType = ScaleType.Linear;\n    this.margin = [10, 20, 10, 20];\n    this.bubblePadding = [0, 0, 0, 0];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.activeEntries = [];\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n    const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n    this.data = this.results;\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n    this.legendOptions = this.getLegendOptions();\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  hideCircles() {\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n    return [yMin, xMax, yMax, xMin];\n  }\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n  getYScale(domain, height) {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n  getXScale(domain, width) {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n  getRScale(domain, range) {\n    const scale = scaleLinear().range(range).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  getXDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n  getYDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n  getRDomain() {\n    let min = Infinity;\n    let max = -Infinity;\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n    return [min, max];\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nBubbleChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n}();\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, BubbleChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template__svg_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5);\n      i0.ɵɵtemplate(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BubbleSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BubbleChartModule {}\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass HeatMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    node.transition().duration(750).attr('opacity', 1);\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n}\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass HeatCellSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    const cells = [];\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n    return cells;\n  }\n  getTooltipText({\n    label,\n    data,\n    series\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [HeatMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass HeatMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.innerPadding = 8;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.scaleType = ScaleType.Linear;\n  }\n  update() {\n    super.update();\n    this.formatDates();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n    this.scaleType = getScaleType(this.valueDomain, false);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n    if (this.scaleType === ScaleType.Linear) {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n  getXDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    return domain;\n  }\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value, index = 0, N, L) {\n    if (typeof value === 'string') {\n      value = value.replace('[', '').replace(']', '').replace('px', '')\n      // tslint:disable-next-line: quotemark\n      .replace(\"'\", '');\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n  getXScale() {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n  }\n  getYScale() {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n  }\n  getRects() {\n    const rects = [];\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n    return rects;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n      title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nHeatMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n}();\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"legendOptions\", \"legendLabelClick\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template__svg_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template__svg_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template__svg_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, HeatCellSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass HeatMapModule {}\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\nclass LineComponent {\n  constructor(element, platformId) {\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true;\n    // @Output() select = new EventEmitter();\n    this.initialized = false;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n  updatePathEl() {\n    const node = select(this.element.nativeElement).select('.line');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0);\n      i0.ɵɵtemplate(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const data = this.sortData(this.data.series);\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n  getLineGenerator() {\n    return line().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y(d => this.yScale(d.value)).curve(this.curve);\n  }\n  getRangeGenerator() {\n    return area().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n  }\n  getAreaGenerator() {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    return data;\n  }\n  updateGradients() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, AreaComponent, LineComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showRefLines = false;\n    this.showRefLabels = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, width]).domain(domain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, width]).domain(domain);\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n    }\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    this.deactivateAll();\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nLineChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n}();\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, LineChartComponent__svg_g_6_Template, 1, 13, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LineChartModule {}\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PieLabelComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n  ngOnChanges(changes) {\n    this.setTransforms();\n    this.update();\n  }\n  setTransforms() {\n    if (isPlatformServer(this.platformId)) {\n      this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = `translate(${this.textX},${this.textY})`;\n      this.textTransition = !this.animations ? null : 'transform 0.75s';\n    } else {\n      const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n      this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n      this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n    }\n  }\n  update() {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n  get textX() {\n    return this.data.pos[0];\n  }\n  get textY() {\n    return this.data.pos[1];\n  }\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\nclass PolarSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const line = this.getLineGenerator();\n    const data = this.sortData(this.data.series);\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n    this.path = line(data) || '';\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === ScaleType.Time) {\n      return this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n  getLineGenerator() {\n    return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n  defaultTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n    if (!this.hasGradient) {\n      return;\n    }\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, LineComponent, CircleComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveCardinalClosed;\n    this.activeEntries = [];\n    this.rangeFillOpacity = 0.15;\n    this.trimYAxisTicks = true;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showSeriesOnHover = true;\n    this.gradient = false;\n    this.yAxisMinScale = 0;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    // series: any; // ???\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.orientation = Orientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.setTicks();\n  }\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n    const minDistance = 10;\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n  getXValues() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n  getXDomain(values = this.getXValues()) {\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n  getYValues() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n  getYDomain(domain = this.getYValues()) {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    switch (this.scaleType) {\n      case ScaleType.Time:\n        return scaleTime().range([0, width]).domain(domain);\n      case ScaleType.Linear:\n        {\n          const scale = scaleLinear().range([0, width]).domain(domain);\n          return this.roundDomains ? scale.nice() : scale;\n        }\n      default:\n        return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n    }\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([0, height]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    if (this.schemeType === ScaleType.Ordinal) {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nPolarChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n}();\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3);\n      i0.ɵɵtemplate(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5);\n      i0.ɵɵtemplate(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3);\n      i0.ɵɵtemplate(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieArcComponent {\n  constructor(element) {\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n  update() {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n  }\n  loadAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().attrTween('d', function (d) {\n      this._current = this._current || d;\n      const copyOfD = Object.assign({}, d);\n      copyOfD.endAngle = copyOfD.startAngle;\n      const interpolater = interpolate(copyOfD, copyOfD);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    }).transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  updateAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  onClick() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template__svg_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template__svg_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template__svg_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template__svg_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass PieSeriesComponent {\n  constructor() {\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    const pieGenerator = pie().value(d => d.value).sort(null);\n    const arcData = pieGenerator(this.series);\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n  outerArc() {\n    const factor = 1.5;\n    return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n  }\n  calculateLabelPositions(pieData) {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    return labelPositions;\n  }\n  labelVisible(myArc) {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n  labelText(myArc) {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n  label(myArc) {\n    return formatLabel(myArc.data.name);\n  }\n  defaultTooltipText(myArc) {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  color(myArc) {\n    return this.colors.getColor(this.label(myArc));\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", \"dblclick\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieLabelComponent, PieArcComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedPieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width * 4 / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n}();\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\", \"select\", \"activate\", \"deactivate\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\", \"select\", \"activate\", \"deactivate\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass PieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = false;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.explodeSlices = false;\n    this.doughnut = false;\n    this.arcWidth = 0.25;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.dblclick = new EventEmitter();\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  update() {\n    super.update();\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n    this.domain = this.getDomain();\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  hasNoOptionalMarginsSet() {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\nPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n}();\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"dblclick\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template__svg_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template__svg_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template__svg_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n  return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n  return res;\n}\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\nclass PieGridSeriesComponent {\n  constructor(element) {\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.layout = pie().value(d => d.data.value).sort(null);\n    this.arcs = this.getArcs();\n  }\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n  onClick(data) {\n    this.select.emit(this.data[0].data);\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  label(arc) {\n    return arc.data.name;\n  }\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n}\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieArcComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass PieGridComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.minWidth = 150;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n    this.series = this.getSeries();\n    this.setColors();\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  defaultTooltipText({\n    data\n  }) {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  getSeries() {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n  getTotal() {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nPieGridComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n}();\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  dependencies: [ChartComponent, PieGridSeriesComponent, CountUpDirective, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieChartModule {}\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PolarChartModule {}\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\nclass CardComponent {\n  constructor(element, cd, zone, platformId) {\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR();\n    }\n  }\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }\n  update() {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n      this.label = this.label ? this.label : this.data.name;\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n      const value = hasValue ? valueFormatting(cardData) : '';\n      this.value = this.paddedValue(value);\n      this.setPadding();\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n      setTimeout(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.scaleText();\n        }\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n  paddedValue(value) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n  startCount() {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const callback = ({\n        value,\n        finished\n      }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({\n            label: this.label,\n            data: this.data,\n            value\n          });\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n  scaleText() {\n    this.zone.run(() => {\n      const {\n        width,\n        height\n      } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n  scaleTextSSR() {\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n    const height = 18;\n    const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const availableWidth = this.cardWidth - 2 * textPadding;\n    const availableHeight = this.cardHeight / 3;\n    const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n    this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n    this.labelFontSize = Math.min(this.textFontSize, 15);\n    this.setPadding();\n  }\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n}\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"textEl\", \"\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template__svg_g_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelement(1, \"rect\", 1);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 2);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 3);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 5, 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\nclass CardSeriesComponent {\n  constructor() {\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const sortedLengths = this.data.map(d => {\n        const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n        return hasValue ? valueFormatting({\n          data: d.data,\n          label: d ? d.data.name : '',\n          value: d && d.data ? d.data.value : ''\n        }).length : 0;\n      }).sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n  getCards() {\n    const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n  trackBy(index, card) {\n    return card.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0);\n      i0.ɵɵtemplate(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CardComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass NumberCardComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.innerPadding = 15;\n    this.margin = [10, 10, 10, 10];\n  }\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n    const data = this.results.slice();\n    while (data.length < N) {\n      data.push({\n        value: null\n      });\n    }\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nNumberCardComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n}();\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\nclass NumberCardModule {}\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\nclass TreeMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n  update() {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n    this.animateToCurrentForm();\n  }\n  getTextColor() {\n    return invertColor(this.fill);\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    if (this.animations) {\n      node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    } else {\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    }\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: 0.3\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n}\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CountUpDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapCellSeriesComponent {\n  constructor() {\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n  ngOnChanges(changes) {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    return this.data.children.filter(d => {\n      return d.depth === 1;\n    }).map((d, index) => {\n      const label = d.id;\n      return {\n        data: d.data,\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n        fill: this.colors.getColor(label),\n        label,\n        value: d.value\n      };\n    });\n  }\n  getTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [TreeMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.domain = this.getDomain();\n    this.treemap = treemap().size([this.dims.width, this.dims.height]);\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n    const root = stratify().id(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n      return label;\n    }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n    this.data = this.treemap(root);\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nTreeMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n}();\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"select\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass TreeMapModule {}\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\nvar ElementType;\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.margin = [10, 20, 10, 20];\n    this.valueResizeScale = 1;\n    this.unitsResizeScale = 1;\n    this.valueTextTransform = '';\n    this.valueTranslate = '';\n    this.unitsTextTransform = '';\n    this.unitsTranslate = '';\n    this.barOrientation = BarOrientation;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText(ElementType.Value);\n      this.scaleText(ElementType.Units);\n    });\n  }\n  update() {\n    super.update();\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.setColors();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR('value');\n      this.scaleTextSSR('units');\n    } else {\n      setTimeout(() => this.scaleText(ElementType.Value), 50);\n      setTimeout(() => this.scaleText(ElementType.Units), 50);\n    }\n  }\n  getValueDomain() {\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n  scaleText(element, repeat = true) {\n    let el;\n    let resizeScale;\n    if (element === ElementType.Value) {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n    const {\n      width,\n      height\n    } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (resizeScale !== oldScale) {\n      if (element === ElementType.Value) {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n      if (repeat && isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n  scaleTextSSR(element) {\n    let resizeScale = 1;\n    const value = element === 'value' ? this.displayValue : this.units;\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n    const height = 25;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (element === 'value') {\n      this.valueResizeScale = resizeScale;\n      this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    } else {\n      this.unitsResizeScale = resizeScale;\n      this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    }\n    this.cd.markForCheck();\n  }\n  onClick() {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n  }\n}\nLinearGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n}();\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"click\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"valueTextEl\", \"\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"unitsTextEl\", \"\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2)(3, \"g\", 3);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 4);\n      i0.ɵɵtemplate(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 5);\n      i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 6, 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"g\")(12, \"text\", 8, 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  dependencies: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\nclass GaugeArcComponent {\n  constructor() {\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  tooltipText(arc) {\n    const label = formatLabel(arc.data.name);\n    let val;\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template__svg_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template__svg_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template__svg_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  dependencies: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GaugeAxisComponent {\n  constructor() {\n    this.rotate = '';\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n  getTicks() {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n      const textAnchor = this.getTextAnchor(angleDeg);\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n      if (i === this.bigSegments) {\n        continue;\n      }\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n    return ticks;\n  }\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = TextAnchor.Middle;\n    if (angle > 45 && angle <= 135) {\n      textAnchor = TextAnchor.Start;\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = TextAnchor.End;\n    }\n    return textAnchor;\n  }\n  getTickPath(startDistance, tickLength, angle) {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n    const points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x2,\n      y: y2\n    }];\n    const lineGenerator = line().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n}\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0);\n      i0.ɵɵtemplate(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0);\n      i0.ɵɵtemplate(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass GaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.min = 0;\n    this.max = 100;\n    this.bigSegments = 10;\n    this.smallSegments = 5;\n    this.showAxis = true;\n    this.startAngle = -120;\n    this.angleSpan = 240;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.showText = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.resizeScale = 1;\n    this.rotation = '';\n    this.textTransform = 'scale(1, 1)';\n    this.cornerRadius = 10;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n  update() {\n    super.update();\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = this.startAngle % 360 + 360;\n    }\n    this.angleSpan = Math.min(this.angleSpan, 360);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n    this.arcs = this.getArcs();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n  getArcs() {\n    const arcs = [];\n    const availableRadius = this.outerRadius * 0.7;\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n      arcs.push(arc);\n      i++;\n    }\n    return arcs;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  getValueDomain() {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n    return value.toLocaleString();\n  }\n  scaleText(repeat = true) {\n    if (!this.showText) {\n      return;\n    }\n    const {\n      width\n    } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n    }\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n  trackBy(index, item) {\n    return item.valueArc.data.name;\n  }\n}\nGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n}();\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"textEl\", \"\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  dependencies: [ChartComponent, GaugeArcComponent, GaugeAxisComponent, i2.NgForOf, i2.NgIf],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\nclass GaugeModule {}\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})();\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\nclass SankeyComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showLabels = true;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n    this.scaleType = ScaleType.Ordinal;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      legendType: this.scaleType\n    });\n    const linkDefs = this.results;\n    const nodeDefs = Array.from(new Set(linkDefs.flatMap(l => [l.source, l.target])), name => ({\n      name,\n      value: linkDefs.filter(l => l.source === name).reduce((acc, l) => acc + l.value, 0)\n    }));\n    // Configure generator\n    const sankeyGenerator = sankey().nodeId(d => d.name).nodeAlign(sankeyLeft).nodeWidth(15).nodePadding(10).extent([[1, 5], [this.dims.width - 1, this.dims.height - 5]]);\n    // Generate links and nodes\n    const data = sankeyGenerator({\n      nodes: nodeDefs.map(d => Object.assign({}, d)),\n      links: linkDefs.map(d => Object.assign({}, d))\n    });\n    this.valueDomain = this.getValueDomain(data.nodes);\n    this.setColors();\n    this.nodeRects = data.nodes.map(node => {\n      const rect = {\n        x: node.x0,\n        y: node.y0,\n        height: node.y1 - node.y0,\n        width: node.x1 - node.x0,\n        fill: this.colors.getColor(node.name),\n        tooltip: this.getNodeTooltipText(node),\n        rx: 5,\n        data: {\n          name: node.name,\n          value: node.value\n        },\n        transform: '',\n        label: this.labelFormatting ? this.labelFormatting(node.name) : node.name,\n        labelAnchor: TextAnchor.Start\n      };\n      rect.labelAnchor = this.getTextAnchor(node);\n      rect.transform = `translate(${rect.x},${rect.y})`;\n      return rect;\n    });\n    this.linkPaths = data.links.map(link => {\n      const gradientId = 'mask' + id().toString();\n      const linkPath = {\n        path: sankeyLinkHorizontal()(link),\n        strokeWidth: Math.max(1, link.width),\n        tooltip: this.getLinkTooltipText(link.source, link.target, link.value),\n        id: gradientId,\n        gradientFill: `url(#${gradientId})`,\n        source: link.source,\n        target: link.target,\n        startColor: this.colors.getColor(link.source.name),\n        endColor: this.colors.getColor(link.target.name),\n        data: {\n          source: link.source.name,\n          target: link.target.name,\n          value: link.value\n        }\n      };\n      return linkPath;\n    });\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getNodeTooltipText(node) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(node.name)}</span>\n      <span class=\"tooltip-val\">${node.value.toLocaleString()}</span>\n    `;\n  }\n  getLinkTooltipText(sourceNode, targetNode, value) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(sourceNode.name)} • ${escapeLabel(targetNode.name)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()} (${(value / sourceNode.value).toLocaleString(undefined, {\n      style: 'percent',\n      maximumFractionDigits: 2\n    })})</span>\n    `;\n  }\n  getTextAnchor(node) {\n    if (node.layer === 0) {\n      return TextAnchor.Start;\n    } else {\n      return TextAnchor.End;\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getValueDomain(nodes) {\n    return nodes.map(n => n.name);\n  }\n}\nSankeyComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵSankeyComponent_BaseFactory;\n  return function SankeyComponent_Factory(t) {\n    return (ɵSankeyComponent_BaseFactory || (ɵSankeyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SankeyComponent)))(t || SankeyComponent);\n  };\n}();\nSankeyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SankeyComponent,\n  selectors: [[\"ngx-charts-sankey\"]],\n  contentQueries: function SankeyComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[3, \"view\", \"animations\"], [1, \"sankey\", \"chart\"], [\"class\", \"link\", \"ngx-tooltip\", \"\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"node\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-tooltip\", \"\", 1, \"link\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"gradientUnits\", \"userSpaceOnUse\"], [\"offset\", \"0%\"], [\"offset\", \"100%\"], [\"stroke-opacity\", \"0.5\", \"fill\", \"none\", 3, \"click\", \"mouseenter\"], [1, \"node\"], [\"ngx-tooltip\", \"\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"click\", \"mouseenter\"], [\"class\", \"label\", \"dy\", \"0.35em\", 4, \"ngIf\"], [\"dy\", \"0.35em\", 1, \"label\"]],\n  template: function SankeyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, SankeyComponent__svg_g_2_Template, 6, 14, \"g\", 2);\n      i0.ɵɵtemplate(3, SankeyComponent__svg_g_3_Template, 2, 12, \"g\", 3);\n      i0.ɵɵtemplate(4, SankeyComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(6, _c24, ctx.width, ctx.height))(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.linkPaths);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n    }\n  },\n  dependencies: [ChartComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SankeyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-sankey',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SankeyModule {}\nSankeyModule.ɵfac = function SankeyModule_Factory(t) {\n  return new (t || SankeyModule)();\n};\nSankeyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SankeyModule\n});\nSankeyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SankeyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [SankeyComponent],\n      exports: [SankeyComponent]\n    }]\n  }], null, null);\n})();\nclass NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n}\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, SankeyModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, SankeyModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n    return label.toString();\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, SankeyComponent, SankeyModule, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","sankey","sankeyLeft","sankeyLinkHorizontal","timeFormat","_c0","TooltipContentComponent_span_4_ng_template_1_Template","rf","ctx","_c1","a0","model","TooltipContentComponent_span_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵproperty","template","ɵɵpureFunction1","context","TooltipContentComponent_span_5_Template","ɵɵelement","ctx_r2","title","ɵɵsanitizeHtml","LegendComponent_header_1_Template","ɵɵtext","ctx_r0","ɵɵtextInterpolate","LegendComponent_li_4_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵresetView","labelClick","emit","LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener","ctx_r5","activate","LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener","ctx_r6","deactivate","entry_r2","$implicit","label","formattedLabel","color","isActive","ChartComponent_ngx_charts_scale_legend_3_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","legendOptions","position","LegendPosition","Below","domain","colors","view","legendWidth","ChartComponent_ngx_charts_legend_4_Template","_r3","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener","legendLabelClick","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener","ctx_r4","legendLabelActivate","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener","legendLabelDeactivate","activeEntries","_c2","_c3","_c4","_c5","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","ɵɵelementContainer","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template","tickLine_r14","i_r15","index","ɵɵattribute","ɵɵtextInterpolate1","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","tickLines_r12","ngIf","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r3","ctx_r8","tickChunks","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r5","ctx_r10","tickTrim","XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵtemplateRefExtractor","_r7","ɵɵreference","_r9","textAnchor","textTransform","isWrapTicksSupported","XAxisTicksComponent__svg_g_2_Template","tickTransform","tickFormat","XAxisTicksComponent__svg_g_3__svg_g_1_Template","ctx_r19","gridLineTransform","gridLineHeight","XAxisTicksComponent__svg_g_3_Template","tick_r18","showGridLines","_c6","XAxisComponent__svg_g_1_Template","XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksHeight","trimTicks","rotateTicks","maxTickLength","tickFormatting","tickArguments","tickStroke","xScale","xOrient","dims","height","width","ticks","wrapTicks","XAxisComponent__svg_g_2_Template","labelText","labelOffset","orientation","Bottom","_c7","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template","tickLine_r17","i_r18","ctx_r16","tickSpacing","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template","tickLines_r14","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","_r11","length","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r5","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r7","ctx_r12","YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵstyleProp","dy","x1","y1","YAxisTicksComponent__svg_g_2_Template","transform","YAxisTicksComponent__svg_path_3_Template","referenceAreaPath","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template","ctx_r24","gridLineWidth","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template","ctx_r25","YAxisTicksComponent__svg_g_4__svg_g_1_Template","ctx_r23","orient","Orientation","Left","Right","YAxisTicksComponent__svg_g_4_Template","tick_r22","YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template","refLine_r26","ctx_r28","value","name","YAxisTicksComponent__svg_g_5__svg_g_1_Template","ctx_r27","showRefLabels","YAxisTicksComponent__svg_g_5_Template","showRefLines","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksWidth","yScale","yOrient","referenceLines","YAxisComponent__svg_g_2_Template","_c9","SvgLinearGradientComponent__svg_stop_1_Template","stop_r1","opacity","offset","_c10","_c11","CircleSeriesComponent__svg_g_0__svg_rect_3_Template","circle","cx","radius","cy","gradientFill","CircleSeriesComponent__svg_g_0__svg_rect_4_Template","_c12","CircleSeriesComponent__svg_g_0_Template","CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener","onClick","data","CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener","activateCircle","CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener","deactivateCircle","barOrientation","Vertical","gradientId","gradientStops","isSSR","barVisible","type","ɵɵclassProp","seriesName","classNames","tooltipDisabled","placementTypes","Top","styleTypes","tooltip","tooltipTemplate","undefined","getTooltipText","_c13","_c14","GridPanelSeriesComponent__svg_g_0_Template","gridPanel_r1","class","x","y","_c15","SvgRadialGradientComponent__svg_stop_1_Template","_c16","AreaComponent__svg_defs_0_Template","_c17","_c18","_c19","TooltipArea__svg_ng_template_2__xhtml_div_1_Template","tooltipItem_r5","getToolTipText","TooltipArea__svg_ng_template_2_Template","model_r3","_c20","AdvancedLegendComponent_div_1_Template","roundedTotal","valueFormatting","AdvancedLegendComponent_div_2_Template","defaultValueFormatting","AdvancedLegendComponent_div_7_div_2_Template","legendItem_r3","_value","AdvancedLegendComponent_div_7_div_3_Template","AdvancedLegendComponent_div_7_div_6_Template","percentage","AdvancedLegendComponent_div_7_div_7_Template","toLocaleString","AdvancedLegendComponent_div_7_Template","_r13","AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener","restoredCtx","AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener","ctx_r14","AdvancedLegendComponent_div_7_Template_div_click_0_listener","ctx_r15","animations","displayLabel","_c21","_c22","_c23","AreaChartComponent__svg_g_5_Template","_r6","AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","updateXAxisHeight","showXAxisLabel","xAxisLabel","trimXAxisTicks","rotateXAxisTicks","maxXAxisTickLength","xAxisTickFormatting","xAxisTicks","AreaChartComponent__svg_g_6_Template","_r8","AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","ctx_r7","updateYAxisWidth","showYAxisLabel","yAxisLabel","trimYAxisTicks","maxYAxisTickLength","yAxisTickFormatting","yAxisTicks","AreaChartComponent__svg_g_8_Template","series_r9","baseValue","scaleType","gradient","curve","AreaChartComponent__svg_g_9__svg_g_2_Template","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","series_r11","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","onActivate","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","onDeactivate","hoveredVertical","AreaChartComponent__svg_g_9_Template","_r17","AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","hideCircles","AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener","ctx_r18","updateHoveredVertical","xSet","results","seriesTooltipTemplate","AreaChartComponent__svg_g_10__svg_g_1_Template","series_r20","timelineXScale","timelineYScale","_c24","a1","AreaChartComponent__svg_g_10_Template","_r22","AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","ctx_r21","updateDomain","ɵɵpureFunction2","timelineWidth","timelineHeight","scheme","customColors","legend","timelineTransform","trackBy","AreaChartNormalizedComponent__svg_g_5_Template","AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_6_Template","AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_8_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","seriesType","Stacked","AreaChartNormalizedComponent__svg_g_9_Template","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template","AreaChartNormalizedComponent__svg_g_10_Template","AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c25","AreaChartStackedComponent__svg_g_5_Template","AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_6_Template","AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_8_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","AreaChartStackedComponent__svg_g_9_Template","AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartStackedComponent__svg_g_10__svg_g_1_Template","AreaChartStackedComponent__svg_g_10_Template","AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c26","BarComponent__svg_defs_0_Template","_c27","_c28","SeriesHorizontal__svg_g_0_Template","SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener","click","SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener","SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener","bar_r2","Horizontal","roundEdges","ariaLabel","tooltipPlacement","tooltipType","tooltipText","noBarWhenZero","SeriesHorizontal__svg_g_1__svg_g_1_Template","SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r9","dataLabelWidthChanged","size","b_r8","total","dataLabelFormatting","SeriesHorizontal__svg_g_1_Template","barsForDataLabels","trackDataLabelBy","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalComponent__svg_g_3_Template","_r5","BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxWidth","negative","BarHorizontal2DComponent__svg_g_3_Template","BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","valueScale","BarHorizontal2DComponent__svg_g_4_Template","BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","groupScale","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template","_r12","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r9","ctx_r11","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","ctx_r13","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r10","onDataLabelMaxWidthChanged","groupTransform","innerScale","series","showDataLabel","BarHorizontal2DComponent__svg_g_5_Template","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template","_r20","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener","group_r17","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener","ctx_r22","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r18","BarHorizontal2DComponent__svg_g_6_Template","BarHorizontalNormalizedComponent__svg_g_2_Template","BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_3_Template","BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","barChartType","Normalized","BarHorizontalNormalizedComponent__svg_g_4_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r15","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalNormalizedComponent__svg_g_5_Template","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_5_Template","_c29","SeriesVerticalComponent__svg_g_0__svg_g_1_Template","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r4","SeriesVerticalComponent__svg_g_0_Template","bars","SeriesVerticalComponent__svg_g_1__svg_g_1_Template","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r10","ctx_r9","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template","_r19","SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r17","dataLabelHeightChanged","b_r16","SeriesVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxHeight","BarVerticalComponent__svg_g_3_Template","BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_3_Template","BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_4_Template","BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","onDataLabelMaxHeightChanged","BarVertical2DComponent__svg_g_5_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","BarVertical2DComponent__svg_g_6_Template","BarVerticalNormalizedComponent__svg_g_2_Template","BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_3_Template","BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_4_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_5_Template","BarVerticalStackedComponent__svg_g_2_Template","BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_3_Template","BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_4_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_5_Template","_c30","BoxComponent__svg_g_1_Template","BarOrientation","BoxComponent__svg_line_8_Template","line_r2","i_r3","hideBar","v1","v2","strokeColor","medianLineWidth","whiskerStrokeWidth","maskLine","_c31","BoxChartComponent__svg_g_5_Template","BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener","result_r1","strokeWidth","_c32","BubbleSeriesComponent__svg_g_0__svg_g_2_Template","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener","circle_r1","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template","_r14","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener","ctx_r17","BubbleSeriesComponent__svg_g_0_Template","BubbleChartComponent__svg_g_5_Template","BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_6_Template","BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","rScale","xScaleType","yScaleType","BubbleChartComponent__svg_g_8_Template","clipPath","BubbleChartComponent__svg_g_9__svg_g_1_Template","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","series_r15","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","BubbleChartComponent__svg_g_9_Template","_c33","HeatMapCellComponent__svg_defs_1_Template","_c34","_c35","a2","HeatCellSeriesComponent__svg_g_0_Template","HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","c_r1","cell","HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener","HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener","fill","ɵɵpureFunction3","HeatMapComponent__svg_g_2_Template","HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_g_3_Template","HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_rect_4_Template","rect_r7","rx","_c36","LineComponent__svg_g_0_Template","initialPath","stroke","LineComponent__svg_g_1_Template","_c37","LineSeriesComponent__svg_g_2_Template","LineSeriesComponent__svg_g_5_Template","isInactive","outerPath","hasGradient","gradientUrl","getColor","rangeFillOpacity","LineChartComponent__svg_g_5_Template","LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_6_Template","LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_8__svg_g_1_Template","hasRange","LineChartComponent__svg_g_8_Template","LineChartComponent__svg_g_9__svg_g_1_Template","series_r13","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10__svg_g_2_Template","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener","LineChartComponent__svg_g_10_Template","_r21","LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener","ctx_r20","LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener","LineChartComponent__svg_g_11__svg_g_1_Template","series_r24","LineChartComponent__svg_g_11_Template","_r26","LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener","_c38","_c39","PolarSeriesComponent__svg_g_2_Template","seriesColor","PolarSeriesComponent__svg_g_4_Template","PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener","circle_r2","PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener","PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener","inactive","circleRadius","PolarChartComponent__svg_g_4__svg_circle_1_Template","r_r7","PolarChartComponent__svg_g_4_Template","radiusTicks","PolarChartComponent__svg_g_5__svg_g_1_Template","tick_r9","outerRadius","labelTrim","labelTrimSize","PolarChartComponent__svg_g_5_Template","thetaTicks","PolarChartComponent__svg_g_6_Template","PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","yAxisScale","yAxisDims","transformYAxis","PolarChartComponent__svg_g_7_Template","PolarChartComponent__svg_g_8__svg_g_1_Template","_r15","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","PolarChartComponent__svg_g_8_Template","transformPlot","PolarChartComponent__svg_g_9__svg_g_1_Template","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","series_r19","PolarChartComponent__svg_g_9_Template","_c40","PieArcComponent__svg_defs_1_Template","radialGradientId","startOpacity","_c41","PieSeriesComponent__svg_g_0__svg_g_1_Template","arc_r1","trimLabels","maxLabelLength","explodeSlices","PieSeriesComponent__svg_g_0_Template","PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener","dblclick","labelVisible","startAngle","endAngle","innerRadius","getTooltipTitle","_c42","_c43","PieGridSeriesComponent__svg_g_1_Template","PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener","pointerEvents","PieGridComponent__svg_g_2__svg_text_2_Template","series_r1","percent","PieGridComponent__svg_g_2__svg_text_3_Template","PieGridComponent__svg_g_2__svg_text_6_Template","PieGridComponent__svg_g_2__svg_text_7_Template","ɵɵtextInterpolate2","_c44","PieGridComponent__svg_g_2_Template","PieGridComponent__svg_g_2_Template__svg_g_select_1_listener","PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener","PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener","_c45","_c46","CardComponent__svg_path_2_Template","bandColor","transformBand","bandPath","_c47","CardSeriesComponent__svg_rect_0_Template","c_r2","emptyColor","CardSeriesComponent__svg_g_1_Template","CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","c_r3","textColor","medianSize","labelFormatting","_c48","TreeMapCellComponent__svg_defs_1_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template","formattedValue","TreeMapCellComponent__svg_foreignObject_3_Template","getTextColor","_c49","TreeMapCellSeriesComponent__svg_g_0_Template","TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","_c50","_c51","LinearGaugeComponent__svg_line_4_Template","transformLine","units","LinearGaugeComponent__svg_line_5_Template","_c52","_c53","_c54","GaugeAxisComponent__svg_g_1_Template","GaugeAxisComponent__svg_g_2_Template","tick_r4","text","GaugeAxisComponent__svg_g_3_Template","GaugeComponent__svg_g_2_Template","GaugeComponent__svg_g_2_Template__svg_g_select_1_listener","GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener","GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener","arc_r3","rotation","backgroundArc","valueArc","cornerRadius","GaugeComponent__svg_g_3_Template","bigSegments","smallSegments","angleSpan","axisTickFormatting","GaugeComponent__svg_text_4_Template","displayValue","SankeyComponent__svg_g_2_Template","SankeyComponent__svg_g_2_Template__svg_path_click_5_listener","link_r3","SankeyComponent__svg_g_2_Template__svg_path_mouseenter_5_listener","id","source","target","x0","startColor","endColor","path","SankeyComponent__svg_g_3_Template","SankeyComponent__svg_g_3_Template__svg_rect_click_1_listener","SankeyComponent__svg_g_3_Template__svg_rect_mouseenter_1_listener","SankeyComponent__svg_g_4__svg_text_1_Template","rect_r11","labelAnchor","SankeyComponent__svg_g_4_Template","showLabels","throttle","func","wait","options","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","Center","horizontalPosition","left","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","positionContent","determinePlacement","TooltipContentComponent","constructor","element","renderer","platformId","cssClasses","clz","cssClass","ngAfterViewInit","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","ɵfac","TooltipContentComponent_Factory","t","ɵɵdirectiveInject","ElementRef","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TooltipContentComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TooltipContentComponent_HostBindings","TooltipContentComponent_resize_HostBindingHandler","ɵɵresolveWindow","ɵɵclassMap","inputs","decls","vars","consts","TooltipContentComponent_Template","ɵɵclassMapInterpolate1","dependencies","NgIf","NgTemplateOutlet","styles","encapsulation","prototype","ngDevMode","ɵsetClassMetadata","selector","None","decorators","InjectionRegisteryService","injectionService","defaults","components","Map","getByType","create","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","i","appendComponent","outputs","has","set","types","push","isViewContainerRef","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","globalRootViewContainer","getRootViewContainer","_container","Error","setRootViewContainer","getComponentRootNode","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","portal","componentRef","attach","InjectionService_Factory","ɵɵinject","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","ɵɵdefineInjectable","token","factory","TooltipService","TooltipService_Factory","LegendType","ScaleType","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","direction","splits","pairs","reverse","forEach","c","Math","round","join","ScaleLegendComponent_Factory","valueRange","features","ɵɵNgOnChangesFeature","ScaleLegendComponent_Template","changeDetection","OnPush","formatLabel","toLocaleDateString","escapeLabel","replace","match","LegendEntryComponent","toggle","trimmedLabel","onMouseEnter","onMouseLeave","LegendEntryComponent_Factory","LegendEntryComponent_HostBindings","LegendEntryComponent_mouseenter_HostBindingHandler","LegendEntryComponent_mouseleave_HostBindingHandler","LegendEntryComponent_Template","LegendEntryComponent_Template_span_click_0_listener","LegendEntryComponent_Template_span_click_1_listener","LegendComponent","cd","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","findIndex","entry","item","find","d","LegendComponent_Factory","ChangeDetectorRef","LegendComponent_Template","NgForOf","ChartComponent","showLegend","legendColumns","legendType","getLegendType","ScaleLegend","chartColumns","chartWidth","floor","Linear","Legend","ChartComponent_Factory","ɵɵProvidersFeature","ngContentSelectors","ChartComponent_Template","ɵɵprojectionDef","ɵɵprojection","providers","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","VisibilityObserver_Factory","NgZone","ɵdir","ɵɵdefineDirective","isDate","toString","call","isNumber","BaseChartComponent","chartElement","schemeType","Ordinal","ngOnInit","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","cloneData","getContainerDims","hostElem","parentNode","formatDates","g","j","resizeSubscription","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","BaseChartComponent_Factory","BaseChartComponent_Template","AxisLabelComponent","textHeight","margin","AxisLabelComponent_Factory","attrs","AxisLabelComponent_Template","trimLabel","s","trim","slice","reduceTicks","maxTicks","reduced","modulus","getTickLines","maxLength","maxLines","labelString","totalLines","test","split","reduce","lines","last","pop","startIndex","substring","TextAnchor","XAxisTicksComponent","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","maxPossibleLengthForTickIfWrapped","scale","step","updateDims","parseInt","ticksElement","getTicks","angle","getRotationAngle","adjustedScale","bandwidth","End","tick","tickLength","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","labelHeight","longestTick","earlier","current","tickLines","getMaxPossibleLengthForTick","requiredHeight","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","longestLabel","averageCharacterWidth","maxCharacters","truncatedText","maxAllowedLines","possibleStringLength","XAxisTicksComponent_Factory","XAxisTicksComponent_Query","XAxisTicksComponent_Template","XAxisComponent","xAxisOffset","xAxisClassName","padding","xAxisTickCount","newLabelOffset","XAxisComponent_Factory","XAxisComponent_Query","ticksComponent","showLabel","XAxisComponent_Template","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","referenceLineLength","getApproximateAxisWidth","sign","positionMiddle","chunksLength","bandWidth","heightOfLines","availableFreeSpace","setReferencelines","y2","x2","Start","refMin","map","refMax","tickHeight","maxChars","preferredWidth","YAxisTicksComponent_Factory","YAxisTicksComponent_Query","YAxisTicksComponent_Template","YAxisComponent","yAxisOffset","yAxisClassName","yAxisTickCount","YAxisComponent_Factory","YAxisComponent_Query","YAxisComponent_Template","AxesModule","AxesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipShowCaret","tooltipAlignment","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","listensForFocus","focus","listensForHover","mouseover","hideTooltip","onFocus","showTooltip","onBlur","contentDom","contains","onMouseClick","immediate","time","navigator","userAgent","createBoundOptions","addHideListeners","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipContext","TooltipDirective_Factory","ViewContainerRef","TooltipDirective_HostBindings","TooltipDirective_focusin_HostBindingHandler","TooltipDirective_blur_HostBindingHandler","TooltipDirective_mouseenter_HostBindingHandler","TooltipDirective_mouseleave_HostBindingHandler","TooltipDirective_click_HostBindingHandler","TooltipModule","TooltipModule_Factory","entryComponents","cache","newId","random","pow","SvgLinearGradientComponent","SvgLinearGradientComponent_Factory","stops","SvgLinearGradientComponent_Template","CircleComponent","Array","isArray","CircleComponent_Factory","CircleComponent_HostBindings","CircleComponent_click_HostBindingHandler","CircleComponent_mouseenter_HostBindingHandler","CircleComponent_mouseleave_HostBindingHandler","circleOpacity","CircleComponent_Template","SeriesType","CircleSeriesComponent","Standard","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","tooltipLabel","Time","Number","d1","getGradientStops","getTooltipMinMaxText","CircleSeriesComponent_Factory","CircleSeriesComponent_Template","animation","GridPanelComponent","GridPanelComponent_Factory","GridPanelComponent_Template","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","Even","paddingInner","GridPanelSeriesComponent_Factory","GridPanelSeriesComponent_Template","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","SvgRadialGradientComponent_Factory","SvgRadialGradientComponent_Template","AreaComponent","animationsLoaded","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","AreaComponent_Factory","AreaComponent_Template","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","CountUpDirective_Factory","CountUpDirective_Template","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","group","groupName","d0","toFixed","v","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","tooltipItem","TooltipArea_Factory","TooltipArea_Query","TooltipArea_Template","TooltipArea_Template__svg_rect_mousemove_1_listener","TooltipArea_Template__svg_rect_mouseleave_1_listener","_r0","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","Timeline_Factory","autoScale","Timeline_Template","AdvancedLegendComponent","legendItems","percentageFormatting","getTotal","sum","getLegendItems","origialLabel","AdvancedLegendComponent_Factory","AdvancedLegendComponent_Template","COMPONENTS","ChartCommonModule","ChartCommonModule_Factory","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","d0values","d1values","AreaSeriesComponent_Factory","AreaSeriesComponent_Template","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","roundDomains","timelinePadding","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","timelineXDomain","yScaleMin","yScaleMax","nice","date","num","deactivateAll","opts","entries","ɵAreaChartComponent_BaseFactory","AreaChartComponent_Factory","ɵɵgetInheritedFactory","contentQueries","AreaChartComponent_ContentQueries","dirIndex","ɵɵcontentQuery","AreaChartComponent_HostBindings","AreaChartComponent_mouseleave_HostBindingHandler","ɵɵInheritDefinitionFeature","AreaChartComponent_Template","AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartNormalizedComponent","valueOf","ɵAreaChartNormalizedComponent_BaseFactory","AreaChartNormalizedComponent_Factory","AreaChartNormalizedComponent_ContentQueries","AreaChartNormalizedComponent_HostBindings","AreaChartNormalizedComponent_mouseleave_HostBindingHandler","AreaChartNormalizedComponent_Template","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartStackedComponent","ɵAreaChartStackedComponent_BaseFactory","AreaChartStackedComponent_Factory","AreaChartStackedComponent_ContentQueries","AreaChartStackedComponent_HostBindings","AreaChartStackedComponent_mouseleave_HostBindingHandler","AreaChartStackedComponent_Template","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartModule","AreaChartModule_Factory","BarComponent","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarComponent_Factory","BarComponent_HostBindings","BarComponent_mouseenter_HostBindingHandler","BarComponent_mouseleave_HostBindingHandler","BarComponent_Template","BarComponent_Template__svg_path_click_1_listener","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarLabelComponent_Factory","BarLabelComponent_Template","SeriesHorizontal","updateTooltipSettings","positive","d0Type","getLabel","bar","offset0","offset1","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","barLabel","SeriesHorizontal_Factory","SeriesHorizontal_Template","BarHorizontalComponent","barPadding","rangeRound","fromLegend","ɵBarHorizontalComponent_BaseFactory","BarHorizontalComponent_Factory","BarHorizontalComponent_ContentQueries","BarHorizontalComponent_Template","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalComponent_Template__svg_g_select_4_listener","BarHorizontalComponent_Template__svg_g_activate_4_listener","BarHorizontalComponent_Template__svg_g_deactivate_4_listener","BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","getGroupScale","getInnerScale","getValueScale","paddingOuter","groupIndex","flat","ɵBarHorizontal2DComponent_BaseFactory","BarHorizontal2DComponent_Factory","BarHorizontal2DComponent_ContentQueries","BarHorizontal2DComponent_Template","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalNormalizedComponent","ɵBarHorizontalNormalizedComponent_BaseFactory","BarHorizontalNormalizedComponent_Factory","BarHorizontalNormalizedComponent_ContentQueries","BarHorizontalNormalizedComponent_Template","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","ɵBarHorizontalStackedComponent_BaseFactory","BarHorizontalStackedComponent_Factory","BarHorizontalStackedComponent_ContentQueries","BarHorizontalStackedComponent_Template","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","SeriesVerticalComponent","SeriesVerticalComponent_Factory","SeriesVerticalComponent_Template","BarVerticalComponent","some","isNaN","ɵBarVerticalComponent_BaseFactory","BarVerticalComponent_Factory","BarVerticalComponent_ContentQueries","BarVerticalComponent_Template","BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalComponent_Template__svg_g_activate_4_listener","BarVerticalComponent_Template__svg_g_deactivate_4_listener","BarVerticalComponent_Template__svg_g_select_4_listener","BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener","BarVertical2DComponent","ɵBarVertical2DComponent_BaseFactory","BarVertical2DComponent_Factory","BarVertical2DComponent_ContentQueries","BarVertical2DComponent_Template","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalNormalizedComponent","ɵBarVerticalNormalizedComponent_BaseFactory","BarVerticalNormalizedComponent_Factory","BarVerticalNormalizedComponent_ContentQueries","BarVerticalNormalizedComponent_Template","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalStackedComponent","ɵBarVerticalStackedComponent_BaseFactory","BarVerticalStackedComponent_Factory","BarVerticalStackedComponent_ContentQueries","BarVerticalStackedComponent_Template","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarChartModule","BarChartModule_Factory","cloneDeep","BoxComponent","boxStrokeWidth","updateLineEl","maskLineId","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","lineTween","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","BoxComponent_Factory","BoxComponent_HostBindings","BoxComponent_mouseenter_HostBindingHandler","BoxComponent_mouseleave_HostBindingHandler","BoxComponent_Template","BoxComponent_Template__svg_path_click_7_listener","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxSeriesComponent_Factory","BoxSeriesComponent_Template","BoxSeriesComponent_Template__svg_g_select_0_listener","BoxSeriesComponent_Template__svg_g_activate_0_listener","BoxSeriesComponent_Template__svg_g_deactivate_0_listener","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","ɵBoxChartComponent_BaseFactory","BoxChartComponent_Factory","BoxChartComponent_ContentQueries","legendOptionsConfig","BoxChartComponent_Template","BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener","BoxChartModule","BoxChartModule_Factory","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleSeriesComponent_Factory","BubbleSeriesComponent_Template","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","ɵBubbleChartComponent_BaseFactory","BubbleChartComponent_Factory","BubbleChartComponent_ContentQueries","BubbleChartComponent_HostBindings","BubbleChartComponent_mouseleave_HostBindingHandler","BubbleChartComponent_Template","BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BubbleChartComponent_Template__svg_rect_mouseenter_7_listener","BubbleChartModule","BubbleChartModule_Factory","HeatMapCellComponent","animateToCurrentForm","HeatMapCellComponent_Factory","HeatMapCellComponent_HostBindings","HeatMapCellComponent_mouseenter_HostBindingHandler","HeatMapCellComponent_mouseleave_HostBindingHandler","HeatMapCellComponent_Template","HeatMapCellComponent_Template__svg_rect_click_2_listener","HeatCellSeriesComponent","cells","getCells","row","HeatCellSeriesComponent_Factory","HeatCellSeriesComponent_Template","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","f","yVal","ɵHeatMapComponent_BaseFactory","HeatMapComponent_Factory","HeatMapComponent_ContentQueries","HeatMapComponent_Template","HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","HeatMapComponent_Template__svg_g_select_5_listener","HeatMapComponent_Template__svg_g_activate_5_listener","HeatMapComponent_Template__svg_g_deactivate_5_listener","HeatMapModule","HeatMapModule_Factory","LineComponent","LineComponent_Factory","LineComponent_Template","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","areaGradientStops","LineSeriesComponent_Factory","LineSeriesComponent_Template","LineChartComponent","ɵLineChartComponent_BaseFactory","LineChartComponent_Factory","LineChartComponent_ContentQueries","LineChartComponent_HostBindings","LineChartComponent_mouseleave_HostBindingHandler","LineChartComponent_Template","LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","LineChartModule","LineChartModule_Factory","PieLabelComponent","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","startRadius","innerArc","innerPos","centroid","pos","outerPos","midAngle","PieLabelComponent_Factory","PieLabelComponent_Template","PolarSeriesComponent","linearScaleType","getAngle","cData","defaultTooltipText","PolarSeriesComponent_Factory","PolarSeriesComponent_Template","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","xValues","getXValues","dd","startPos","minDistance","o","getYValues","ɵPolarChartComponent_BaseFactory","PolarChartComponent_Factory","PolarChartComponent_ContentQueries","PolarChartComponent_Template","PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieArcComponent","getPointerEvents","calc","calculateArc","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieArcComponent_Factory","PieArcComponent_Template","PieArcComponent_Template__svg_path_click_2_listener","PieArcComponent_Template__svg_path_dblclick_2_listener","PieArcComponent_Template__svg_path_mouseenter_2_listener","PieArcComponent_Template__svg_path_mouseleave_2_listener","PieSeriesComponent","pieGenerator","arcData","calculateLabelPositions","outerArc","factor","pieData","labelPositions","myArc","PieSeriesComponent_Factory","PieSeriesComponent_Template","AdvancedPieChartComponent","ɵAdvancedPieChartComponent_BaseFactory","AdvancedPieChartComponent_Factory","AdvancedPieChartComponent_ContentQueries","nameFormatting","AdvancedPieChartComponent_Template","AdvancedPieChartComponent_Template__svg_g_select_4_listener","AdvancedPieChartComponent_Template__svg_g_activate_4_listener","AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","ɵPieChartComponent_BaseFactory","PieChartComponent_Factory","PieChartComponent_ContentQueries","PieChartComponent_Template","PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PieChartComponent_Template__svg_g_dblclick_2_listener","PieChartComponent_Template__svg_g_select_2_listener","PieChartComponent_Template__svg_g_activate_2_listener","PieChartComponent_Template__svg_g_deactivate_2_listener","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridSeriesComponent_Factory","PieGridSeriesComponent_Template","PieGridComponent","getSeries","baselineLabelHeight","yPos","ɵPieGridComponent_BaseFactory","PieGridComponent_Factory","PieGridComponent_ContentQueries","PieGridComponent_Template","PieChartModule","PieChartModule_Factory","PolarChartModule","PolarChartModule_Factory","calculateTextWidth","fontFamilyKey","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","paddedValue","setPadding","scaleText","startCount","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","CardComponent_Factory","CardComponent_Query","CardComponent_Template","CardComponent_Template__svg_g_click_0_listener","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","CardSeriesComponent_Factory","CardSeriesComponent_Template","NumberCardComponent","clickable","observers","ɵNumberCardComponent_BaseFactory","NumberCardComponent_Factory","NumberCardComponent_Template","NumberCardComponent_Template__svg_g_select_2_listener","NumberCardModule","NumberCardModule_Factory","TreeMapCellComponent","cellData","TreeMapCellComponent_Factory","TreeMapCellComponent_Template","TreeMapCellComponent_Template__svg_rect_click_2_listener","TreeMapCellSeriesComponent","children","TreeMapCellSeriesComponent_Factory","TreeMapCellSeriesComponent_Template","TreeMapComponent","rootNode","isRoot","parentId","ɵTreeMapComponent_BaseFactory","TreeMapComponent_Factory","TreeMapComponent_ContentQueries","TreeMapComponent_Template","TreeMapComponent_Template__svg_g_select_2_listener","TreeMapModule","TreeMapModule_Factory","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","getDisplayValue","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","ɵLinearGaugeComponent_BaseFactory","LinearGaugeComponent_Factory","LinearGaugeComponent_Query","LinearGaugeComponent_Template","LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener","ɵɵpureFunction0","GaugeArcComponent","GaugeArcComponent_Factory","GaugeArcComponent_Template","GaugeArcComponent_Template__svg_g_select_1_listener","GaugeArcComponent_Template__svg_g_activate_1_listener","GaugeArcComponent_Template__svg_g_deactivate_1_listener","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeAxisComponent_Factory","GaugeAxisComponent_Template","GaugeComponent","showAxis","showText","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","ɵGaugeComponent_BaseFactory","GaugeComponent_Factory","GaugeComponent_ContentQueries","GaugeComponent_Query","GaugeComponent_Template","GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","GaugeModule","GaugeModule_Factory","ngxChartsPolyfills","SVGElement","HTMLDivElement","SankeyComponent","linkDefs","nodeDefs","flatMap","sankeyGenerator","nodeId","nodeAlign","nodeWidth","nodePadding","nodes","links","nodeRects","rect","getNodeTooltipText","linkPaths","link","linkPath","getLinkTooltipText","sourceNode","targetNode","maximumFractionDigits","layer","ɵSankeyComponent_BaseFactory","SankeyComponent_Factory","SankeyComponent_ContentQueries","SankeyComponent_Template","SankeyModule","SankeyModule_Factory","NgxChartsModule","NgxChartsModule_Factory","fieldType","groupByType","formatter"],"sources":["E:/ETF/Domaci i Projekti/PIA Projekat/frontend/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { sankey, sankeyLeft, sankeyLinkHorizontal } from 'd3-sankey';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {};\n            if (item['name'] !== undefined) {\n                copy['name'] = item['name'];\n            }\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            if (item['source'] !== undefined) {\n                copy['source'] = item['source'];\n            }\n            if (item['target'] !== undefined) {\n                copy['target'] = item['target'];\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n    const labelString = (label || '').toString();\n    let totalLines = [];\n    if (/\\s/.test(labelString)) {\n        totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n            const last = (lines.pop() || '') + ' ';\n            return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n        }, []);\n    }\n    else {\n        let startIndex = 0;\n        while (startIndex < labelString.length) {\n            totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n            startIndex += maxLength;\n        }\n    }\n    if (totalLines.length > maxLines) {\n        totalLines = totalLines.splice(0, maxLines);\n        totalLines[totalLines.length - 1] += '...';\n    }\n    return totalLines;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n        this.maxPossibleLengthForTickIfWrapped = 16;\n    }\n    get isWrapTicksSupported() {\n        return this.wrapTicks && this.scale.step;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        let labelHeight = 14;\n        if (this.isWrapTicksSupported) {\n            const longestTick = this.ticks.reduce((earlier, current) => (current.length > earlier.length ? current : earlier), '');\n            const tickLines = this.tickChunks(longestTick);\n            labelHeight = 14 * (tickLines.length || 1);\n            this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n        }\n        const requiredHeight = angle !== 0\n            ? Math.max(Math.abs(Math.sin((angle * Math.PI) / 180)) * this.maxTickLength * charWidth, 10)\n            : labelHeight;\n        this.approxHeight = Math.min(requiredHeight, 200);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getMaxPossibleLengthForTick(longestLabel) {\n        if (this.scale.bandwidth) {\n            const averageCharacterWidth = 7; // approximate char width\n            const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n            const truncatedText = longestLabel.slice(0, maxCharacters);\n            return Math.max(truncatedText.length, this.maxTickLength);\n        }\n        return this.maxTickLength;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            const maxAllowedLines = 5;\n            let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n            if (!isPlatformBrowser(this.platformId)) {\n                possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n            }\n            maxLines = Math.min(maxLines, maxAllowedLines);\n            const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n            return lines;\n        }\n        return [this.tickTrim(label)];\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? d => {\n                // position the tick to middle considering number of lines of the tick\n                const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n                if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n                    const chunksLength = this.tickChunks(d).length;\n                    if (chunksLength === 1) {\n                        return positionMiddle;\n                    }\n                    const bandWidth = scale.bandwidth();\n                    const heightOfLines = chunksLength * 8;\n                    const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n                    return scale(d) + availableFreeSpace;\n                }\n                return positionMiddle;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            // for y-axis the width of the tick is fixed\n            const preferredWidth = this.maxTickLength;\n            const maxLines = Math.floor(this.scale.bandwidth() / 15);\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n        }\n        return [this.tickFormat(label)];\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", wrapTicks: \"wrapTicks\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass SankeyComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showLabels = true;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n        this.scaleType = ScaleType.Ordinal;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            legendType: this.scaleType\n        });\n        const linkDefs = this.results;\n        const nodeDefs = Array.from(new Set(linkDefs.flatMap(l => [l.source, l.target])), (name) => ({\n            name,\n            value: linkDefs.filter(l => l.source === name).reduce((acc, l) => acc + l.value, 0)\n        }));\n        // Configure generator\n        const sankeyGenerator = sankey()\n            .nodeId(d => d.name)\n            .nodeAlign(sankeyLeft)\n            .nodeWidth(15)\n            .nodePadding(10)\n            .extent([\n            [1, 5],\n            [this.dims.width - 1, this.dims.height - 5]\n        ]);\n        // Generate links and nodes\n        const data = sankeyGenerator({\n            nodes: nodeDefs.map(d => Object.assign({}, d)),\n            links: linkDefs.map(d => Object.assign({}, d))\n        });\n        this.valueDomain = this.getValueDomain(data.nodes);\n        this.setColors();\n        this.nodeRects = data.nodes.map(node => {\n            const rect = {\n                x: node.x0,\n                y: node.y0,\n                height: node.y1 - node.y0,\n                width: node.x1 - node.x0,\n                fill: this.colors.getColor(node.name),\n                tooltip: this.getNodeTooltipText(node),\n                rx: 5,\n                data: {\n                    name: node.name,\n                    value: node.value\n                },\n                transform: '',\n                label: this.labelFormatting ? this.labelFormatting(node.name) : node.name,\n                labelAnchor: TextAnchor.Start\n            };\n            rect.labelAnchor = this.getTextAnchor(node);\n            rect.transform = `translate(${rect.x},${rect.y})`;\n            return rect;\n        });\n        this.linkPaths = data.links.map(link => {\n            const gradientId = 'mask' + id().toString();\n            const linkPath = {\n                path: sankeyLinkHorizontal()(link),\n                strokeWidth: Math.max(1, link.width),\n                tooltip: this.getLinkTooltipText(link.source, link.target, link.value),\n                id: gradientId,\n                gradientFill: `url(#${gradientId})`,\n                source: link.source,\n                target: link.target,\n                startColor: this.colors.getColor(link.source.name),\n                endColor: this.colors.getColor(link.target.name),\n                data: {\n                    source: link.source.name,\n                    target: link.target.name,\n                    value: link.value\n                }\n            };\n            return linkPath;\n        });\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getNodeTooltipText(node) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(node.name)}</span>\n      <span class=\"tooltip-val\">${node.value.toLocaleString()}</span>\n    `;\n    }\n    getLinkTooltipText(sourceNode, targetNode, value) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(sourceNode.name)} • ${escapeLabel(targetNode.name)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()} (${(value / sourceNode.value).toLocaleString(undefined, {\n            style: 'percent',\n            maximumFractionDigits: 2\n        })})</span>\n    `;\n    }\n    getTextAnchor(node) {\n        if (node.layer === 0) {\n            return TextAnchor.Start;\n        }\n        else {\n            return TextAnchor.End;\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getValueDomain(nodes) {\n        return nodes.map(n => n.name);\n    }\n}\nSankeyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSankeyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SankeyComponent, selector: \"ngx-charts-sankey\", inputs: { showLabels: \"showLabels\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-sankey', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SankeyModule {\n}\nSankeyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSankeyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, declarations: [SankeyComponent], imports: [ChartCommonModule], exports: [SankeyComponent] });\nSankeyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [SankeyComponent],\n                    exports: [SankeyComponent]\n                }]\n        }] });\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        SankeyModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        SankeyModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        SankeyModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, SankeyComponent, SankeyModule, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,WAAW,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,uBAAuB,EAAEC,YAAY,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAC5N,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,iBAAiB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,iBAAiB;AACnF,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,EAAEC,eAAe,QAAQ,qBAAqB;AACtE,SAASC,SAAS,QAAQ,MAAM;AAChC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,qBAAqB;AACzE,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,QAAQ,UAAU;AACrG,SAASC,IAAI,EAAEC,WAAW,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,GAAG,QAAQ,UAAU;AAC7F,SAASC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,UAAU;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAO,KAAKC,QAAQ,MAAM,UAAU;AACpC,SAASC,OAAO,EAAEC,QAAQ,QAAQ,cAAc;AAChD,SAASC,MAAM,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,WAAW;AACpE,SAASC,UAAU,QAAQ,gBAAgB;;AAE3C;AACA;AACA;AACA;AAHA,MAAAC,GAAA;AAAA,SAAAC,sDAAAC,EAAA,EAAAC,GAAA;AAAA,MAAAC,GAAA,YAAAA,CAAAC,EAAA;EAAA;IAAAC,KAAA,EAAAD;EAAA;AAAA;AAAA,SAAAE,wCAAAL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAyU0G7D,EAAE,CAAAmE,cAAA,UAKhF,CAAC;IAL6EnE,EAAE,CAAAoE,UAAA,IAAAR,qDAAA,wBAMM,CAAC;IANT5D,EAAE,CAAAqE,YAAA,CAO9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAP2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAMzD,CAAC;IANsDxE,EAAE,CAAAyE,UAAA,qBAAAH,MAAA,CAAAI,QAMzD,CAAC,4BANsD1E,EAAE,CAAA2E,eAAA,IAAAZ,GAAA,EAAAO,MAAA,CAAAM,OAAA,CAMzD,CAAC;EAAA;AAAA;AAAA,SAAAC,wCAAAhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IANsD7D,EAAE,CAAA8E,SAAA,aAQrD,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkB,MAAA,GARkD/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAAM,MAAA,CAAAC,KAAA,EAAFhF,EAAE,CAAAiF,cAQ9D,CAAC;EAAA;AAAA;AAAA,SAAAC,kCAAArB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAR2D7D,EAAE,CAAAmE,cAAA,eA8fhD,CAAC,aAAD,CAAC;IA9f6CnE,EAAE,CAAAmF,MAAA,EA+f1D,CAAC;IA/fuDnF,EAAE,CAAAqE,YAAA,CA+fnD,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA/fgDpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA+f1D,CAAC;IA/fuDxE,EAAE,CAAAqF,iBAAA,CAAAD,MAAA,CAAAJ,KA+f1D,CAAC;EAAA;AAAA;AAAA,SAAAM,8BAAAzB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,GAAA,GA/fuDvF,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAAmE,cAAA,WAmgBpB,CAAC,gCAAD,CAAC;IAngBiBnE,EAAE,CAAAyF,UAAA,oBAAAC,wEAAAC,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAygBpFD,MAAA,CAAAE,UAAA,CAAAC,IAAA,CAAAL,MAAsB,EAAC;IAAA,EAAC,sBAAAM,0EAAAN,MAAA;MAzgB0D3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAW,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA0gBlFI,MAAA,CAAAC,QAAA,CAAAR,MAAe,EAAC;IAAA,CADK,CAAC,wBAAAS,4EAAAT,MAAA;MAzgB0D3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAc,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2gBhFO,MAAA,CAAAC,UAAA,CAAAX,MAAiB,EAAC;IAAA,CAFC,CAAC;IAzgB0D3F,EAAE,CAAAqE,YAAA,CA6gBvE,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0C,QAAA,GAAAzC,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GA7gBoEtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAqgB1E,CAAC;IArgBuExE,EAAE,CAAAyE,UAAA,UAAA8B,QAAA,CAAAE,KAqgB1E,CAAC,mBAAAF,QAAA,CAAAG,cAAD,CAAC,UAAAH,QAAA,CAAAI,KAAD,CAAC,aAAArC,MAAA,CAAAsC,QAAA,CAAAL,QAAA,CAAD,CAAC;EAAA;AAAA;AAAA,SAAAM,kDAAAhD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArgBuE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+G,eAAA,CAqnBtG,CAAC;IArnBmG/G,EAAE,CAAA8E,SAAA,gCAsnB7E,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAtnB0EpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAW,MAAA,CAAA4B,aAAA,IAAA5B,MAAA,CAAA4B,aAAA,CAAAC,QAAA,KAAA7B,MAAA,CAAA8B,cAAA,CAAAC,KAgnBtB,CAAC,eAAA/B,MAAA,CAAA4B,aAAA,CAAAI,MAAD,CAAC,WAAAhC,MAAA,CAAA4B,aAAA,CAAAK,MAAD,CAAC,WAAAjC,MAAA,CAAAkC,IAAA,GAAD,CAAC,UAAAlC,MAAA,CAAAmC,WAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAA3D,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAhnBmBzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+G,eAAA,CAooBtG,CAAC;IApoBmG/G,EAAE,CAAAmE,cAAA,0BAooBtG,CAAC;IApoBmGnE,EAAE,CAAAyF,UAAA,wBAAAiC,oFAAA/B,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAioBtFf,MAAA,CAAA4C,gBAAA,CAAA3B,IAAA,CAAAL,MAA4B,EAAC;IAAA,EAAC,2BAAAiC,uFAAAjC,MAAA;MAjoBsD3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAI,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAkoBnF+B,MAAA,CAAAC,mBAAA,CAAA9B,IAAA,CAAAL,MAA+B,EAAC;IAAA,CADN,CAAC,6BAAAoC,yFAAApC,MAAA;MAjoBsD3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAvB,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAmoBjFI,MAAA,CAAA8B,qBAAA,CAAAhC,IAAA,CAAAL,MAAiC,EAAC;IAAA,CAFV,CAAC;IAjoBsD3F,EAAE,CAAAqE,YAAA,CAqoBnF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAroBgFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAH,MAAA,CAAA0C,aAAA,IAAA1C,MAAA,CAAA0C,aAAA,CAAAC,QAAA,KAAA3C,MAAA,CAAA4C,cAAA,CAAAC,KA0nBtB,CAAC,SAAA7C,MAAA,CAAA0C,aAAA,CAAAI,MAAD,CAAC,UAAA9C,MAAA,CAAA0C,aAAA,CAAAhC,KAAD,CAAC,WAAAV,MAAA,CAAA0C,aAAA,CAAAK,MAAD,CAAC,WAAA/C,MAAA,CAAAgD,IAAA,GAAD,CAAC,UAAAhD,MAAA,CAAAiD,WAAD,CAAC,kBAAAjD,MAAA,CAAA2D,aAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,8EAAAzE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1nBmB7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAuI,kBAAA,EA+vCU,CAAC;EAAA;AAAA;AAAA,SAAAC,8GAAA3E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/vCb7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,eAowCV,CAAC;IApwCOnE,EAAE,CAAAmF,MAAA,EAswC/F,CAAC;IAtwC4FnF,EAAE,CAAAqE,YAAA,CAswCnF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA4E,YAAA,GAAA3E,GAAA,CAAA0C,SAAA;IAAA,MAAAkC,KAAA,GAAA5E,GAAA,CAAA6E,KAAA;IAtwCgF3I,EAAE,CAAA4I,WAAA,MAAAF,KAAA,KAowCX,CAAC;IApwCQ1I,EAAE,CAAAwE,SAAA,EAswC/F,CAAC;IAtwC4FxE,EAAE,CAAA6I,kBAAA,MAAAJ,YAAA,KAswC/F,CAAC;EAAA;AAAA;AAAA,SAAAK,iGAAAjF,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtwC4F7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+I,uBAAA,EAmwC7C,CAAC;IAnwC0C/I,EAAE,CAAAoE,UAAA,IAAAoE,6GAAA,kBAswCnF,CAAC;IAtwCgFxI,EAAE,CAAAgJ,qBAAA,CAuwClF,CAAC;EAAA;EAAA,IAAAnF,EAAA;IAAA,MAAAoF,aAAA,GAAAnF,GAAA,CAAAoF,IAAA;IAvwC+ElJ,EAAE,CAAAwE,SAAA,EAowCjD,CAAC;IApwC8CxE,EAAE,CAAAyE,UAAA,YAAAwE,aAowCjD,CAAC;EAAA;AAAA;AAAA,SAAAE,6EAAAtF,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApwC8C7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAoE,UAAA,IAAA0E,gGAAA,yBAuwClF,CAAC;EAAA;EAAA,IAAAjF,EAAA;IAAA,MAAAuF,OAAA,GAvwC+EpJ,EAAE,CAAAuE,aAAA,IAAAiC,SAAA;IAAA,MAAA6C,MAAA,GAAFrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAA4E,MAAA,CAAAC,UAAA,CAAAF,OAAA,CAmwC3D,CAAC;EAAA;AAAA;AAAA,SAAAG,6EAAA1F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnwCwD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmF,MAAA,EA4wCnG,CAAC;EAAA;EAAA,IAAAtB,EAAA;IAAA,MAAA2F,gBAAA,GA5wCgGxJ,EAAE,CAAAuE,aAAA,GAAA2E,IAAA;IAAA,MAAAO,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA6I,kBAAA,MAAAY,OAAA,CAAAC,QAAA,CAAAF,gBAAA,MA4wCnG,CAAC;EAAA;AAAA;AAAA,SAAAG,0DAAA9F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5wCgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+I,uBAAA,EAuvC7C,CAAC;IAvvC0C/I,EAAE,CAAAmE,cAAA,WAwvC5F,CAAC;IAxvCyFnE,EAAE,CAAAmF,MAAA,EAwvCzE,CAAC;IAxvCsEnF,EAAE,CAAAqE,YAAA,CAwvCjE,CAAC;IAxvC8DrE,EAAE,CAAAmE,cAAA,aA8vClG,CAAC;IA9vC+FnE,EAAE,CAAAoE,UAAA,IAAAkE,6EAAA,yBA+vCU,CAAC;IA/vCbtI,EAAE,CAAAqE,YAAA,CAgwCxF,CAAC;IAhwCqFrE,EAAE,CAAAoE,UAAA,IAAA+E,4EAAA,gCAAFnJ,EAAE,CAAA4J,sBAwwCrF,CAAC;IAxwCkF5J,EAAE,CAAAoE,UAAA,IAAAmF,4EAAA,gCAAFvJ,EAAE,CAAA4J,sBA4wCrF,CAAC;IA5wCkF5J,EAAE,CAAAgJ,qBAAA,CA6wCtF,CAAC;EAAA;EAAA,IAAAnF,EAAA;IAAA,MAAA2F,gBAAA,GAAA1F,GAAA,CAAAoF,IAAA;IAAA,MAAAW,GAAA,GA7wCmF7J,EAAE,CAAA8J,WAAA;IAAA,MAAAC,GAAA,GAAF/J,EAAE,CAAA8J,WAAA;IAAA,MAAAjC,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAwvCzE,CAAC;IAxvCsExE,EAAE,CAAAqF,iBAAA,CAAAmE,gBAwvCzE,CAAC;IAxvCsExJ,EAAE,CAAAwE,SAAA,EA4vClE,CAAC;IA5vC+DxE,EAAE,CAAA4I,WAAA,gBAAAf,MAAA,CAAAmC,UA4vClE,CAAC,cAAAnC,MAAA,CAAAoC,aAAD,CAAC;IA5vC+DjK,EAAE,CAAAwE,SAAA,EA+vCtD,CAAC;IA/vCmDxE,EAAE,CAAAyE,UAAA,SAAAoD,MAAA,CAAAqC,oBA+vCtD,CAAC,aAAAL,GAAD,CAAC,aAAAE,GAAD,CAAC;EAAA;AAAA;AAAA,SAAAI,sCAAAtG,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/vCmD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAsvCjB,CAAC;IAtvCcnE,EAAE,CAAAoE,UAAA,IAAAuF,yDAAA,yBA6wCtF,CAAC;IA7wCmF3J,EAAE,CAAAqE,YAAA,CA8wC/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuF,OAAA,GAAAtF,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GA9wC4FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAtE,MAAA,CAAA8F,aAAA,CAAAhB,OAAA,CAsvClB,CAAC;IAtvCepJ,EAAE,CAAAwE,SAAA,EAuvC/D,CAAC;IAvvC4DxE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAA+F,UAAA,CAAAjB,OAAA,CAuvC/D,CAAC;EAAA;AAAA;AAAA,SAAAkB,+CAAAzG,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvvC4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAkxCnC,CAAC;IAlxCgCnE,EAAE,CAAA8E,SAAA,cAmxCT,CAAC;IAnxCM9E,EAAE,CAAAqE,YAAA,CAoxC/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0G,OAAA,GApxC4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA2B,OAAA,CAAAC,iBAAA,EAkxCpC,CAAC;IAlxCiCxK,EAAE,CAAAwE,SAAA,EAmxCnB,CAAC;IAnxCgBxE,EAAE,CAAA4I,WAAA,QAAA2B,OAAA,CAAAE,cAmxCnB,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAA7G,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnxCgB7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAixChC,CAAC;IAjxC6BnE,EAAE,CAAAoE,UAAA,IAAAkG,8CAAA,cAoxC/F,CAAC;IApxC4FtK,EAAE,CAAAqE,YAAA,CAqxCjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA8G,QAAA,GAAA7G,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GArxC8F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA7D,MAAA,CAAAqF,aAAA,CAAAO,QAAA,CAixCjC,CAAC;IAjxC8B3K,EAAE,CAAAwE,SAAA,EAkxC5E,CAAC;IAlxCyExE,EAAE,CAAAyE,UAAA,SAAAM,MAAA,CAAA6F,aAkxC5E,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iCAAAjH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAlxCyEzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA45CrG,CAAC;IA55CkGnE,EAAE,CAAAyF,UAAA,+BAAAsF,qEAAApF,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA25C/Ef,MAAA,CAAAiG,eAAA,CAAArF,MAAsB,EAAC;IAAA,EAAC;IA35CqD3F,EAAE,CAAAqE,YAAA,CA45CrG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA55CkGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAAW,MAAA,CAAA6F,SA84C9E,CAAC,gBAAA7F,MAAA,CAAA8F,WAAD,CAAC,kBAAA9F,MAAA,CAAA+F,aAAD,CAAC,mBAAA/F,MAAA,CAAAgG,cAAD,CAAC,kBAAAhG,MAAA,CAAAiG,aAAD,CAAC,eAAAjG,MAAA,CAAAkG,UAAD,CAAC,UAAAlG,MAAA,CAAAmG,MAAD,CAAC,WAAAnG,MAAA,CAAAoG,OAAD,CAAC,kBAAApG,MAAA,CAAAwF,aAAD,CAAC,mBAAAxF,MAAA,CAAAqG,IAAA,CAAAC,MAAD,CAAC,UAAAtG,MAAA,CAAAqG,IAAA,CAAAE,KAAD,CAAC,eAAAvG,MAAA,CAAAwG,KAAD,CAAC,cAAAxG,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,iCAAAjI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA94C2E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAq6C9F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GAr6C2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAyH,SAg6ClF,CAAC,WAAAzH,MAAA,CAAA0H,WAAD,CAAC,WAAA1H,MAAA,CAAA2H,WAAA,CAAAC,MAAD,CAAC,WAAA5H,MAAA,CAAAmH,IAAA,CAAAC,MAAD,CAAC,UAAApH,MAAA,CAAAmH,IAAA,CAAAE,KAAD,CAAC;EAAA;AAAA;AAAA,MAAAQ,GAAA;AAAA,SAAAC,8EAAAvI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh6C+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAuI,kBAAA,EA+tDD,CAAC;EAAA;AAAA;AAAA,SAAA8D,kIAAAxI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/tDF7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,eAquDO,CAAC;IAruDVnE,EAAE,CAAAmF,MAAA,EAuuD7F,CAAC;IAvuD0FnF,EAAE,CAAAqE,YAAA,CAuuDjF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAyI,YAAA,GAAAxI,GAAA,CAAA0C,SAAA;IAAA,MAAA+F,KAAA,GAAAzI,GAAA,CAAA6E,KAAA;IAAA,MAAA6D,OAAA,GAvuD8ExM,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,MAAA2D,KAAA,QAAAC,OAAA,CAAAC,WAAA,CAquDM,CAAC;IAruDTzM,EAAE,CAAAwE,SAAA,EAuuD7F,CAAC;IAvuD0FxE,EAAE,CAAA6I,kBAAA,MAAAyD,YAAA,KAuuD7F,CAAC;EAAA;AAAA;AAAA,SAAAI,qHAAA7I,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvuD0F7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+I,uBAAA,EAouD3B,CAAC;IApuDwB/I,EAAE,CAAAoE,UAAA,IAAAiI,iIAAA,mBAuuDjF,CAAC;IAvuD8ErM,EAAE,CAAAgJ,qBAAA,CAwuDhF,CAAC;EAAA;EAAA,IAAAnF,EAAA;IAAA,MAAA8I,aAAA,GAxuD6E3M,EAAE,CAAAuE,aAAA,GAAA2E,IAAA;IAAFlJ,EAAE,CAAAwE,SAAA,EAquD/C,CAAC;IAruD4CxE,EAAE,CAAAyE,UAAA,YAAAkI,aAquD/C,CAAC;EAAA;AAAA;AAAA,SAAAC,iGAAA/I,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAruD4C7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+I,uBAAA,EAmuD7C,CAAC;IAnuD0C/I,EAAE,CAAAoE,UAAA,IAAAsI,oHAAA,0BAwuDhF,CAAC;IAxuD6E1M,EAAE,CAAAgJ,qBAAA,CAyuDlF,CAAC;EAAA;EAAA,IAAAnF,EAAA;IAAA,MAAA8I,aAAA,GAAA7I,GAAA,CAAAoF,IAAA;IAzuD+ElJ,EAAE,CAAAuE,aAAA;IAAA,MAAAsI,IAAA,GAAF7M,EAAE,CAAA8J,WAAA;IAAF9J,EAAE,CAAAwE,SAAA,EAouDpD,CAAC;IApuDiDxE,EAAE,CAAAyE,UAAA,SAAAkI,aAAA,CAAAG,MAAA,IAouDpD,CAAC,aAAAD,IAAD,CAAC;EAAA;AAAA;AAAA,SAAAE,6EAAAlJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApuDiD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAoE,UAAA,IAAAwI,gGAAA,yBAyuDlF,CAAC;EAAA;EAAA,IAAA/I,EAAA;IAAA,MAAAmJ,OAAA,GAzuD+EhN,EAAE,CAAAuE,aAAA,IAAAiC,SAAA;IAAA,MAAAiD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAgF,OAAA,CAAAH,UAAA,CAAA0D,OAAA,CAmuD3D,CAAC;EAAA;AAAA;AAAA,SAAAC,6EAAApJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnuDwD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmF,MAAA,EA8uDnG,CAAC;EAAA;EAAA,IAAAtB,EAAA;IAAA,MAAAqJ,gBAAA,GA9uDgGlN,EAAE,CAAAuE,aAAA,GAAA2E,IAAA;IAAA,MAAAiE,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA6I,kBAAA,MAAAsE,OAAA,CAAAzD,QAAA,CAAAwD,gBAAA,MA8uDnG,CAAC;EAAA;AAAA;AAAA,SAAAE,0DAAAvJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9uDgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+I,uBAAA,EAqtD7C,CAAC;IArtD0C/I,EAAE,CAAAmE,cAAA,WAstD5F,CAAC;IAttDyFnE,EAAE,CAAAmF,MAAA,EAstDzE,CAAC;IAttDsEnF,EAAE,CAAAqE,YAAA,CAstDjE,CAAC;IAttD8DrE,EAAE,CAAAmE,cAAA,aA8tDlG,CAAC;IA9tD+FnE,EAAE,CAAAoE,UAAA,IAAAgI,6EAAA,yBA+tDD,CAAC;IA/tDFpM,EAAE,CAAAqE,YAAA,CAguDxF,CAAC;IAhuDqFrE,EAAE,CAAAoE,UAAA,IAAA2I,4EAAA,gCAAF/M,EAAE,CAAA4J,sBA0uDrF,CAAC;IA1uDkF5J,EAAE,CAAAoE,UAAA,IAAA6I,4EAAA,gCAAFjN,EAAE,CAAA4J,sBA8uDrF,CAAC;IA9uDkF5J,EAAE,CAAAgJ,qBAAA,CA+uDtF,CAAC;EAAA;EAAA,IAAAnF,EAAA;IAAA,MAAAqJ,gBAAA,GAAApJ,GAAA,CAAAoF,IAAA;IAAA,MAAAa,GAAA,GA/uDmF/J,EAAE,CAAA8J,WAAA;IAAA,MAAA+C,IAAA,GAAF7M,EAAE,CAAA8J,WAAA;IAAA,MAAAzD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAstDzE,CAAC;IAttDsExE,EAAE,CAAAqF,iBAAA,CAAA6H,gBAstDzE,CAAC;IAttDsElN,EAAE,CAAAwE,SAAA,EA6tDvE,CAAC;IA7tDoExE,EAAE,CAAAqN,WAAA,oBA6tDvE,CAAC;IA7tDoErN,EAAE,CAAA4I,WAAA,OAAAvC,MAAA,CAAAiH,EAytDnF,CAAC,MAAAjH,MAAA,CAAAkH,EAAD,CAAC,MAAAlH,MAAA,CAAAmH,EAAD,CAAC,gBAAAnH,MAAA,CAAA2D,UAAD,CAAC;IAztDgFhK,EAAE,CAAAwE,SAAA,EA+tDjE,CAAC;IA/tD8DxE,EAAE,CAAAyE,UAAA,SAAA4B,MAAA,CAAAwF,SA+tDjE,CAAC,aAAA9B,GAAD,CAAC,aAAA8C,IAAD,CAAC;EAAA;AAAA;AAAA,SAAAY,sCAAA5J,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/tD8D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAotDrB,CAAC;IAptDkBnE,EAAE,CAAAoE,UAAA,IAAAgJ,yDAAA,0BA+uDtF,CAAC;IA/uDmFpN,EAAE,CAAAqE,YAAA,CAgvD/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAmJ,OAAA,GAAAlJ,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GAhvD4FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAtE,MAAA,CAAAoJ,SAAA,CAAAV,OAAA,CAotDtB,CAAC;IAptDmBhN,EAAE,CAAAwE,SAAA,EAqtD/D,CAAC;IArtD4DxE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAA+F,UAAA,CAAA2C,OAAA,CAqtD/D,CAAC;EAAA;AAAA;AAAA,SAAAW,yCAAA9J,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArtD4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cAwvDvG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkB,MAAA,GAxvDoG/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,MAAA7D,MAAA,CAAA6I,iBAsvD3E,CAAC,cAAA7I,MAAA,CAAAyF,iBAAA,EAAD,CAAC;EAAA;AAAA;AAAA,SAAAqD,2DAAAhK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtvDwE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cAgwDnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAiK,OAAA,GAhwDgG9N,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,OAAAkF,OAAA,CAAAC,aA+vD1E,CAAC;EAAA;AAAA;AAAA,SAAAC,2DAAAnK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/vDuE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cAswDnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAoK,OAAA,GAtwDgGjO,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,QAAAqF,OAAA,CAAAF,aAqwDzE,CAAC;EAAA;AAAA;AAAA,SAAAG,+CAAArK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArwDsE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0vDnC,CAAC;IA1vDgCnE,EAAE,CAAAoE,UAAA,IAAAyJ,0DAAA,kBAgwDnG,CAAC;IAhwDgG7N,EAAE,CAAAoE,UAAA,IAAA4J,0DAAA,kBAswDnG,CAAC;IAtwDgGhO,EAAE,CAAAqE,YAAA,CAuwD/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAsK,OAAA,GAvwD4FnO,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAuF,OAAA,CAAA3D,iBAAA,EA0vDpC,CAAC;IA1vDiCxK,EAAE,CAAAwE,SAAA,EA4vDjE,CAAC;IA5vD8DxE,EAAE,CAAAyE,UAAA,SAAA0J,OAAA,CAAAC,MAAA,KAAAD,OAAA,CAAAE,WAAA,CAAAC,IA4vDjE,CAAC;IA5vD8DtO,EAAE,CAAAwE,SAAA,EAkwDhE,CAAC;IAlwD6DxE,EAAE,CAAAyE,UAAA,SAAA0J,OAAA,CAAAC,MAAA,KAAAD,OAAA,CAAAE,WAAA,CAAAE,KAkwDhE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAA3K,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlwD6D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAyvDpC,CAAC;IAzvDiCnE,EAAE,CAAAoE,UAAA,IAAA8J,8CAAA,cAuwD/F,CAAC;IAvwD4FlO,EAAE,CAAAqE,YAAA,CAwwDjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA4K,QAAA,GAAA3K,GAAA,CAAA0C,SAAA;IAAA,MAAAX,MAAA,GAxwD8F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA/C,MAAA,CAAA6H,SAAA,CAAAe,QAAA,CAyvDrC,CAAC;IAzvDkCzO,EAAE,CAAAwE,SAAA,EA0vD5E,CAAC;IA1vDyExE,EAAE,CAAAyE,UAAA,SAAAoB,MAAA,CAAA+E,aA0vD5E,CAAC;EAAA;AAAA;AAAA,SAAA8D,wDAAA7K,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1vDyE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAkxDxE,CAAC,WAAD,CAAC;IAlxDqEnE,EAAE,CAAAmF,MAAA,EAmxDnD,CAAC;IAnxDgDnF,EAAE,CAAAqE,YAAA,CAmxD3C,CAAC;IAnxDwCrE,EAAE,CAAAmE,cAAA,cA0xDlG,CAAC;IA1xD+FnE,EAAE,CAAAmF,MAAA,EA4xDnG,CAAC;IA5xDgGnF,EAAE,CAAAqE,YAAA,CA4xDxF,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA8K,WAAA,GA5xDqF3O,EAAE,CAAAuE,aAAA,IAAAiC,SAAA;IAAA,MAAAoI,OAAA,GAAF5O,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAmxDnD,CAAC;IAnxDgDxE,EAAE,CAAAqF,iBAAA,CAAAuJ,OAAA,CAAAlF,QAAA,CAAAkF,OAAA,CAAAvE,UAAA,CAAAsE,WAAA,CAAAE,KAAA,EAmxDnD,CAAC;IAnxDgD7O,EAAE,CAAAwE,SAAA,EAsxDnF,CAAC;IAtxDgFxE,EAAE,CAAA4I,WAAA,OAAAgG,OAAA,CAAAtB,EAsxDnF,CAAC,QAAD,CAAC,MAAAsB,OAAA,CAAAb,aAAD,CAAC,gBAAAa,OAAA,CAAA5E,UAAD,CAAC;IAtxDgFhK,EAAE,CAAAwE,SAAA,EA4xDnG,CAAC;IA5xDgGxE,EAAE,CAAA6I,kBAAA,MAAA8F,WAAA,CAAAG,IAAA,KA4xDnG,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAlL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5xDgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA2wD/B,CAAC;IA3wD4BnE,EAAE,CAAA8E,SAAA,cAixDnG,CAAC;IAjxDgG9E,EAAE,CAAAoE,UAAA,IAAAsK,uDAAA,cA6xD7F,CAAC;IA7xD0F1O,EAAE,CAAAqE,YAAA,CA8xD/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA8K,WAAA,GA9xD4F3O,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAwI,OAAA,GAAFhP,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAoG,OAAA,CAAAtB,SAAA,CAAAiB,WAAA,CAAAE,KAAA,CA2wDhC,CAAC;IA3wD6B7O,EAAE,CAAAwE,SAAA,EA+wD1E,CAAC;IA/wDuExE,EAAE,CAAA4I,WAAA,OAAAoG,OAAA,CAAAjB,aA+wD1E,CAAC,cAAAiB,OAAA,CAAAxE,iBAAA,EAAD,CAAC;IA/wDuExK,EAAE,CAAAwE,SAAA,EAkxD1E,CAAC;IAlxDuExE,EAAE,CAAAyE,UAAA,SAAAuK,OAAA,CAAAC,aAkxD1E,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAArL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlxDuE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0wD3D,CAAC;IA1wDwDnE,EAAE,CAAAoE,UAAA,IAAA2K,8CAAA,cA8xD/F,CAAC;IA9xD4F/O,EAAE,CAAAqE,YAAA,CA+xDjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GA/xD8F7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2wD7E,CAAC;IA3wD0ExE,EAAE,CAAAyE,UAAA,SAAAoD,MAAA,CAAAsH,YA2wD7E,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iCAAAxL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GA3wD0EzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAk+DrG,CAAC;IAl+DkGnE,EAAE,CAAAyF,UAAA,+BAAA6J,qEAAA3J,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi+D/Ef,MAAA,CAAAwK,cAAA,CAAA5J,MAAqB,EAAC;IAAA,EAAC;IAj+DsD3F,EAAE,CAAAqE,YAAA,CAk+DrG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAl+DkGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAAW,MAAA,CAAA6F,SAk9D9E,CAAC,kBAAA7F,MAAA,CAAA+F,aAAD,CAAC,mBAAA/F,MAAA,CAAAgG,cAAD,CAAC,kBAAAhG,MAAA,CAAAiG,aAAD,CAAC,eAAAjG,MAAA,CAAAwG,KAAD,CAAC,eAAAxG,MAAA,CAAAkG,UAAD,CAAC,UAAAlG,MAAA,CAAAoK,MAAD,CAAC,WAAApK,MAAA,CAAAqK,OAAD,CAAC,kBAAArK,MAAA,CAAAwF,aAAD,CAAC,kBAAAxF,MAAA,CAAAqG,IAAA,CAAAE,KAAD,CAAC,mBAAAvG,MAAA,CAAAsK,cAAD,CAAC,iBAAAtK,MAAA,CAAA+J,YAAD,CAAC,kBAAA/J,MAAA,CAAA6J,aAAD,CAAC,WAAA7J,MAAA,CAAAqG,IAAA,CAAAC,MAAD,CAAC,cAAAtG,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA8D,iCAAA9L,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAl9D2E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UA4+D9F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GA5+D2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAyH,SAu+DlF,CAAC,WAAAzH,MAAA,CAAA0H,WAAD,CAAC,WAAA1H,MAAA,CAAAmL,OAAD,CAAC,WAAAnL,MAAA,CAAAmH,IAAA,CAAAC,MAAD,CAAC,UAAApH,MAAA,CAAAmH,IAAA,CAAAE,KAAD,CAAC;EAAA;AAAA;AAAA,MAAAiE,GAAA;AAAA,SAAAC,gDAAAhM,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv+D+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UA02ErG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAiM,OAAA,GAAAhM,GAAA,CAAA0C,SAAA;IA12EkGxG,EAAE,CAAAqN,WAAA,eAAAyC,OAAA,CAAAnJ,KAw2EtE,CAAC,iBAAAmJ,OAAA,CAAAC,OAAD,CAAC;IAx2EmE/P,EAAE,CAAA4I,WAAA,WAAAkH,OAAA,CAAAE,MAAA,MAu2EpE,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,oDAAAtM,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv2EiE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,aAkpFrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GAlpFkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA2oFzE,CAAC;IA3oFsEzE,EAAE,CAAA4I,WAAA,MAAAtE,MAAA,CAAA8L,MAAA,CAAAC,EAAA,GAAA/L,MAAA,CAAA8L,MAAA,CAAAE,MA4oFjE,CAAC,MAAAhM,MAAA,CAAA8L,MAAA,CAAAG,EAAD,CAAC,UAAAjM,MAAA,CAAA8L,MAAA,CAAAE,MAAA,IAAD,CAAC,WAAAhM,MAAA,CAAA8L,MAAA,CAAA1E,MAAD,CAAC,SAAApH,MAAA,CAAAkM,YAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,oDAAA5M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5oF8D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,aA2pFrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkB,MAAA,GA3pFkG/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,MAAA7D,MAAA,CAAAqL,MAAA,CAAAC,EAAA,GAAAtL,MAAA,CAAAqL,MAAA,CAAAE,MAqpFjE,CAAC,MAAAvL,MAAA,CAAAqL,MAAA,CAAAG,EAAD,CAAC,UAAAxL,MAAA,CAAAqL,MAAA,CAAAE,MAAA,IAAD,CAAC,WAAAvL,MAAA,CAAAqL,MAAA,CAAA1E,MAAD,CAAC,SAAA3G,MAAA,CAAAyL,YAAD,CAAC;EAAA;AAAA;AAAA,MAAAE,IAAA,YAAAA,CAAA1M,EAAA;EAAA;IAAA8K,IAAA,EAAA9K;EAAA;AAAA;AAAA,SAAA2M,wCAAA9M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,GAAA,GArpF8DvF,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CAgoFnF,CAAC;IAhoFgF9G,EAAE,CAAAmE,cAAA,OAgoFnF,CAAC,UAAD,CAAC;IAhoFgFnE,EAAE,CAAA8E,SAAA,UAuoFnG,CAAC;IAvoFgG9E,EAAE,CAAAqE,YAAA,CAwoFhG,CAAC;IAxoF6FrE,EAAE,CAAAoE,UAAA,IAAA+L,mDAAA,iBAkpFrG,CAAC;IAlpFkGnQ,EAAE,CAAAoE,UAAA,IAAAqM,mDAAA,iBA2pFrG,CAAC;IA3pFkGzQ,EAAE,CAAAmE,cAAA,UAirFrG,CAAC;IAjrFkGnE,EAAE,CAAAyF,UAAA,oBAAAmL,iEAAA;MAAF5Q,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuqF1FD,MAAA,CAAAgL,OAAA,CAAAhL,MAAA,CAAAuK,MAAA,CAAAU,IAAmB,EAAC;IAAA,EAAC,sBAAAC,mEAAA;MAvqFmE/Q,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAW,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwqFxFI,MAAA,CAAA8K,cAAA,CAAe,EAAC;IAAA,CADE,CAAC,wBAAAC,qEAAA;MAvqFmEjR,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAc,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyqFtFO,MAAA,CAAA6K,gBAAA,CAAiB,EAAC;IAAA,CAFF,CAAC;IAvqFmElR,EAAE,CAAAqE,YAAA,CAirFrG,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAjrFkGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAooF5D,CAAC;IApoFyDxE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA+L,cAAA,CAAAC,QAooF5D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAgL,MAAA,CAAAkB,aAAD,CAAC;IApoFyDtR,EAAE,CAAAwE,SAAA,EA0oFnD,CAAC;IA1oFgDxE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAAmM,KAAA,IAAAnM,MAAA,CAAAoM,UAAA,IAAApM,MAAA,CAAAqM,IAAA,eA0oFnD,CAAC;IA1oFgDzR,EAAE,CAAAwE,SAAA,EAopFpD,CAAC;IAppFiDxE,EAAE,CAAAyE,UAAA,SAAAW,MAAA,CAAAmM,KAAA,IAAAnM,MAAA,CAAAoM,UAAA,IAAApM,MAAA,CAAAqM,IAAA,eAopFpD,CAAC;IAppFiDzR,EAAE,CAAAwE,SAAA,EAmqF/C,CAAC;IAnqF4CxE,EAAE,CAAA0R,WAAA,WAAAtM,MAAA,CAAAwB,QAAA,CAAF5G,EAAE,CAAA2E,eAAA,KAAA+L,IAAA,EAAAtL,MAAA,CAAAgL,MAAA,CAAAuB,UAAA,EAmqF/C,CAAC;IAnqF4C3R,EAAE,CAAAyE,UAAA,OAAAW,MAAA,CAAAgL,MAAA,CAAAC,EA+pFrF,CAAC,OAAAjL,MAAA,CAAAgL,MAAA,CAAAG,EAAD,CAAC,MAAAnL,MAAA,CAAAgL,MAAA,CAAAE,MAAD,CAAC,SAAAlL,MAAA,CAAAgL,MAAA,CAAAzJ,KAAD,CAAC,kBAAAvB,MAAA,CAAAgL,MAAA,CAAAvB,KAAA,uBAAD,CAAC,SAAAzJ,MAAA,CAAAgL,MAAA,CAAAvB,KAAD,CAAC,eAAAzJ,MAAA,CAAAgL,MAAA,CAAAwB,UAAD,CAAC,oBAAAxM,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA0M,cAAA,CAAAC,GAAD,CAAC,gBAAA3M,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,iBAAA7M,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAA/M,MAAA,CAAAgN,cAAA,CAAAhN,MAAA,CAAAgL,MAAA,CAAD,CAAC,oBAAAhL,MAAA,CAAA8M,eAAD,CAAC,mBAAA9M,MAAA,CAAAgL,MAAA,CAAAU,IAAD,CAAC;EAAA;AAAA;AAAA,MAAAuB,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,2CAAA1O,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/pFkF7D,EAAE,CAAA8G,cAAA,CA63FxG,CAAC;IA73FqG9G,EAAE,CAAA8E,SAAA,UA63FhG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA2O,YAAA,GAAA1O,GAAA,CAAA0C,SAAA;IA73F6FxG,EAAE,CAAA0R,WAAA,mBA03F9E,CAAC,QAAAc,YAAA,CAAAC,KAAA,UAAD,CAAC,SAAAD,YAAA,CAAAC,KAAA,WAAD,CAAC;IA13F2EzS,EAAE,CAAAyE,UAAA,WAAA+N,YAAA,CAAA9G,MAs3F5E,CAAC,UAAA8G,YAAA,CAAA7G,KAAD,CAAC,MAAA6G,YAAA,CAAAE,CAAD,CAAC,MAAAF,YAAA,CAAAG,CAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,gDAAAhP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt3FyE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAo8FrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAiM,OAAA,GAAAhM,GAAA,CAAA0C,SAAA;IAp8FkGxG,EAAE,CAAAqN,WAAA,eAAAyC,OAAA,CAAAnJ,KAk8FtE,CAAC,iBAAAmJ,OAAA,CAAAC,OAAD,CAAC;IAl8FmE/P,EAAE,CAAA4I,WAAA,WAAAkH,OAAA,CAAAE,MAAA,MAi8FpE,CAAC;EAAA;AAAA;AAAA,MAAA8C,IAAA;AAAA,SAAAC,mCAAAlP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj8FiE7D,EAAE,CAAA8G,cAAA,CAwiG9E,CAAC;IAxiG2E9G,EAAE,CAAAmE,cAAA,UAwiG9E,CAAC;IAxiG2EnE,EAAE,CAAA8E,SAAA,UA8iGrG,CAAC;IA9iGkG9E,EAAE,CAAAqE,YAAA,CA+iG9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA/iG2FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2iG9D,CAAC;IA3iG2DxE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA+L,cAAA,CAAAC,QA2iG9D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,MAAA0B,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,qDAAAtP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3iG2D7D,EAAE,CAAAmE,cAAA,YAy6GjC,CAAC;IAz6G8BnE,EAAE,CAAA8E,SAAA,aA06GA,CAAC;IA16GH9E,EAAE,CAAAmF,MAAA,EA46GnG,CAAC;IA56GgGnF,EAAE,CAAAqE,YAAA,CA46GvF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuP,cAAA,GAAAtP,GAAA,CAAA0C,SAAA;IAAA,MAAAqB,MAAA,GA56GoF7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA06Gd,CAAC;IA16GWxE,EAAE,CAAAqN,WAAA,qBAAA+F,cAAA,CAAAzM,KA06Gd,CAAC;IA16GW3G,EAAE,CAAAwE,SAAA,EA46GnG,CAAC;IA56GgGxE,EAAE,CAAA6I,kBAAA,MAAAhB,MAAA,CAAAwL,cAAA,CAAAD,cAAA,MA46GnG,CAAC;EAAA;AAAA;AAAA,SAAAE,wCAAAzP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA56GgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA+G,eAAA,CAw6G3D,CAAC;IAx6GwD/G,EAAE,CAAAmE,cAAA,YAw6G3D,CAAC;IAx6GwDnE,EAAE,CAAAoE,UAAA,IAAA+O,oDAAA,gBA46GvF,CAAC;IA56GoFnT,EAAE,CAAAqE,YAAA,CA66GzF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0P,QAAA,GAAAzP,GAAA,CAAAG,KAAA;IA76GsFjE,EAAE,CAAAwE,SAAA,EAy6GxD,CAAC;IAz6GqDxE,EAAE,CAAAyE,UAAA,YAAA8O,QAy6GxD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,uCAAA5P,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAz6GqD7D,EAAE,CAAA8E,SAAA,YAgxHhG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAhxH6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAW,MAAA,CAAAsO,YA8wH7E,CAAC,oBAAAtO,MAAA,CAAAuO,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,uCAAA/P,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9wH0E7D,EAAE,CAAAmE,cAAA,YAixH1D,CAAC;IAjxHuDnE,EAAE,CAAAmF,MAAA,EAmxHvG,CAAC;IAnxHoGnF,EAAE,CAAAqE,YAAA,CAmxHjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAnxH8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAmxHvG,CAAC;IAnxHoGxE,EAAE,CAAA6I,kBAAA,MAAAvE,MAAA,CAAAqP,eAAA,GAAArP,MAAA,CAAAqP,eAAA,CAAArP,MAAA,CAAAoP,YAAA,IAAApP,MAAA,CAAAuP,sBAAA,CAAAvP,MAAA,CAAAoP,YAAA,MAmxHvG,CAAC;EAAA;AAAA;AAAA,SAAAI,6CAAAjQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnxHoG7D,EAAE,CAAA8E,SAAA,aAwyH1F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkQ,aAAA,GAxyHuF/T,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAqB,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAsP,aAAA,CAAAC,MAsyHlE,CAAC,oBAAAnM,MAAA,CAAA8L,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAM,6CAAApQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtyH+D7D,EAAE,CAAAmE,cAAA,aAyyHrD,CAAC;IAzyHkDnE,EAAE,CAAAmF,MAAA,EA2yHjG,CAAC;IA3yH8FnF,EAAE,CAAAqE,YAAA,CA2yH3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkQ,aAAA,GA3yHwF/T,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAN,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2yHjG,CAAC;IA3yH8FxE,EAAE,CAAA6I,kBAAA,MAAA3C,MAAA,CAAAyN,eAAA,GAAAzN,MAAA,CAAAyN,eAAA,CAAAI,aAAA,CAAAlF,KAAA,IAAA3I,MAAA,CAAA2N,sBAAA,CAAAE,aAAA,CAAAlF,KAAA,MA2yHjG,CAAC;EAAA;AAAA;AAAA,SAAAqF,6CAAArQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3yH8F7D,EAAE,CAAA8E,SAAA,aAmzH1F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkQ,aAAA,GAnzHuF/T,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAFxG,EAAE,CAAAyE,UAAA,YAAAsP,aAAA,CAAAI,UAizH9D,CAAC,mBAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,6CAAAvQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjzH2D7D,EAAE,CAAAmE,cAAA,aAozHnD,CAAC;IApzHgDnE,EAAE,CAAAmF,MAAA,EAozHN,CAAC;IApzHGnF,EAAE,CAAAqE,YAAA,CAozHA,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkQ,aAAA,GApzHH/T,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAFxG,EAAE,CAAAwE,SAAA,EAozHN,CAAC;IApzHGxE,EAAE,CAAA6I,kBAAA,KAAAkL,aAAA,CAAAI,UAAA,CAAAE,cAAA,OAozHN,CAAC;EAAA;AAAA;AAAA,SAAAC,uCAAAzQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0Q,IAAA,GApzHGvU,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAAmE,cAAA,YAgyHlG,CAAC;IAhyH+FnE,EAAE,CAAAyF,UAAA,wBAAA+O,iEAAA;MAAA,MAAAC,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAR,aAAA,GAAAU,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6xHlFqH,OAAA,CAAAhH,QAAA,CAAAH,IAAA,CAAA+N,aAAA,CAAAjD,IAA6B,EAAC;IAAA,EAAC,wBAAA4D,iEAAA;MAAA,MAAAD,WAAA,GA7xHiDzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAR,aAAA,GAAAU,WAAA,CAAAjO,SAAA;MAAA,MAAAmO,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8xHlF6O,OAAA,CAAArO,UAAA,CAAAN,IAAA,CAAA+N,aAAA,CAAAjD,IAA+B,EAAC;IAAA,CADF,CAAC,mBAAA8D,4DAAA;MAAA,MAAAH,WAAA,GA7xHiDzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAR,aAAA,GAAAU,WAAA,CAAAjO,SAAA;MAAA,MAAAqO,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+xHvF+O,OAAA,CAAAhT,MAAA,CAAAmE,IAAA,CAAA+N,aAAA,CAAAjD,IAA2B,EAAC;IAAA,CAFO,CAAC;IA7xHiD9Q,EAAE,CAAA8E,SAAA,aAiyHtB,CAAC;IAjyHmB9E,EAAE,CAAAoE,UAAA,IAAA0P,4CAAA,iBAwyH1F,CAAC;IAxyHuF9T,EAAE,CAAAoE,UAAA,IAAA6P,4CAAA,iBA2yH3F,CAAC;IA3yHwFjU,EAAE,CAAAmE,cAAA,aA4yHzE,CAAC;IA5yHsEnE,EAAE,CAAAmF,MAAA,EA4yH5C,CAAC;IA5yHyCnF,EAAE,CAAAqE,YAAA,CA4yHtC,CAAC;IA5yHmCrE,EAAE,CAAAoE,UAAA,IAAA8P,4CAAA,iBAmzH1F,CAAC;IAnzHuFlU,EAAE,CAAAoE,UAAA,IAAAgQ,4CAAA,iBAozHA,CAAC;IApzHHpU,EAAE,CAAAqE,YAAA,CAqzH7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkQ,aAAA,GAAAjQ,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GArzH0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAiyH7B,CAAC;IAjyH0BxE,EAAE,CAAAqN,WAAA,sBAAA0G,aAAA,CAAApN,KAiyH7B,CAAC;IAjyH0B3G,EAAE,CAAAwE,SAAA,EAmyH9E,CAAC;IAnyH2ExE,EAAE,CAAAyE,UAAA,SAAAM,MAAA,CAAA+P,UAmyH9E,CAAC;IAnyH2E9U,EAAE,CAAAwE,SAAA,EAyyH1E,CAAC;IAzyHuExE,EAAE,CAAAyE,UAAA,UAAAM,MAAA,CAAA+P,UAyyH1E,CAAC;IAzyHuE9U,EAAE,CAAAwE,SAAA,EA4yH5C,CAAC;IA5yHyCxE,EAAE,CAAAqF,iBAAA,CAAA0O,aAAA,CAAAgB,YA4yH5C,CAAC;IA5yHyC/U,EAAE,CAAAwE,SAAA,EA8yH9E,CAAC;IA9yH2ExE,EAAE,CAAAyE,UAAA,SAAAM,MAAA,CAAA+P,UA8yH9E,CAAC;IA9yH2E9U,EAAE,CAAAwE,SAAA,EAozH1E,CAAC;IApzHuExE,EAAE,CAAAyE,UAAA,UAAAM,MAAA,CAAA+P,UAozH1E,CAAC;EAAA;AAAA;AAAA,MAAAE,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,qCAAAtR,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GApzHuEpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAo7JpG,CAAC;IAp7JiGnE,EAAE,CAAAyF,UAAA,+BAAA4P,yEAAA1P,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAlP,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm7J7EI,MAAA,CAAAoP,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAn7JiD3F,EAAE,CAAAqE,YAAA,CAo7J5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAp7JyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAw6JlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAiK,qCAAAjS,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkS,GAAA,GAx6J+E/V,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAm8JpG,CAAC;IAn8JiGnE,EAAE,CAAAyF,UAAA,+BAAAuQ,yEAAArQ,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmQ,GAAA;MAAA,MAAAE,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk8J7EmQ,MAAA,CAAAC,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAl8JkD3F,EAAE,CAAAqE,YAAA,CAm8J5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAn8JyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAw7JlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA4K,qCAAA5S,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAx7J+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAq8J3C,CAAC;IAr8JwCnE,EAAE,CAAA8E,SAAA,UAk9J/F,CAAC;IAl9J4F9E,EAAE,CAAAqE,YAAA,CAm9J3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6S,SAAA,GAAA5S,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GAn9JwF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAw8J9E,CAAC;IAx8J2ExE,EAAE,CAAAyE,UAAA,WAAAM,MAAA,CAAAwG,MAw8J9E,CAAC,WAAAxG,MAAA,CAAAyK,MAAD,CAAC,cAAAzK,MAAA,CAAA4R,SAAD,CAAC,WAAA5R,MAAA,CAAAsC,MAAD,CAAC,SAAAqP,SAAD,CAAC,kBAAA3R,MAAA,CAAAkD,aAAD,CAAC,cAAAlD,MAAA,CAAA6R,SAAD,CAAC,aAAA7R,MAAA,CAAA8R,QAAD,CAAC,UAAA9R,MAAA,CAAA+R,KAAD,CAAC,eAAA/R,MAAA,CAAA+P,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAiC,8CAAAlT,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0Q,IAAA,GAx8J2EvU,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAm+J3D,CAAC,WAAD,CAAC;IAn+JwDnE,EAAE,CAAAyF,UAAA,oBAAAuR,uEAAArR,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAA0C,UAAA,GAAAxC,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA++JlFqH,OAAA,CAAA0D,OAAA,CAAAlL,MAAA,EAAAsR,UAAsB,EAAC;IAAA,EAAC,sBAAAC,yEAAAvR,MAAA;MA/+JwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAI,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg/JhF6O,OAAA,CAAAwC,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADG,CAAC,wBAAAyR,2EAAAzR,MAAA;MA/+JwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi/J9E+O,OAAA,CAAAwC,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFD,CAAC;IA/+JwD3F,EAAE,CAAAqE,YAAA,CAk/J7F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoT,UAAA,GAAAnT,GAAA,CAAA0C,SAAA;IAAA,MAAAiD,OAAA,GAl/J0FzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAs+J5E,CAAC;IAt+JyExE,EAAE,CAAAyE,UAAA,WAAAgF,OAAA,CAAA8B,MAs+J5E,CAAC,WAAA9B,OAAA,CAAA+F,MAAD,CAAC,WAAA/F,OAAA,CAAApC,MAAD,CAAC,kBAAAoC,OAAA,CAAAxB,aAAD,CAAC,SAAAgP,UAAD,CAAC,cAAAxN,OAAA,CAAAmN,SAAD,CAAC,iBAAAnN,OAAA,CAAA6N,eAAD,CAAC,oBAAA7N,OAAA,CAAAoI,eAAD,CAAC,oBAAApI,OAAA,CAAAyI,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAqF,qCAAA1T,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GAt+JyExX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAq9JtC,CAAC;IAr9JmCnE,EAAE,CAAAyF,UAAA,wBAAAgS,kEAAA;MAAFzX,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAhL,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAq9JpD0G,OAAA,CAAAkL,WAAA,CAAY,EAAC;IAAA,EAAC;IAr9JoC1X,EAAE,CAAAmE,cAAA,WAi+J/F,CAAC;IAj+J4FnE,EAAE,CAAAyF,UAAA,mBAAAkS,6DAAAhS,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAI,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg+JrF8R,OAAA,CAAAC,qBAAA,CAAAlS,MAA4B,EAAC;IAAA,EAAC;IAh+JqD3F,EAAE,CAAAqE,YAAA,CAi+J/F,CAAC;IAj+J4FrE,EAAE,CAAAoE,UAAA,IAAA2S,6CAAA,eAm/JzF,CAAC;IAn/JsF/W,EAAE,CAAAqE,YAAA,CAo/J3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAp/JwF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAw9JlF,CAAC;IAx9J+ExE,EAAE,CAAAyE,UAAA,SAAAoB,MAAA,CAAA4F,IAw9JlF,CAAC,SAAA5F,MAAA,CAAAiS,IAAD,CAAC,WAAAjS,MAAA,CAAA0F,MAAD,CAAC,WAAA1F,MAAA,CAAA2J,MAAD,CAAC,YAAA3J,MAAA,CAAAkS,OAAD,CAAC,WAAAlS,MAAA,CAAAwB,MAAD,CAAC,oBAAAxB,MAAA,CAAAgM,eAAD,CAAC,oBAAAhM,MAAA,CAAAmS,qBAAD,CAAC;IAx9J+EhY,EAAE,CAAAwE,SAAA,EAm+J7D,CAAC;IAn+J0DxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAm+J7D,CAAC;EAAA;AAAA;AAAA,SAAAE,+CAAApU,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn+J0D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAogK7C,CAAC;IApgK0CnE,EAAE,CAAA8E,SAAA,WAghKjG,CAAC;IAhhK8F9E,EAAE,CAAAqE,YAAA,CAihK7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAqU,UAAA,GAAApU,GAAA,CAAA0C,SAAA;IAAA,MAAA+D,OAAA,GAjhK0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAugKxE,CAAC;IAvgKqExE,EAAE,CAAAyE,UAAA,WAAA8F,OAAA,CAAA4N,cAugKxE,CAAC,WAAA5N,OAAA,CAAA6N,cAAD,CAAC,cAAA7N,OAAA,CAAAoM,SAAD,CAAC,WAAApM,OAAA,CAAAlD,MAAD,CAAC,SAAA6Q,UAAD,CAAC,cAAA3N,OAAA,CAAAqM,SAAD,CAAC,aAAArM,OAAA,CAAAsM,QAAD,CAAC,UAAAtM,OAAA,CAAAuM,KAAD,CAAC,eAAAvM,OAAA,CAAAuK,UAAD,CAAC;EAAA;AAAA;AAAA,MAAAuD,IAAA,YAAAA,CAAArU,EAAA,EAAAsU,EAAA;EAAA,QAAAtU,EAAA,EAAAsU,EAAA;AAAA;AAAA,SAAAC,sCAAA1U,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2U,IAAA,GAvgKqExY,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAmgKtG,CAAC;IAngKmGnE,EAAE,CAAAyF,UAAA,4BAAAgT,uEAAA9S,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4S,IAAA;MAAA,MAAAE,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAkgKlF4S,OAAA,CAAAC,YAAA,CAAAhT,MAAmB,EAAC;IAAA,EAAC;IAlgK2D3F,EAAE,CAAAoE,UAAA,IAAA6T,8CAAA,cAihK7F,CAAC;IAjhK0FjY,EAAE,CAAAqE,YAAA,CAkhK/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GAlhK4F7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OA2/JlF,CAAC,SA3/J+E/X,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAxQ,MAAA,CAAAgR,aAAA,EAAAhR,MAAA,CAAA6D,MAAA,CA2/JlF,CAAC,WAAA7D,MAAA,CAAAiR,cAAD,CAAC,WAAAjR,MAAA,CAAAkR,MAAD,CAAC,iBAAAlR,MAAA,CAAAmR,YAAD,CAAC,WAAAnR,MAAA,CAAAoR,MAAD,CAAC,cAAApR,MAAA,CAAA+O,SAAD,CAAC;IA3/J+E5W,EAAE,CAAA4I,WAAA,cAAAf,MAAA,CAAAqR,iBA0/JjE,CAAC;IA1/J8DlZ,EAAE,CAAAwE,SAAA,EAogK/D,CAAC;IApgK4DxE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OAogK/D,CAAC,iBAAAlQ,MAAA,CAAAsR,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAvV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GApgK4DpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAuhLpG,CAAC;IAvhLiGnE,EAAE,CAAAyF,UAAA,+BAAA4T,mFAAA1T,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAlP,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAshL7EI,MAAA,CAAAoP,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAthLiD3F,EAAE,CAAAqE,YAAA,CAuhL5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAvhLyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MA2gLlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAyN,+CAAAzV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkS,GAAA,GA3gL+E/V,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAsiLpG,CAAC;IAtiLiGnE,EAAE,CAAAyF,UAAA,+BAAA8T,mFAAA5T,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmQ,GAAA;MAAA,MAAAE,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqiL7EmQ,MAAA,CAAAC,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAriLkD3F,EAAE,CAAAqE,YAAA,CAsiL5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAtiLyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MA2hLlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2N,+CAAA3V,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3hL+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAwiL3C,CAAC;IAxiLwCnE,EAAE,CAAA8E,SAAA,UAqjL/F,CAAC;IArjL4F9E,EAAE,CAAAqE,YAAA,CAsjL3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6S,SAAA,GAAA5S,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GAtjLwF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2iL9E,CAAC;IA3iL2ExE,EAAE,CAAAyE,UAAA,WAAAM,MAAA,CAAAwG,MA2iL9E,CAAC,WAAAxG,MAAA,CAAAyK,MAAD,CAAC,WAAAzK,MAAA,CAAAsC,MAAD,CAAC,SAAAqP,SAAD,CAAC,cAAA3R,MAAA,CAAA6R,SAAD,CAAC,kBAAA7R,MAAA,CAAAkD,aAAD,CAAC,aAAAlD,MAAA,CAAA8R,QAAD,CAAC,mBAAD,CAAC,UAAA9R,MAAA,CAAA+R,KAAD,CAAC,eAAA/R,MAAA,CAAA+P,UAAD,CAAC;EAAA;AAAA;AAAA,SAAA2E,wDAAA5V,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0Q,IAAA,GA3iL2EvU,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAukL3D,CAAC,WAAD,CAAC;IAvkLwDnE,EAAE,CAAAyF,UAAA,oBAAAiU,iFAAA/T,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAA0C,UAAA,GAAAxC,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAolLlFqH,OAAA,CAAA0D,OAAA,CAAAlL,MAAA,EAAAsR,UAAsB,EAAC;IAAA,EAAC,sBAAA0C,mFAAAhU,MAAA;MAplLwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAI,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqlLhF6O,OAAA,CAAAwC,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADG,CAAC,wBAAAiU,qFAAAjU,MAAA;MAplLwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAslL9E+O,OAAA,CAAAwC,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFD,CAAC;IAplLwD3F,EAAE,CAAAqE,YAAA,CAulL7F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoT,UAAA,GAAAnT,GAAA,CAAA0C,SAAA;IAAA,MAAAiD,OAAA,GAvlL0FzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA0kLlE,CAAC;IA1kL+DxE,EAAE,CAAAyE,UAAA,SAAAgF,OAAA,CAAAoQ,UAAA,CAAAC,OA0kLlE,CAAC,WAAArQ,OAAA,CAAA8B,MAAD,CAAC,WAAA9B,OAAA,CAAA+F,MAAD,CAAC,WAAA/F,OAAA,CAAApC,MAAD,CAAC,kBAAAoC,OAAA,CAAAxB,aAAD,CAAC,SAAAgP,UAAD,CAAC,cAAAxN,OAAA,CAAAmN,SAAD,CAAC,iBAAAnN,OAAA,CAAA6N,eAAD,CAAC,oBAAA7N,OAAA,CAAAoI,eAAD,CAAC,oBAAApI,OAAA,CAAAyI,eAAD,CAAC;EAAA;AAAA;AAAA,SAAA6H,+CAAAlW,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GA1kL+DxX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAwjLtC,CAAC;IAxjLmCnE,EAAE,CAAAyF,UAAA,wBAAAuU,4EAAA;MAAFha,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAhL,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwjLpD0G,OAAA,CAAAkL,WAAA,CAAY,EAAC;IAAA,EAAC;IAxjLoC1X,EAAE,CAAAmE,cAAA,WAqkL/F,CAAC;IArkL4FnE,EAAE,CAAAyF,UAAA,mBAAAwU,uEAAAtU,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAI,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAokLrF8R,OAAA,CAAAC,qBAAA,CAAAlS,MAA4B,EAAC;IAAA,EAAC;IApkLqD3F,EAAE,CAAAqE,YAAA,CAqkL/F,CAAC;IArkL4FrE,EAAE,CAAAoE,UAAA,IAAAqV,uDAAA,gBAwlLzF,CAAC;IAxlLsFzZ,EAAE,CAAAqE,YAAA,CAylL3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAzlLwF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2jLlF,CAAC;IA3jL+ExE,EAAE,CAAAyE,UAAA,SAAAoB,MAAA,CAAA4F,IA2jLlF,CAAC,SAAA5F,MAAA,CAAAiS,IAAD,CAAC,WAAAjS,MAAA,CAAA0F,MAAD,CAAC,WAAA1F,MAAA,CAAA2J,MAAD,CAAC,YAAA3J,MAAA,CAAAkS,OAAD,CAAC,WAAAlS,MAAA,CAAAwB,MAAD,CAAC,uBAAD,CAAC,oBAAAxB,MAAA,CAAAgM,eAAD,CAAC,oBAAAhM,MAAA,CAAAmS,qBAAD,CAAC;IA3jL+EhY,EAAE,CAAAwE,SAAA,EAukL7D,CAAC;IAvkL0DxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAukL7D,CAAC;EAAA;AAAA;AAAA,SAAAmC,yDAAArW,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvkL0D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAymL7C,CAAC;IAzmL0CnE,EAAE,CAAA8E,SAAA,WAqnLjG,CAAC;IArnL8F9E,EAAE,CAAAqE,YAAA,CAsnL7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAqU,UAAA,GAAApU,GAAA,CAAA0C,SAAA;IAAA,MAAA+D,OAAA,GAtnL0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA4mLxE,CAAC;IA5mLqExE,EAAE,CAAAyE,UAAA,WAAA8F,OAAA,CAAA4N,cA4mLxE,CAAC,WAAA5N,OAAA,CAAA6N,cAAD,CAAC,WAAA7N,OAAA,CAAAlD,MAAD,CAAC,SAAA6Q,UAAD,CAAC,cAAA3N,OAAA,CAAAqM,SAAD,CAAC,aAAArM,OAAA,CAAAsM,QAAD,CAAC,mBAAD,CAAC,UAAAtM,OAAA,CAAAuM,KAAD,CAAC,eAAAvM,OAAA,CAAAuK,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAqF,gDAAAtW,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2U,IAAA,GA5mLqExY,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAwmLtG,CAAC;IAxmLmGnE,EAAE,CAAAyF,UAAA,4BAAA2U,iFAAAzU,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4S,IAAA;MAAA,MAAAE,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAumLlF4S,OAAA,CAAAC,YAAA,CAAAhT,MAAmB,EAAC;IAAA,EAAC;IAvmL2D3F,EAAE,CAAAoE,UAAA,IAAA8V,wDAAA,cAsnL7F,CAAC;IAtnL0Fla,EAAE,CAAAqE,YAAA,CAunL/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GAvnL4F7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OAgmLlF,CAAC,SAhmL+E/X,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAxQ,MAAA,CAAAgR,aAAA,EAAAhR,MAAA,CAAA6D,MAAA,CAgmLlF,CAAC,WAAA7D,MAAA,CAAAiR,cAAD,CAAC,WAAAjR,MAAA,CAAAkR,MAAD,CAAC,iBAAAlR,MAAA,CAAAmR,YAAD,CAAC,WAAAnR,MAAA,CAAAoR,MAAD,CAAC,cAAApR,MAAA,CAAA+O,SAAD,CAAC;IAhmL+E5W,EAAE,CAAA4I,WAAA,cAAAf,MAAA,CAAAqR,iBA+lLjE,CAAC;IA/lL8DlZ,EAAE,CAAAwE,SAAA,EAymL/D,CAAC;IAzmL4DxE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OAymL/D,CAAC,iBAAAlQ,MAAA,CAAAsR,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAkB,IAAA;AAAA,SAAAC,4CAAAzW,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GAzmL4DpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAynMpG,CAAC;IAznMiGnE,EAAE,CAAAyF,UAAA,+BAAA8U,gFAAA5U,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAlP,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwnM7EI,MAAA,CAAAoP,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAxnMiD3F,EAAE,CAAAqE,YAAA,CAynM5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAznMyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MA6mMlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2O,4CAAA3W,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkS,GAAA,GA7mM+E/V,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAwoMpG,CAAC;IAxoMiGnE,EAAE,CAAAyF,UAAA,+BAAAgV,gFAAA9U,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmQ,GAAA;MAAA,MAAAE,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuoM7EmQ,MAAA,CAAAC,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAvoMkD3F,EAAE,CAAAqE,YAAA,CAwoM5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAxoMyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MA6nMlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA6O,4CAAA7W,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7nM+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0oM3C,CAAC;IA1oMwCnE,EAAE,CAAA8E,SAAA,UAupM/F,CAAC;IAvpM4F9E,EAAE,CAAAqE,YAAA,CAwpM3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6S,SAAA,GAAA5S,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GAxpMwF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6oM9E,CAAC;IA7oM2ExE,EAAE,CAAAyE,UAAA,WAAAM,MAAA,CAAAwG,MA6oM9E,CAAC,WAAAxG,MAAA,CAAAyK,MAAD,CAAC,WAAAzK,MAAA,CAAAsC,MAAD,CAAC,SAAAqP,SAAD,CAAC,cAAA3R,MAAA,CAAA6R,SAAD,CAAC,aAAA7R,MAAA,CAAA8R,QAAD,CAAC,kBAAA9R,MAAA,CAAAkD,aAAD,CAAC,gBAAD,CAAC,UAAAlD,MAAA,CAAA+R,KAAD,CAAC,eAAA/R,MAAA,CAAA+P,UAAD,CAAC;EAAA;AAAA;AAAA,SAAA6F,qDAAA9W,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0Q,IAAA,GA7oM2EvU,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAwqMzC,CAAC,WAAD,CAAC;IAxqMsCnE,EAAE,CAAAyF,UAAA,oBAAAmV,8EAAAjV,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAA0C,UAAA,GAAAxC,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqrMlFqH,OAAA,CAAA0D,OAAA,CAAAlL,MAAA,EAAAsR,UAAsB,EAAC;IAAA,EAAC,sBAAA4D,gFAAAlV,MAAA;MArrMwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAI,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAsrMhF6O,OAAA,CAAAwC,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADG,CAAC,wBAAAmV,kFAAAnV,MAAA;MArrMwD3F,EAAE,CAAA4F,aAAA,CAAA2O,IAAA;MAAA,MAAAM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAurM9E+O,OAAA,CAAAwC,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFD,CAAC;IArrMwD3F,EAAE,CAAAqE,YAAA,CAwrM7F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoT,UAAA,GAAAnT,GAAA,CAAA0C,SAAA;IAAA,MAAAiD,OAAA,GAxrM0FzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA2qMlE,CAAC;IA3qM+DxE,EAAE,CAAAyE,UAAA,SAAAgF,OAAA,CAAAoQ,UAAA,CAAAC,OA2qMlE,CAAC,WAAArQ,OAAA,CAAA8B,MAAD,CAAC,WAAA9B,OAAA,CAAA+F,MAAD,CAAC,WAAA/F,OAAA,CAAApC,MAAD,CAAC,kBAAAoC,OAAA,CAAAxB,aAAD,CAAC,SAAAgP,UAAD,CAAC,cAAAxN,OAAA,CAAAmN,SAAD,CAAC,iBAAAnN,OAAA,CAAA6N,eAAD,CAAC,oBAAA7N,OAAA,CAAAoI,eAAD,CAAC,oBAAApI,OAAA,CAAAyI,eAAD,CAAC;EAAA;AAAA;AAAA,SAAA6I,4CAAAlX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GA3qM+DxX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WA0pMtC,CAAC;IA1pMmCnE,EAAE,CAAAyF,UAAA,wBAAAuV,yEAAA;MAAFhb,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAhL,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA0pMpD0G,OAAA,CAAAkL,WAAA,CAAY,EAAC;IAAA,EAAC;IA1pMoC1X,EAAE,CAAAmE,cAAA,WAsqM/F,CAAC;IAtqM4FnE,EAAE,CAAAyF,UAAA,mBAAAwV,oEAAAtV,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAI,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqqMrF8R,OAAA,CAAAC,qBAAA,CAAAlS,MAA4B,EAAC;IAAA,EAAC;IArqMqD3F,EAAE,CAAAqE,YAAA,CAsqM/F,CAAC;IAtqM4FrE,EAAE,CAAAoE,UAAA,IAAAuW,oDAAA,eAyrMzF,CAAC;IAzrMsF3a,EAAE,CAAAqE,YAAA,CA0rM3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GA1rMwF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6pMlF,CAAC;IA7pM+ExE,EAAE,CAAAyE,UAAA,SAAAoB,MAAA,CAAA4F,IA6pMlF,CAAC,SAAA5F,MAAA,CAAAiS,IAAD,CAAC,WAAAjS,MAAA,CAAA0F,MAAD,CAAC,WAAA1F,MAAA,CAAA2J,MAAD,CAAC,YAAA3J,MAAA,CAAAkS,OAAD,CAAC,WAAAlS,MAAA,CAAAwB,MAAD,CAAC,oBAAAxB,MAAA,CAAAgM,eAAD,CAAC,oBAAAhM,MAAA,CAAAmS,qBAAD,CAAC;IA7pM+EhY,EAAE,CAAAwE,SAAA,EAwqM3D,CAAC;IAxqMwDxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAwqM3D,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA+B,sDAAArX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxqMwD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0sM7C,CAAC;IA1sM0CnE,EAAE,CAAA8E,SAAA,WAstMjG,CAAC;IAttM8F9E,EAAE,CAAAqE,YAAA,CAutM7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAqU,UAAA,GAAApU,GAAA,CAAA0C,SAAA;IAAA,MAAA+D,OAAA,GAvtM0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6sMxE,CAAC;IA7sMqExE,EAAE,CAAAyE,UAAA,WAAA8F,OAAA,CAAA4N,cA6sMxE,CAAC,WAAA5N,OAAA,CAAA6N,cAAD,CAAC,WAAA7N,OAAA,CAAAlD,MAAD,CAAC,SAAA6Q,UAAD,CAAC,cAAA3N,OAAA,CAAAqM,SAAD,CAAC,aAAArM,OAAA,CAAAsM,QAAD,CAAC,gBAAD,CAAC,UAAAtM,OAAA,CAAAuM,KAAD,CAAC,eAAAvM,OAAA,CAAAuK,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAqG,6CAAAtX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2U,IAAA,GA7sMqExY,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAysMtG,CAAC;IAzsMmGnE,EAAE,CAAAyF,UAAA,4BAAA2V,8EAAAzV,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4S,IAAA;MAAA,MAAAE,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwsMlF4S,OAAA,CAAAC,YAAA,CAAAhT,MAAmB,EAAC;IAAA,EAAC;IAxsM2D3F,EAAE,CAAAoE,UAAA,IAAA8W,qDAAA,cAutM7F,CAAC;IAvtM0Flb,EAAE,CAAAqE,YAAA,CAwtM/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GAxtM4F7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OAisMlF,CAAC,SAjsM+E/X,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAxQ,MAAA,CAAAgR,aAAA,EAAAhR,MAAA,CAAA6D,MAAA,CAisMlF,CAAC,WAAA7D,MAAA,CAAAiR,cAAD,CAAC,WAAAjR,MAAA,CAAAkR,MAAD,CAAC,iBAAAlR,MAAA,CAAAmR,YAAD,CAAC,WAAAnR,MAAA,CAAAoR,MAAD,CAAC,cAAApR,MAAA,CAAA+O,SAAD,CAAC;IAjsM+E5W,EAAE,CAAA4I,WAAA,cAAAf,MAAA,CAAAqR,iBAgsMjE,CAAC;IAhsM8DlZ,EAAE,CAAAwE,SAAA,EA0sM/D,CAAC;IA1sM4DxE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OA0sM/D,CAAC,iBAAAlQ,MAAA,CAAAsR,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAkC,IAAA;AAAA,SAAAC,kCAAAzX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1sM4D7D,EAAE,CAAA8G,cAAA,CA+lN3E,CAAC;IA/lNwE9G,EAAE,CAAAmE,cAAA,UA+lN3E,CAAC;IA/lNwEnE,EAAE,CAAA8E,SAAA,UAgmNS,CAAC;IAhmNZ9E,EAAE,CAAAqE,YAAA,CAimN9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAjmN2FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAgmNtC,CAAC;IAhmNmCxE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA6G,WAgmNtC,CAAC,SAAA7G,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,MAAAiK,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,mCAAA5X,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,GAAA,GAhmNmCvF,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CA++NxG,CAAC;IA/+NqG9G,EAAE,CAAAmE,cAAA,UA++NxG,CAAC;IA/+NqGnE,EAAE,CAAAyF,UAAA,oBAAAiW,4DAAA/V,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg+N5FD,MAAA,CAAA8V,KAAA,CAAAhW,MAAY,EAAC;IAAA,EAAC,sBAAAiW,8DAAAjW,MAAA;MAh+N4E3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAW,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAq+N1FI,MAAA,CAAAC,QAAA,CAAAH,IAAA,CAAAL,MAAoB,EAAC;IAAA,CALV,CAAC,wBAAAkW,gEAAAlW,MAAA;MAh+N4E3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAc,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAs+NxFO,MAAA,CAAAC,UAAA,CAAAN,IAAA,CAAAL,MAAsB,EAAC;IAAA,CANd,CAAC;IAh+N4E3F,EAAE,CAAAqE,YAAA,CA++NhG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAiY,MAAA,GAAAhY,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GA/+N6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAs9N3E,CAAC,UAAAqX,MAAA,CAAAnQ,KAAD,CAAC,WAAAmQ,MAAA,CAAApQ,MAAD,CAAC,MAAAoQ,MAAA,CAAApJ,CAAD,CAAC,MAAAoJ,MAAA,CAAAnJ,CAAD,CAAC,SAAAmJ,MAAA,CAAAnV,KAAD,CAAC,UAAAmV,MAAA,CAAAxK,aAAD,CAAC,SAAAwK,MAAA,CAAAhL,IAAD,CAAC,gBAAA1L,MAAA,CAAA+L,cAAA,CAAA4K,UAAD,CAAC,eAAAD,MAAA,CAAAE,UAAD,CAAC,aAAA5W,MAAA,CAAAyR,QAAD,CAAC,aAAAzR,MAAA,CAAAwB,QAAA,CAAAkV,MAAA,CAAAhL,IAAA,CAAD,CAAC,cAAAgL,MAAA,CAAAG,SAAD,CAAC,eAAA7W,MAAA,CAAA0P,UAAD,CAAC,oBAAA1P,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA8W,gBAAD,CAAC,gBAAA9W,MAAA,CAAA+W,WAAD,CAAC,iBAAA/W,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAA2J,MAAA,CAAAM,WAAD,CAAC,oBAAAhX,MAAA,CAAA8M,eAAD,CAAC,mBAAA4J,MAAA,CAAAhL,IAAD,CAAC,kBAAA1L,MAAA,CAAAiX,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAAzY,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GAt9NwE7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA4/NrG,CAAC;IA5/NkGnE,EAAE,CAAAyF,UAAA,+BAAA8W,gFAAA5W,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAA2P,IAAA,GAAA/H,WAAA,CAAA9L,KAAA;MAAA,MAAAc,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2/N/E2D,OAAA,CAAAgT,qBAAA,CAAAzW,IAAA;QAAA0W,IAAA,EAAA/W,MAAA;QAAAgD,KAAA,EAAA6T;MAAA,CAAqD,EAAC;IAAA,EAAC;IA3/NsBxc,EAAE,CAAAqE,YAAA,CA4/NrG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA8Y,IAAA,GAAA7Y,GAAA,CAAA0C,SAAA;IAAA,MAAAyP,MAAA,GA5/NkGjW,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAkY,IAAA,CAAAjK,CAo/NzF,CAAC,SAAAiK,IAAA,CAAAhK,CAAD,CAAC,aAAAgK,IAAA,CAAAhR,KAAD,CAAC,cAAAgR,IAAA,CAAAjR,MAAD,CAAC,UAAAiR,IAAA,CAAAC,KAAD,CAAC,oBAAA3G,MAAA,CAAA4G,mBAAD,CAAC,gBAAA5G,MAAA,CAAA9E,cAAA,CAAA4K,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAe,mCAAAjZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAp/NsF7D,EAAE,CAAA8G,cAAA,CAg/N5E,CAAC;IAh/NyE9G,EAAE,CAAAmE,cAAA,OAg/N5E,CAAC;IAh/NyEnE,EAAE,CAAAoE,UAAA,IAAAkY,2CAAA,cA4/NrG,CAAC;IA5/NkGtc,EAAE,CAAAqE,YAAA,CA6/NjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA7/N8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAm/NjE,CAAC;IAn/N8DxE,EAAE,CAAAyE,UAAA,YAAAH,MAAA,CAAAyY,iBAm/NjE,CAAC,iBAAAzY,MAAA,CAAA0Y,gBAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,yCAAApZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAn/N8DzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA0yOpG,CAAC;IA1yOiGnE,EAAE,CAAAyF,UAAA,+BAAAyX,6EAAAvX,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyyO7Ef,MAAA,CAAAuQ,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAzyOiD3F,EAAE,CAAAqE,YAAA,CA0yO5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA1yOyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MA8xOlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAsR,yCAAAtZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA9xO+Epd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAyzOpG,CAAC;IAzzOiGnE,EAAE,CAAAyF,UAAA,+BAAA4X,6EAAA1X,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwzO7E+B,MAAA,CAAAqO,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAxzOkD3F,EAAE,CAAAqE,YAAA,CAyzO5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAzzOyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MA8yOlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,gBAAAlS,MAAA,CAAAgZ,iBAAA,CAAAC,QAAD,CAAC,cAAAjZ,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2R,2CAAA3Z,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA9yO+Epd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAutPpG,CAAC;IAvtPiGnE,EAAE,CAAAyF,UAAA,+BAAAgY,+EAAA9X,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAstP7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAttPiD3F,EAAE,CAAAqE,YAAA,CAutP5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAvtPyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAsY,UA2sP9E,CAAC,SAAAtY,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA8R,2CAAA9Z,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GA3sP2E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAsuPpG,CAAC;IAtuPiGnE,EAAE,CAAAyF,UAAA,+BAAAmY,+EAAAjY,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAquP7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAruPkD3F,EAAE,CAAAqE,YAAA,CAsuP5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAtuPyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAuZ,UA2tP9E,CAAC,SAAAvZ,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,gBAAAlS,MAAA,CAAAgZ,iBAAA,CAAAC,QAAD,CAAC,cAAAjZ,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAiS,oDAAAja,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAka,IAAA,GA3tP2E/d,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA6uPlG,CAAC,UAAD,CAAC;IA7uP+FnE,EAAE,CAAAyF,UAAA,oBAAAuY,6EAAArY,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA0X,OAAA,GAAFle,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+vPpFoY,OAAA,CAAArN,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAAE,+EAAAxY,MAAA;MAAA,MAAA8O,WAAA,GA/vP2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAgwPlFsY,OAAA,CAAAjH,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAAI,iFAAA1Y,MAAA;MAAA,MAAA8O,WAAA,GA/vP2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAmO,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAiwPhF6O,OAAA,CAAA0C,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC,mCAAAK,4FAAA3Y,MAAA;MAAA,MAAA8O,WAAA,GA/vP2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAQ,SAAA,GAAA9J,WAAA,CAAA9L,KAAA;MAAA,MAAAkM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAkwPrE+O,OAAA,CAAA2J,0BAAA,CAAA7Y,MAAA,EAAA4Y,SAAwC,EAAC;IAAA,CAHlC,CAAC;IA/vP2Dve,EAAE,CAAAqE,YAAA,CAmwP/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GAnwP4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA2uPrE,CAAC;IA3uPkEzE,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CA4uPzD,CAAC;IA5uPsDje,EAAE,CAAAwE,SAAA,EAgvP1E,CAAC;IAhvPuExE,EAAE,CAAAyE,UAAA,WAAA4E,MAAA,CAAAqU,UAgvP1E,CAAC,kBAAArU,MAAA,CAAApB,aAAD,CAAC,WAAAoB,MAAA,CAAAqV,UAAD,CAAC,WAAArV,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,SAAAtV,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,eAAA+L,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAA2S,UAAD,CAAC,eAAA3S,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAuV,aAAD,CAAC,wBAAAvV,MAAA,CAAAwT,mBAAD,CAAC,kBAAAxT,MAAA,CAAAgT,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAwC,2CAAAhb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhvPuE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAwuP/E,CAAC;IAxuP4EnE,EAAE,CAAAoE,UAAA,IAAA0Z,mDAAA,eAowP3F,CAAC;IApwPwF9d,EAAE,CAAAqE,YAAA,CAqwP7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GArwP0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA0uPnE,CAAC;IA1uPgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OA0uPnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA2F,oDAAAjb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkb,IAAA,GA1uPgE/e,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0wPlG,CAAC,UAAD,CAAC;IA1wP+FnE,EAAE,CAAAyF,UAAA,oBAAAuZ,6EAAArZ,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4xPpFyE,OAAA,CAAAsG,OAAA,CAAAlL,MAAA,EAAAsZ,SAAqB,EAAC;IAAA,EAAC,sBAAAC,+EAAAvZ,MAAA;MAAA,MAAA8O,WAAA,GA5xP2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAAkS,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6xPlF4S,OAAA,CAAAvB,UAAA,CAAAxR,MAAA,EAAAsZ,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAAE,iFAAAxZ,MAAA;MAAA,MAAA8O,WAAA,GA5xP2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA4Y,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8xPhFsZ,OAAA,CAAA/H,YAAA,CAAA1R,MAAA,EAAAsZ,SAA0B,EAAC;IAAA,CAFT,CAAC,mCAAAI,4FAAA1Z,MAAA;MAAA,MAAA8O,WAAA,GA5xP2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAO,SAAA,GAAA7K,WAAA,CAAA9L,KAAA;MAAA,MAAAwF,OAAA,GAAFnO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+xPrEqI,OAAA,CAAAqQ,0BAAA,CAAA7Y,MAAA,EAAA2Z,SAAwC,EAAC;IAAA,CAHlC,CAAC;IA5xP2Dtf,EAAE,CAAAqE,YAAA,CAgyP/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAob,SAAA,GAAAnb,GAAA,CAAA0C,SAAA;IAAA,MAAAgG,OAAA,GAhyP4FxM,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA4D,OAAA,CAAAiS,cAAA,CAAAQ,SAAA,CAywPzD,CAAC;IAzwPsDjf,EAAE,CAAAwE,SAAA,EA6wP1E,CAAC;IA7wPuExE,EAAE,CAAAyE,UAAA,WAAA+H,OAAA,CAAAkR,UA6wP1E,CAAC,kBAAAlR,OAAA,CAAAvE,aAAD,CAAC,WAAAuE,OAAA,CAAAkS,UAAD,CAAC,WAAAlS,OAAA,CAAAnF,MAAD,CAAC,WAAA4X,SAAA,CAAAN,MAAD,CAAC,SAAAnS,OAAA,CAAAf,IAAD,CAAC,aAAAe,OAAA,CAAAqK,QAAD,CAAC,oBAAArK,OAAA,CAAAqF,eAAD,CAAC,oBAAArF,OAAA,CAAA0F,eAAD,CAAC,eAAA+M,SAAA,CAAAnQ,IAAD,CAAC,eAAAtC,OAAA,CAAAwP,UAAD,CAAC,eAAAxP,OAAA,CAAAsI,UAAD,CAAC,kBAAAtI,OAAA,CAAAoS,aAAD,CAAC,wBAAApS,OAAA,CAAAqQ,mBAAD,CAAC,kBAAArQ,OAAA,CAAA6P,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAkD,2CAAA1b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7wPuE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAswPhF,CAAC;IAtwP6EnE,EAAE,CAAAoE,UAAA,IAAA0a,mDAAA,eAiyP3F,CAAC;IAjyPwF9e,EAAE,CAAAqE,YAAA,CAkyP7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAlyP0F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAwwPnE,CAAC;IAxwPgExE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAwwPnE,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAqG,mDAAA3b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GAxwPgEpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA4rQpG,CAAC;IA5rQiGnE,EAAE,CAAAyF,UAAA,+BAAAga,uFAAA9Z,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2rQ7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IA3rQiD3F,EAAE,CAAAqE,YAAA,CA4rQ5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA5rQyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAgrQlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA6T,mDAAA7b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GAhrQ+E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA0sQpG,CAAC;IA1sQiGnE,EAAE,CAAAyF,UAAA,+BAAAka,uFAAAha,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAysQ7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAzsQkD3F,EAAE,CAAAqE,YAAA,CA0sQ5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA1sQyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAgsQlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA+T,4DAAA/b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GAhsQ+E7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAgtQlG,CAAC,UAAD,CAAC;IAhtQ+FnE,EAAE,CAAAyF,UAAA,oBAAAoa,qFAAAla,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAiD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+tQpF2D,OAAA,CAAAoH,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAA6B,uFAAAna,MAAA;MAAA,MAAA8O,WAAA,GA/tQ2DzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAguQlFqH,OAAA,CAAAgK,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAA8B,yFAAApa,MAAA;MAAA,MAAA8O,WAAA,GA/tQ2DzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAiuQhFsY,OAAA,CAAA/G,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC;IA/tQ2Dje,EAAE,CAAAqE,YAAA,CAmuQ/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GAnuQ4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA8sQrE,CAAC;IA9sQkEzE,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CA+sQzD,CAAC;IA/sQsDje,EAAE,CAAAwE,SAAA,EAmtQ/D,CAAC;IAntQ4DxE,EAAE,CAAAyE,UAAA,SAAA4E,MAAA,CAAA2W,YAAA,CAAAC,UAmtQ/D,CAAC,WAAA5W,MAAA,CAAAkC,MAAD,CAAC,WAAAlC,MAAA,CAAAmG,MAAD,CAAC,kBAAAnG,MAAA,CAAApB,aAAD,CAAC,WAAAoB,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,SAAAtV,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,eAAA+L,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAgT,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA6D,mDAAArc,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAntQ4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA2sQ/E,CAAC;IA3sQ4EnE,EAAE,CAAAoE,UAAA,IAAAwb,2DAAA,eAouQ3F,CAAC;IApuQwF5f,EAAE,CAAAqE,YAAA,CAquQ7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GAruQ0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6sQnE,CAAC;IA7sQgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OA6sQnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAgH,4DAAAtc,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GA7sQgExX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAuuQH,CAAC,UAAD,CAAC;IAvuQAnE,EAAE,CAAAyF,UAAA,oBAAA2a,qFAAAza,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAAgG,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAsvQpF0G,OAAA,CAAAqE,OAAA,CAAAlL,MAAA,EAAA0a,SAAqB,EAAC;IAAA,EAAC,sBAAAC,uFAAA3a,MAAA;MAAA,MAAA8O,WAAA,GAtvQ2DzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAAoR,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuvQlF8R,OAAA,CAAAT,UAAA,CAAAxR,MAAA,EAAA0a,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAAE,yFAAA5a,MAAA;MAAA,MAAA8O,WAAA,GAtvQ2DzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwvQhFyE,OAAA,CAAA8M,YAAA,CAAA1R,MAAA,EAAA0a,SAA0B,EAAC;IAAA,CAFT,CAAC;IAtvQ2DrgB,EAAE,CAAAqE,YAAA,CA0vQ/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAwc,SAAA,GAAAvc,GAAA,CAAA0C,SAAA;IAAA,MAAAmO,OAAA,GA1vQ4F3U,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA+L,OAAA,CAAA8J,cAAA,CAAA4B,SAAA,CAuuQJ,CAAC;IAvuQCrgB,EAAE,CAAAwE,SAAA,EA0uQ/D,CAAC;IA1uQ4DxE,EAAE,CAAAyE,UAAA,SAAAkQ,OAAA,CAAAqL,YAAA,CAAAC,UA0uQ/D,CAAC,WAAAtL,OAAA,CAAApJ,MAAD,CAAC,WAAAoJ,OAAA,CAAAnF,MAAD,CAAC,kBAAAmF,OAAA,CAAA1M,aAAD,CAAC,WAAA0M,OAAA,CAAAtN,MAAD,CAAC,WAAAgZ,SAAA,CAAA1B,MAAD,CAAC,SAAAhK,OAAA,CAAAlJ,IAAD,CAAC,aAAAkJ,OAAA,CAAAkC,QAAD,CAAC,oBAAAlC,OAAA,CAAA9C,eAAD,CAAC,oBAAA8C,OAAA,CAAAzC,eAAD,CAAC,eAAAmO,SAAA,CAAAvR,IAAD,CAAC,eAAA6F,OAAA,CAAAG,UAAD,CAAC,kBAAAH,OAAA,CAAA0H,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAmE,mDAAA3c,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1uQ4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAsuQhF,CAAC;IAtuQ6EnE,EAAE,CAAAoE,UAAA,IAAA+b,2DAAA,eA2vQ3F,CAAC;IA3vQwFngB,EAAE,CAAAqE,YAAA,CA4vQ7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GA5vQ0F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAuuQ9D,CAAC;IAvuQ2DxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAuuQ9D,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAsH,gDAAA5c,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GAvuQ2Dpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAoqRpG,CAAC;IApqRiGnE,EAAE,CAAAyF,UAAA,+BAAAib,oFAAA/a,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAmqR7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAnqRiD3F,EAAE,CAAAqE,YAAA,CAoqR5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GApqRyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAwpRlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA8U,gDAAA9c,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GAxpR+E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAmrRpG,CAAC;IAnrRiGnE,EAAE,CAAAyF,UAAA,+BAAAmb,oFAAAjb,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAkrR7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAlrRkD3F,EAAE,CAAAqE,YAAA,CAmrR5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAnrRyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAwqRlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,gBAAAlS,MAAA,CAAAgZ,iBAAA,CAAAC,QAAD,CAAC,cAAAjZ,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAgV,yDAAAhd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAka,IAAA,GAxqR+E/d,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAyrRlG,CAAC,UAAD,CAAC;IAzrR+FnE,EAAE,CAAAyF,UAAA,oBAAAqb,kFAAAnb,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA0X,OAAA,GAAFle,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2sRpFoY,OAAA,CAAArN,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAA8C,oFAAApb,MAAA;MAAA,MAAA8O,WAAA,GA3sR2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4sRlFsY,OAAA,CAAAjH,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAA+C,sFAAArb,MAAA;MAAA,MAAA8O,WAAA,GA3sR2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAmO,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6sRhF6O,OAAA,CAAA0C,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC,mCAAAgD,iGAAAtb,MAAA;MAAA,MAAA8O,WAAA,GA3sR2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAQ,SAAA,GAAA9J,WAAA,CAAA9L,KAAA;MAAA,MAAAkM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8sRrE+O,OAAA,CAAA2J,0BAAA,CAAA7Y,MAAA,EAAA4Y,SAAwC,EAAC;IAAA,CAHlC,CAAC;IA3sR2Dve,EAAE,CAAAqE,YAAA,CA+sR/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GA/sR4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAurRrE,CAAC;IAvrRkEzE,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CAwrRzD,CAAC;IAxrRsDje,EAAE,CAAAwE,SAAA,EA4rRlE,CAAC;IA5rR+DxE,EAAE,CAAAyE,UAAA,SAAA4E,MAAA,CAAA2W,YAAA,CAAAlG,OA4rRlE,CAAC,WAAAzQ,MAAA,CAAAkC,MAAD,CAAC,WAAAlC,MAAA,CAAAmG,MAAD,CAAC,WAAAnG,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,kBAAAtV,MAAA,CAAApB,aAAD,CAAC,SAAAoB,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,eAAA+L,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAuV,aAAD,CAAC,wBAAAvV,MAAA,CAAAwT,mBAAD,CAAC,kBAAAxT,MAAA,CAAAgT,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA6E,gDAAArd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5rR+D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAorR/E,CAAC;IAprR4EnE,EAAE,CAAAoE,UAAA,IAAAyc,wDAAA,eAgtR3F,CAAC;IAhtRwF7gB,EAAE,CAAAqE,YAAA,CAitR7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GAjtR0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAsrRnE,CAAC;IAtrRgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OAsrRnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAgI,yDAAAtd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkb,IAAA,GAtrRgE/e,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAstRlG,CAAC,UAAD,CAAC;IAttR+FnE,EAAE,CAAAyF,UAAA,oBAAA2b,kFAAAzb,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwuRpFyE,OAAA,CAAAsG,OAAA,CAAAlL,MAAA,EAAAsZ,SAAqB,EAAC;IAAA,EAAC,sBAAAoC,oFAAA1b,MAAA;MAAA,MAAA8O,WAAA,GAxuR2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAAkS,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyuRlF4S,OAAA,CAAAvB,UAAA,CAAAxR,MAAA,EAAAsZ,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAAqC,sFAAA3b,MAAA;MAAA,MAAA8O,WAAA,GAxuR2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA4Y,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA0uRhFsZ,OAAA,CAAA/H,YAAA,CAAA1R,MAAA,EAAAsZ,SAA0B,EAAC;IAAA,CAFT,CAAC,mCAAAsC,iGAAA5b,MAAA;MAAA,MAAA8O,WAAA,GAxuR2DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAO,SAAA,GAAA7K,WAAA,CAAA9L,KAAA;MAAA,MAAAwF,OAAA,GAAFnO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2uRrEqI,OAAA,CAAAqQ,0BAAA,CAAA7Y,MAAA,EAAA2Z,SAAwC,EAAC;IAAA,CAHlC,CAAC;IAxuR2Dtf,EAAE,CAAAqE,YAAA,CA4uR/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAob,SAAA,GAAAnb,GAAA,CAAA0C,SAAA;IAAA,MAAAgG,OAAA,GA5uR4FxM,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA4D,OAAA,CAAAiS,cAAA,CAAAQ,SAAA,CAqtRzD,CAAC;IArtRsDjf,EAAE,CAAAwE,SAAA,EAytRlE,CAAC;IAztR+DxE,EAAE,CAAAyE,UAAA,SAAA+H,OAAA,CAAAwT,YAAA,CAAAlG,OAytRlE,CAAC,WAAAtN,OAAA,CAAAjB,MAAD,CAAC,WAAAiB,OAAA,CAAAgD,MAAD,CAAC,WAAAhD,OAAA,CAAAnF,MAAD,CAAC,WAAA4X,SAAA,CAAAN,MAAD,CAAC,kBAAAnS,OAAA,CAAAvE,aAAD,CAAC,SAAAuE,OAAA,CAAAf,IAAD,CAAC,aAAAe,OAAA,CAAAqK,QAAD,CAAC,oBAAArK,OAAA,CAAAqF,eAAD,CAAC,oBAAArF,OAAA,CAAA0F,eAAD,CAAC,eAAA+M,SAAA,CAAAnQ,IAAD,CAAC,eAAAtC,OAAA,CAAAsI,UAAD,CAAC,kBAAAtI,OAAA,CAAAoS,aAAD,CAAC,wBAAApS,OAAA,CAAAqQ,mBAAD,CAAC,kBAAArQ,OAAA,CAAA6P,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAmF,gDAAA3d,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAztR+D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAktRhF,CAAC;IAltR6EnE,EAAE,CAAAoE,UAAA,IAAA+c,wDAAA,eA6uR3F,CAAC;IA7uRwFnhB,EAAE,CAAAqE,YAAA,CA8uR7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GA9uR0F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAotRnE,CAAC;IAptRgExE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAotRnE,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAsI,IAAA;AAAA,SAAAC,mDAAA7d,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GAptRgEpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAipStG,CAAC;IAjpSmGnE,EAAE,CAAAyF,UAAA,oBAAAkc,4EAAAhc,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAlP,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqoS1FI,MAAA,CAAA2K,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAic,8EAAAjc,MAAA;MAroSwE3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAa,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAsoSxFmQ,MAAA,CAAA9P,QAAA,CAAAH,IAAA,CAAAL,MAAoB,EAAC;IAAA,CADR,CAAC,wBAAAkc,gFAAAlc,MAAA;MAroSwE3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAA/L,MAAA,GAAFrJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuoStFuD,MAAA,CAAA/C,UAAA,CAAAN,IAAA,CAAAL,MAAsB,EAAC;IAAA,CAFZ,CAAC;IAroSwE3F,EAAE,CAAAqE,YAAA,CAipS9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAie,MAAA,GAAAhe,GAAA,CAAA0C,SAAA;IAAA,MAAAX,MAAA,GAjpS2F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAunSzE,CAAC,gBAAAoB,MAAA,CAAAiP,UAAD,CAAC,UAAAgN,MAAA,CAAAnW,KAAD,CAAC,WAAAmW,MAAA,CAAApW,MAAD,CAAC,MAAAoW,MAAA,CAAApP,CAAD,CAAC,MAAAoP,MAAA,CAAAnP,CAAD,CAAC,SAAAmP,MAAA,CAAAnb,KAAD,CAAC,UAAAmb,MAAA,CAAAxQ,aAAD,CAAC,SAAAwQ,MAAA,CAAAhR,IAAD,CAAC,gBAAAjL,MAAA,CAAAsL,cAAA,CAAAC,QAAD,CAAC,eAAA0Q,MAAA,CAAA9F,UAAD,CAAC,aAAAnW,MAAA,CAAAgR,QAAD,CAAC,cAAAiL,MAAA,CAAA7F,SAAD,CAAC,aAAApW,MAAA,CAAAe,QAAA,CAAAkb,MAAA,CAAAhR,IAAA,CAAD,CAAC,oBAAAjL,MAAA,CAAAgM,eAAD,CAAC,qBAAAhM,MAAA,CAAAqW,gBAAD,CAAC,gBAAArW,MAAA,CAAAsW,WAAD,CAAC,iBAAAtW,MAAA,CAAAqM,eAAA,GAAAC,SAAA,GAAA2P,MAAA,CAAA1F,WAAD,CAAC,oBAAAvW,MAAA,CAAAqM,eAAD,CAAC,mBAAA4P,MAAA,CAAAhR,IAAD,CAAC,kBAAAjL,MAAA,CAAAwW,aAAD,CAAC,eAAAxW,MAAA,CAAAiP,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAiN,0CAAAle,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvnSsE7D,EAAE,CAAA8G,cAAA,CAmnSnF,CAAC;IAnnSgF9G,EAAE,CAAAmE,cAAA,OAmnSnF,CAAC;IAnnSgFnE,EAAE,CAAAoE,UAAA,IAAAsd,kDAAA,eAipS9F,CAAC;IAjpS2F1hB,EAAE,CAAAqE,YAAA,CAkpSjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAlpS8FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAsnS5E,CAAC;IAtnSyExE,EAAE,CAAAyE,UAAA,YAAAW,MAAA,CAAA4c,IAsnS5E,CAAC,iBAAA5c,MAAA,CAAA+T,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA8I,mDAAApe,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAka,IAAA,GAtnSyE/d,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA+qStG,CAAC;IA/qSmGnE,EAAE,CAAAyF,UAAA,oBAAAyc,4EAAAvc,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAG,OAAA,GAAFle,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAmqS1FoY,OAAA,CAAArN,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAwc,8EAAAxc,MAAA;MAnqSwE3F,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAK,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAoqSxFsY,OAAA,CAAAjY,QAAA,CAAAH,IAAA,CAAAL,MAAoB,EAAC;IAAA,CADR,CAAC,wBAAAyc,gFAAAzc,MAAA;MAnqSwE3F,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAApJ,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqqStF6O,OAAA,CAAArO,UAAA,CAAAN,IAAA,CAAAL,MAAsB,EAAC;IAAA,CAFZ,CAAC;IAnqSwE3F,EAAE,CAAAqE,YAAA,CA+qS9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAwe,OAAA,GAAAve,GAAA,CAAA0C,SAAA;IAAA,MAAA8b,MAAA,GA/qS2FtiB,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAA4d,OAAA,CAAA1W,KAupSlF,CAAC,WAAA0W,OAAA,CAAA3W,MAAD,CAAC,MAAA2W,OAAA,CAAA3P,CAAD,CAAC,MAAA2P,OAAA,CAAA1P,CAAD,CAAC,SAAA0P,OAAA,CAAA1b,KAAD,CAAC,UAAA0b,OAAA,CAAA/Q,aAAD,CAAC,SAAA+Q,OAAA,CAAAvR,IAAD,CAAC,gBAAAwR,MAAA,CAAAnR,cAAA,CAAAC,QAAD,CAAC,eAAAiR,OAAA,CAAArG,UAAD,CAAC,aAAAsG,MAAA,CAAAzL,QAAD,CAAC,cAAAwL,OAAA,CAAApG,SAAD,CAAC,aAAAqG,MAAA,CAAA1b,QAAA,CAAAyb,OAAA,CAAAvR,IAAA,CAAD,CAAC,oBAAAwR,MAAA,CAAAzQ,eAAD,CAAC,qBAAAyQ,MAAA,CAAApG,gBAAD,CAAC,gBAAAoG,MAAA,CAAAnG,WAAD,CAAC,iBAAAmG,MAAA,CAAApQ,eAAA,GAAAC,SAAA,GAAAkQ,OAAA,CAAAjG,WAAD,CAAC,oBAAAkG,MAAA,CAAApQ,eAAD,CAAC,mBAAAmQ,OAAA,CAAAvR,IAAD,CAAC,kBAAAwR,MAAA,CAAAjG,aAAD,CAAC,eAAAiG,MAAA,CAAAxN,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAyN,0CAAA1e,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvpS+E7D,EAAE,CAAA8G,cAAA,CAmpSpF,CAAC;IAnpSiF9G,EAAE,CAAAmE,cAAA,OAmpSpF,CAAC;IAnpSiFnE,EAAE,CAAAoE,UAAA,IAAA6d,kDAAA,eA+qS9F,CAAC;IA/qS2FjiB,EAAE,CAAAqE,YAAA,CAgrSjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAhrS8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAspS5E,CAAC;IAtpSyExE,EAAE,CAAAyE,UAAA,YAAAH,MAAA,CAAA0d,IAspS5E,CAAC,iBAAA1d,MAAA,CAAA6U,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAqJ,mDAAA3e,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4e,IAAA,GAtpSyEziB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA6rSrG,CAAC;IA7rSkGnE,EAAE,CAAAyF,UAAA,+BAAAid,uFAAA/c,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA6c,IAAA;MAAA,MAAAE,KAAA,GAAAlO,WAAA,CAAA9L,KAAA;MAAA,MAAAiP,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4rS/E8R,OAAA,CAAAgL,sBAAA,CAAA5c,IAAA;QAAA0W,IAAA,EAAA/W,MAAA;QAAAgD,KAAA,EAAAga;MAAA,CAAsD,EAAC;IAAA,EAAC;IA5rSqB3iB,EAAE,CAAAqE,YAAA,CA6rSrG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgf,KAAA,GAAA/e,GAAA,CAAA0C,SAAA;IAAA,MAAAqO,OAAA,GA7rSkG7U,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAoe,KAAA,CAAAnQ,CAqrSzF,CAAC,SAAAmQ,KAAA,CAAAlQ,CAAD,CAAC,aAAAkQ,KAAA,CAAAlX,KAAD,CAAC,cAAAkX,KAAA,CAAAnX,MAAD,CAAC,UAAAmX,KAAA,CAAAjG,KAAD,CAAC,oBAAA/H,OAAA,CAAAgI,mBAAD,CAAC,gBAAAhI,OAAA,CAAA1D,cAAA,CAAAC,QAAD,CAAC;EAAA;AAAA;AAAA,SAAA0R,0CAAAjf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArrSsF7D,EAAE,CAAA8G,cAAA,CAirS5E,CAAC;IAjrSyE9G,EAAE,CAAAmE,cAAA,OAirS5E,CAAC;IAjrSyEnE,EAAE,CAAAoE,UAAA,IAAAoe,kDAAA,cA6rSrG,CAAC;IA7rSkGxiB,EAAE,CAAAqE,YAAA,CA8rSjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GA9rS8F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAorSjE,CAAC;IAprS8DxE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgY,iBAorSjE,CAAC,iBAAAhY,MAAA,CAAAiY,gBAAD,CAAC;EAAA;AAAA;AAAA,SAAA+F,uCAAAlf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAprS8DzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAyhTpG,CAAC;IAzhTiGnE,EAAE,CAAAyF,UAAA,+BAAAud,2EAAArd,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwhT7Ef,MAAA,CAAAuQ,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAxhTiD3F,EAAE,CAAAqE,YAAA,CAyhT5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAzhTyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MA4gTlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,gBAAAzQ,MAAA,CAAA6d,kBAAA,CAAA1F,QAAD,CAAC,cAAAnY,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAqX,uCAAArf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA5gT+Epd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAwiTpG,CAAC;IAxiTiGnE,EAAE,CAAAyF,UAAA,+BAAA0d,2EAAAxd,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuiT7E+B,MAAA,CAAAqO,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAviTkD3F,EAAE,CAAAqE,YAAA,CAwiT5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAxiTyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MA6hTlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAuX,yCAAAvf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA7hT+Epd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA28TpG,CAAC;IA38TiGnE,EAAE,CAAAyF,UAAA,+BAAA4d,6EAAA1d,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA08T7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IA18TiD3F,EAAE,CAAAqE,YAAA,CA28T5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA38TyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAyY,UA+7T9E,CAAC,SAAAzY,MAAA,CAAAqG,IAAD,CAAC,cAAArG,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,gBAAAzQ,MAAA,CAAA6d,kBAAA,CAAA1F,QAAD,CAAC,cAAAnY,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAyX,yCAAAzf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GA/7T2E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA09TpG,CAAC;IA19TiGnE,EAAE,CAAAyF,UAAA,+BAAA8d,6EAAA5d,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAy9T7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAz9TkD3F,EAAE,CAAAqE,YAAA,CA09T5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA19TyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAoZ,UA+8T9E,CAAC,SAAApZ,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2X,kDAAA3f,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAka,IAAA,GA/8T2E/d,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAo/TjG,CAAC;IAp/T8FnE,EAAE,CAAAyF,UAAA,oBAAAge,2EAAA9d,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA0X,OAAA,GAAFle,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg/TtFoY,OAAA,CAAArN,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAAyF,6EAAA/d,MAAA;MAAA,MAAA8O,WAAA,GAh/T6DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi/TpFsY,OAAA,CAAAjH,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAA0F,+EAAAhe,MAAA;MAAA,MAAA8O,WAAA,GAh/T6DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAmO,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk/TlF6O,OAAA,CAAA0C,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC,oCAAA2F,2FAAAje,MAAA;MAAA,MAAA8O,WAAA,GAh/T6DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAQ,SAAA,GAAA9J,WAAA,CAAA9L,KAAA;MAAA,MAAAkM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm/TtE+O,OAAA,CAAAgP,2BAAA,CAAAle,MAAA,EAAA4Y,SAAyC,EAAC;IAAA,CAHpC,CAAC;IAh/T6Dve,EAAE,CAAAqE,YAAA,CAo/TjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GAp/T8FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA+9TrE,CAAC,kBAAA4E,MAAA,CAAApB,aAAD,CAAC,WAAAoB,MAAA,CAAAqV,UAAD,CAAC,WAAArV,MAAA,CAAAqU,UAAD,CAAC,WAAArU,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,SAAAtV,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,kBAAA7I,MAAA,CAAAuV,aAAD,CAAC,wBAAAvV,MAAA,CAAAwT,mBAAD,CAAC,eAAAoB,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAA2S,UAAD,CAAC,eAAA3S,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAgT,aAAD,CAAC;IA/9TkErc,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CAg+TzD,CAAC;EAAA;AAAA;AAAA,SAAA6F,yCAAAjgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh+TsD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA29T/E,CAAC;IA39T4EnE,EAAE,CAAAoE,UAAA,IAAAof,iDAAA,eAo/TjG,CAAC;IAp/T8FxjB,EAAE,CAAAqE,YAAA,CAq/T7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GAr/T0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA89TnE,CAAC;IA99TgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OA89TnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA4K,kDAAAlgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkb,IAAA,GA99TgE/e,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA+gUnG,CAAC;IA/gUgGnE,EAAE,CAAAyF,UAAA,oBAAAue,2EAAAre,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2gUxFyE,OAAA,CAAAsG,OAAA,CAAAlL,MAAA,EAAAsZ,SAAqB,EAAC;IAAA,EAAC,sBAAAgF,6EAAAte,MAAA;MAAA,MAAA8O,WAAA,GA3gU+DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAAkS,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4gUtF4S,OAAA,CAAAvB,UAAA,CAAAxR,MAAA,EAAAsZ,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAAiF,+EAAAve,MAAA;MAAA,MAAA8O,WAAA,GA3gU+DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA4Y,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6gUpFsZ,OAAA,CAAA/H,YAAA,CAAA1R,MAAA,EAAAsZ,SAA0B,EAAC;IAAA,CAFT,CAAC,oCAAAkF,2FAAAxe,MAAA;MAAA,MAAA8O,WAAA,GA3gU+DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAO,SAAA,GAAA7K,WAAA,CAAA9L,KAAA;MAAA,MAAAwF,OAAA,GAAFnO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8gUxEqI,OAAA,CAAA0V,2BAAA,CAAAle,MAAA,EAAA2Z,SAAyC,EAAC;IAAA,CAHpC,CAAC;IA3gU+Dtf,EAAE,CAAAqE,YAAA,CA+gUnG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAob,SAAA,GAAAnb,GAAA,CAAA0C,SAAA;IAAA,MAAAgG,OAAA,GA/gUgGxM,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAA+H,OAAA,CAAAvE,aA4/TpE,CAAC,WAAAuE,OAAA,CAAAkS,UAAD,CAAC,WAAAlS,OAAA,CAAAkR,UAAD,CAAC,WAAAlR,OAAA,CAAAnF,MAAD,CAAC,WAAA4X,SAAA,CAAAN,MAAD,CAAC,SAAAnS,OAAA,CAAAf,IAAD,CAAC,aAAAe,OAAA,CAAAqK,QAAD,CAAC,oBAAArK,OAAA,CAAAqF,eAAD,CAAC,oBAAArF,OAAA,CAAA0F,eAAD,CAAC,kBAAA1F,OAAA,CAAAoS,aAAD,CAAC,wBAAApS,OAAA,CAAAqQ,mBAAD,CAAC,eAAAoC,SAAA,CAAAnQ,IAAD,CAAC,eAAAtC,OAAA,CAAAwP,UAAD,CAAC,eAAAxP,OAAA,CAAAsI,UAAD,CAAC,kBAAAtI,OAAA,CAAA6P,aAAD,CAAC;IA5/TiErc,EAAE,CAAA4I,WAAA,cAAA4D,OAAA,CAAAiS,cAAA,CAAAQ,SAAA,CA2/T3D,CAAC;EAAA;AAAA;AAAA,SAAAmF,yCAAAvgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3/TwD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAu/TlF,CAAC;IAv/T+EnE,EAAE,CAAAoE,UAAA,IAAA2f,iDAAA,eA+gUnG,CAAC;IA/gUgG/jB,EAAE,CAAAqE,YAAA,CAghU/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAhhU4F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA0/TrE,CAAC;IA1/TkExE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OA0/TrE,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAkL,iDAAAxgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA1/TkEpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAm6UpG,CAAC;IAn6UiGnE,EAAE,CAAAyF,UAAA,+BAAA6e,qFAAA3e,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk6U7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAl6UiD3F,EAAE,CAAAqE,YAAA,CAm6U5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAn6UyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAw5UlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,cAAArG,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA0Y,iDAAA1gB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GAx5U+E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAk7UpG,CAAC;IAl7UiGnE,EAAE,CAAAyF,UAAA,+BAAA+e,qFAAA7e,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi7U7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAj7UkD3F,EAAE,CAAAqE,YAAA,CAk7U5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAl7UyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAu6UlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA4Y,0DAAA5gB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GAv6U+E7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAw7UlG,CAAC,UAAD,CAAC;IAx7U+FnE,EAAE,CAAAyF,UAAA,oBAAAif,mFAAA/e,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAiD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAw8UpF2D,OAAA,CAAAoH,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAA0G,qFAAAhf,MAAA;MAAA,MAAA8O,WAAA,GAx8U2DzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAy8UlFqH,OAAA,CAAAgK,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAA2G,uFAAAjf,MAAA;MAAA,MAAA8O,WAAA,GAx8U2DzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAoR,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA08UhFsY,OAAA,CAAA/G,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC;IAx8U2Dje,EAAE,CAAAqE,YAAA,CA28U/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GA38U4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAs7UrE,CAAC;IAt7UkEzE,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CAu7UzD,CAAC;IAv7UsDje,EAAE,CAAAwE,SAAA,EA27U/D,CAAC;IA37U4DxE,EAAE,CAAAyE,UAAA,SAAA4E,MAAA,CAAA2W,YAAA,CAAAC,UA27U/D,CAAC,WAAA5W,MAAA,CAAAkC,MAAD,CAAC,WAAAlC,MAAA,CAAAmG,MAAD,CAAC,kBAAAnG,MAAA,CAAApB,aAAD,CAAC,WAAAoB,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,SAAAtV,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,eAAA+L,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAgT,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAwI,iDAAAhhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA37U4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAm7U/E,CAAC;IAn7U4EnE,EAAE,CAAAoE,UAAA,IAAAqgB,yDAAA,eA48U3F,CAAC;IA58UwFzkB,EAAE,CAAAqE,YAAA,CA68U7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GA78U0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAq7UnE,CAAC;IAr7UgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OAq7UnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA2L,0DAAAjhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GAr7UgExX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA+8UH,CAAC,UAAD,CAAC;IA/8UAnE,EAAE,CAAAyF,UAAA,oBAAAsf,mFAAApf,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAAgG,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+9UpF0G,OAAA,CAAAqE,OAAA,CAAAlL,MAAA,EAAA0a,SAAqB,EAAC;IAAA,EAAC,sBAAA2E,qFAAArf,MAAA;MAAA,MAAA8O,WAAA,GA/9U2DzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAAoR,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg+UlF8R,OAAA,CAAAT,UAAA,CAAAxR,MAAA,EAAA0a,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAA4E,uFAAAtf,MAAA;MAAA,MAAA8O,WAAA,GA/9U2DzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA6I,SAAA,GAAA5L,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi+UhFyE,OAAA,CAAA8M,YAAA,CAAA1R,MAAA,EAAA0a,SAA0B,EAAC;IAAA,CAFT,CAAC;IA/9U2DrgB,EAAE,CAAAqE,YAAA,CAk+U/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAwc,SAAA,GAAAvc,GAAA,CAAA0C,SAAA;IAAA,MAAAmO,OAAA,GAl+U4F3U,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA+L,OAAA,CAAA8J,cAAA,CAAA4B,SAAA,CA+8UJ,CAAC;IA/8UCrgB,EAAE,CAAAwE,SAAA,EAk9U/D,CAAC;IAl9U4DxE,EAAE,CAAAyE,UAAA,SAAAkQ,OAAA,CAAAqL,YAAA,CAAAC,UAk9U/D,CAAC,WAAAtL,OAAA,CAAApJ,MAAD,CAAC,WAAAoJ,OAAA,CAAAnF,MAAD,CAAC,kBAAAmF,OAAA,CAAA1M,aAAD,CAAC,WAAA0M,OAAA,CAAAtN,MAAD,CAAC,WAAAgZ,SAAA,CAAA1B,MAAD,CAAC,SAAAhK,OAAA,CAAAlJ,IAAD,CAAC,aAAAkJ,OAAA,CAAAkC,QAAD,CAAC,oBAAAlC,OAAA,CAAA9C,eAAD,CAAC,oBAAA8C,OAAA,CAAAzC,eAAD,CAAC,eAAAmO,SAAA,CAAAvR,IAAD,CAAC,eAAA6F,OAAA,CAAAG,UAAD,CAAC,kBAAAH,OAAA,CAAA0H,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA6I,iDAAArhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAl9U4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA88UhF,CAAC;IA98U6EnE,EAAE,CAAAoE,UAAA,IAAA0gB,yDAAA,eAm+U3F,CAAC;IAn+UwF9kB,EAAE,CAAAqE,YAAA,CAo+U7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAp+U0F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA+8U9D,CAAC;IA/8U2DxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OA+8U9D,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAgM,8CAAAthB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA/8U2Dpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA+4VpG,CAAC;IA/4ViGnE,EAAE,CAAAyF,UAAA,+BAAA2f,kFAAAzf,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA84V7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IA94ViD3F,EAAE,CAAAqE,YAAA,CA+4V5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA/4VyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAm4VlF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,cAAArG,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,gBAAAzQ,MAAA,CAAA6d,kBAAA,CAAA1F,QAAD,CAAC,cAAAnY,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAwZ,8CAAAxhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GAn4V+E7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA85VpG,CAAC;IA95ViGnE,EAAE,CAAAyF,UAAA,+BAAA6f,kFAAA3f,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA65V7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IA75VkD3F,EAAE,CAAAqE,YAAA,CA85V5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA95VyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAm5VlF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA0Z,uDAAA1hB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAka,IAAA,GAn5V+E/d,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAo6VlG,CAAC,UAAD,CAAC;IAp6V+FnE,EAAE,CAAAyF,UAAA,oBAAA+f,gFAAA7f,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA0X,OAAA,GAAFle,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAs7VpFoY,OAAA,CAAArN,OAAA,CAAAlL,MAAA,EAAAsY,QAAqB,EAAC;IAAA,EAAC,sBAAAwH,kFAAA9f,MAAA;MAAA,MAAA8O,WAAA,GAt7V2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAA4X,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAu7VlFsY,OAAA,CAAAjH,UAAA,CAAAxR,MAAA,EAAAsY,QAAwB,EAAC;IAAA,CADL,CAAC,wBAAAyH,oFAAA/f,MAAA;MAAA,MAAA8O,WAAA,GAt7V2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAE,QAAA,GAAAxJ,WAAA,CAAAjO,SAAA;MAAA,MAAAmO,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAw7VhF6O,OAAA,CAAA0C,YAAA,CAAA1R,MAAA,EAAAsY,QAA0B,EAAC;IAAA,CAFT,CAAC,oCAAA0H,gGAAAhgB,MAAA;MAAA,MAAA8O,WAAA,GAt7V2DzU,EAAE,CAAA4F,aAAA,CAAAmY,IAAA;MAAA,MAAAQ,SAAA,GAAA9J,WAAA,CAAA9L,KAAA;MAAA,MAAAkM,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAy7VpE+O,OAAA,CAAAgP,2BAAA,CAAAle,MAAA,EAAA4Y,SAAyC,EAAC;IAAA,CAHpC,CAAC;IAt7V2Dve,EAAE,CAAAqE,YAAA,CA07V/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoa,QAAA,GAAAna,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GA17V4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAk6VrE,CAAC;IAl6VkEzE,EAAE,CAAA4I,WAAA,cAAAS,MAAA,CAAAoV,cAAA,CAAAR,QAAA,CAm6VzD,CAAC;IAn6VsDje,EAAE,CAAAwE,SAAA,EAu6VlE,CAAC;IAv6V+DxE,EAAE,CAAAyE,UAAA,SAAA4E,MAAA,CAAA2W,YAAA,CAAAlG,OAu6VlE,CAAC,WAAAzQ,MAAA,CAAAkC,MAAD,CAAC,WAAAlC,MAAA,CAAAmG,MAAD,CAAC,kBAAAnG,MAAA,CAAApB,aAAD,CAAC,WAAAoB,MAAA,CAAAhC,MAAD,CAAC,WAAA4W,QAAA,CAAAU,MAAD,CAAC,SAAAtV,MAAA,CAAAoC,IAAD,CAAC,aAAApC,MAAA,CAAAwN,QAAD,CAAC,oBAAAxN,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC,kBAAA7I,MAAA,CAAAuV,aAAD,CAAC,wBAAAvV,MAAA,CAAAwT,mBAAD,CAAC,eAAAoB,QAAA,CAAAnP,IAAD,CAAC,eAAAzF,MAAA,CAAAyL,UAAD,CAAC,kBAAAzL,MAAA,CAAAgT,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAuJ,8CAAA/hB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv6V+D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA+5V/E,CAAC;IA/5V4EnE,EAAE,CAAAoE,UAAA,IAAAmhB,sDAAA,eA27V3F,CAAC;IA37VwFvlB,EAAE,CAAAqE,YAAA,CA47V7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GA57V0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAi6VnE,CAAC;IAj6VgExE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OAi6VnE,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA0M,uDAAAhiB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkb,IAAA,GAj6VgE/e,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAk8VpG,CAAC,UAAD,CAAC;IAl8ViGnE,EAAE,CAAAyF,UAAA,oBAAAqgB,gFAAAngB,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA+D,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAo9VtFyE,OAAA,CAAAsG,OAAA,CAAAlL,MAAA,EAAAsZ,SAAqB,EAAC;IAAA,EAAC,sBAAA8G,kFAAApgB,MAAA;MAAA,MAAA8O,WAAA,GAp9V6DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAAkS,OAAA,GAAF1Y,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAq9VpF4S,OAAA,CAAAvB,UAAA,CAAAxR,MAAA,EAAAsZ,SAAwB,EAAC;IAAA,CADL,CAAC,wBAAA+G,oFAAArgB,MAAA;MAAA,MAAA8O,WAAA,GAp9V6DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAE,SAAA,GAAAxK,WAAA,CAAAjO,SAAA;MAAA,MAAA4Y,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAs9VlFsZ,OAAA,CAAA/H,YAAA,CAAA1R,MAAA,EAAAsZ,SAA0B,EAAC;IAAA,CAFT,CAAC,oCAAAgH,gGAAAtgB,MAAA;MAAA,MAAA8O,WAAA,GAp9V6DzU,EAAE,CAAA4F,aAAA,CAAAmZ,IAAA;MAAA,MAAAO,SAAA,GAAA7K,WAAA,CAAA9L,KAAA;MAAA,MAAAwF,OAAA,GAAFnO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAu9VtEqI,OAAA,CAAA0V,2BAAA,CAAAle,MAAA,EAAA2Z,SAAyC,EAAC;IAAA,CAHpC,CAAC;IAp9V6Dtf,EAAE,CAAAqE,YAAA,CAw9VjG,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAob,SAAA,GAAAnb,GAAA,CAAA0C,SAAA;IAAA,MAAAgG,OAAA,GAx9V8FxM,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA4D,OAAA,CAAAiS,cAAA,CAAAQ,SAAA,CAi8V3D,CAAC;IAj8VwDjf,EAAE,CAAAwE,SAAA,EAq8VpE,CAAC;IAr8ViExE,EAAE,CAAAyE,UAAA,SAAA+H,OAAA,CAAAwT,YAAA,CAAAlG,OAq8VpE,CAAC,WAAAtN,OAAA,CAAAjB,MAAD,CAAC,WAAAiB,OAAA,CAAAgD,MAAD,CAAC,kBAAAhD,OAAA,CAAAvE,aAAD,CAAC,WAAAuE,OAAA,CAAAnF,MAAD,CAAC,WAAA4X,SAAA,CAAAN,MAAD,CAAC,SAAAnS,OAAA,CAAAf,IAAD,CAAC,aAAAe,OAAA,CAAAqK,QAAD,CAAC,oBAAArK,OAAA,CAAAqF,eAAD,CAAC,oBAAArF,OAAA,CAAA0F,eAAD,CAAC,kBAAA1F,OAAA,CAAAoS,aAAD,CAAC,wBAAApS,OAAA,CAAAqQ,mBAAD,CAAC,eAAAoC,SAAA,CAAAnQ,IAAD,CAAC,eAAAtC,OAAA,CAAAsI,UAAD,CAAC,kBAAAtI,OAAA,CAAA6P,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA6J,8CAAAriB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAr8ViE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA87VlF,CAAC;IA97V+EnE,EAAE,CAAAoE,UAAA,IAAAyhB,sDAAA,eAy9V7F,CAAC;IAz9V0F7lB,EAAE,CAAAqE,YAAA,CA09V/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GA19V4F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAg8VrE,CAAC;IAh8VkExE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAg8VrE,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAgN,IAAA;AAAA,SAAAC,+BAAAviB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh8VkE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAu7WrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAv7WkGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAAihB,cAAA,CAAAjV,QAo7W9D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAgV,kCAAAziB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAp7W2D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,aAy9WrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA0iB,OAAA,GAAAziB,GAAA,CAAA0C,SAAA;IAAA,MAAAggB,IAAA,GAAA1iB,GAAA,CAAA6E,KAAA;IAAA,MAAArE,MAAA,GAz9WkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA0R,WAAA,WAAApN,MAAA,CAAAmiB,OAg9W7E,CAAC;IAh9W0EzmB,EAAE,CAAA4I,WAAA,OAAA2d,OAAA,CAAAG,EAAA,CAAAhU,CAi9WhF,CAAC,OAAA6T,OAAA,CAAAG,EAAA,CAAA/T,CAAD,CAAC,OAAA4T,OAAA,CAAAI,EAAA,CAAAjU,CAAD,CAAC,OAAA6T,OAAA,CAAAI,EAAA,CAAAhU,CAAD,CAAC,WAAArO,MAAA,CAAAsiB,WAAD,CAAC,iBAAAJ,IAAA,SAAAliB,MAAA,CAAAuiB,eAAA,GAAAviB,MAAA,CAAAwiB,kBAAD,CAAC,SAAAN,IAAA,GAAArU,SAAA,GAAA7N,MAAA,CAAAyiB,QAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,oCAAApjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAj9W6EzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA4+X7C,CAAC,UAAD,CAAC;IA5+X0CnE,EAAE,CAAAyF,UAAA,sBAAAyhB,+DAAAvhB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2/XpFf,MAAA,CAAAoS,UAAA,CAAAxR,MAAiB,EAAC;IAAA,EAAC,wBAAAwhB,iEAAAxhB,MAAA;MA3/X+D3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAI,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4/XlF+B,MAAA,CAAAwP,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CADJ,CAAC,oBAAAyhB,6DAAAzhB,MAAA;MA3/X+D3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAvB,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6/XtFI,MAAA,CAAA2K,OAAA,CAAAlL,MAAc,EAAC;IAAA,CAFK,CAAC;IA3/X+D3F,EAAE,CAAAqE,YAAA,CA8/XjG,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAwjB,SAAA,GAAAvjB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GA9/X8FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA++XhF,CAAC;IA/+X6ExE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MA++XhF,CAAC,WAAAnG,MAAA,CAAAoK,MAAD,CAAC,WAAApK,MAAA,CAAAiC,MAAD,CAAC,eAAAjC,MAAA,CAAA4W,UAAD,CAAC,gBAAA5W,MAAA,CAAAwhB,WAAD,CAAC,gBAAAxhB,MAAA,CAAAkiB,WAAD,CAAC,oBAAAliB,MAAA,CAAAyM,eAAD,CAAC,oBAAAzM,MAAA,CAAA8M,eAAD,CAAC,WAAAmV,SAAD,CAAC,SAAAjiB,MAAA,CAAAqG,IAAD,CAAC,eAAArG,MAAA,CAAA0P,UAAD,CAAC,aAAA1P,MAAA,CAAAyR,QAAD,CAAC;EAAA;AAAA;AAAA,MAAA0Q,IAAA;AAAA,SAAAC,iDAAA3jB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GA/+X6EpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAmzYnG,CAAC;IAnzYgGnE,EAAE,CAAAyF,UAAA,oBAAAgiB,0EAAA;MAAFznB,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAsS,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAAqB,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyyYxF+B,MAAA,CAAAgJ,OAAA,CAAA6W,SAAA,CAAA5W,IAAmB,EAAC;IAAA,EAAC,sBAAA6W,4EAAA;MAzyYiE3nB,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAsS,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAAyP,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA0yYtFmQ,MAAA,CAAAjF,cAAA,CAAA0W,SAAqB,EAAC;IAAA,CADJ,CAAC,wBAAAE,8EAAA;MAzyYiE5nB,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAsS,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAA8b,MAAA,GAAFtiB,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2yYpFwc,MAAA,CAAApR,gBAAA,CAAAwW,SAAuB,EAAC;IAAA,CAFR,CAAC;IAzyYiE1nB,EAAE,CAAAqE,YAAA,CAmzYnG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6jB,SAAA,GAnzYgG1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAzB,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,YAAAqa,SAAA,CAAA3X,OAoyYnE,CAAC;IApyYgE/P,EAAE,CAAA0R,WAAA,WAAAgW,SAAA,CAAA9gB,QAqyYnE,CAAC;IAryYgE5G,EAAE,CAAAyE,UAAA,4BA8xYvE,CAAC,QAAD,CAAC,QAAD,CAAC,MAAAijB,SAAA,CAAApX,MAAD,CAAC,SAAAoX,SAAA,CAAA/gB,KAAD,CAAC,uBAAD,CAAC,SAAA+gB,SAAA,CAAA7Y,KAAD,CAAC,eAAA6Y,SAAA,CAAA9V,UAAD,CAAC,oBAAA7M,MAAA,CAAA8M,eAAD,CAAC,qBAAA9M,MAAA,CAAA+M,cAAA,CAAAC,GAAD,CAAC,gBAAAhN,MAAA,CAAAiN,UAAA,CAAAC,OAAD,CAAC,iBAAAlN,MAAA,CAAAmN,eAAA,GAAAC,SAAA,GAAApN,MAAA,CAAAqN,cAAA,CAAAsV,SAAA,CAAD,CAAC,oBAAA3iB,MAAA,CAAAmN,eAAD,CAAC,mBAAAwV,SAAA,CAAA5W,IAAD,CAAC;EAAA;AAAA;AAAA,SAAA+W,iDAAAhkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAikB,IAAA,GA9xYoE9nB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA20YnG,CAAC;IA30YgGnE,EAAE,CAAAyF,UAAA,oBAAAsiB,0EAAA;MAAF/nB,EAAE,CAAA4F,aAAA,CAAAkiB,IAAA;MAAA,MAAAJ,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAA2G,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi0YxFqH,OAAA,CAAA0D,OAAA,CAAA6W,SAAA,CAAA5W,IAAmB,EAAC;IAAA,EAAC,sBAAAkX,4EAAA;MAj0YiEhoB,EAAE,CAAA4F,aAAA,CAAAkiB,IAAA;MAAA,MAAAJ,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAAqO,OAAA,GAAF7U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk0YtF+O,OAAA,CAAA7D,cAAA,CAAA0W,SAAqB,EAAC;IAAA,CADJ,CAAC,wBAAAO,8EAAA;MAj0YiEjoB,EAAE,CAAA4F,aAAA,CAAAkiB,IAAA;MAAA,MAAAJ,SAAA,GAAF1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;MAAA,MAAA0hB,OAAA,GAAFloB,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm0YpFoiB,OAAA,CAAAhX,gBAAA,CAAAwW,SAAuB,EAAC;IAAA,CAFR,CAAC;IAj0YiE1nB,EAAE,CAAAqE,YAAA,CA20YnG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6jB,SAAA,GA30YgG1nB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAX,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,YAAAqa,SAAA,CAAA3X,OA4zYnE,CAAC;IA5zYgE/P,EAAE,CAAA0R,WAAA,WAAAgW,SAAA,CAAA9gB,QA6zYnE,CAAC;IA7zYgE5G,EAAE,CAAAyE,UAAA,QAwzY3F,CAAC,QAAD,CAAC,MAAAijB,SAAA,CAAApX,MAAD,CAAC,SAAAoX,SAAA,CAAA/gB,KAAD,CAAC,uBAAD,CAAC,SAAA+gB,SAAA,CAAA7Y,KAAD,CAAC,eAAA6Y,SAAA,CAAA9V,UAAD,CAAC,oBAAA/L,MAAA,CAAAgM,eAAD,CAAC,qBAAAhM,MAAA,CAAAiM,cAAA,CAAAC,GAAD,CAAC,gBAAAlM,MAAA,CAAAmM,UAAA,CAAAC,OAAD,CAAC,iBAAApM,MAAA,CAAAqM,eAAA,GAAAC,SAAA,GAAAtM,MAAA,CAAAuM,cAAA,CAAAsV,SAAA,CAAD,CAAC,oBAAA7hB,MAAA,CAAAqM,eAAD,CAAC,mBAAAwV,SAAA,CAAA5W,IAAD,CAAC;EAAA;AAAA;AAAA,SAAAqX,wCAAAtkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxzYwF7D,EAAE,CAAA8G,cAAA,CAyxYjD,CAAC;IAzxY8C9G,EAAE,CAAAmE,cAAA,OAyxYjD,CAAC,OAAD,CAAC;IAzxY8CnE,EAAE,CAAAoE,UAAA,IAAAojB,gDAAA,eAmzYnG,CAAC;IAnzYgGxnB,EAAE,CAAAoE,UAAA,IAAAyjB,gDAAA,eA20YnG,CAAC;IA30YgG7nB,EAAE,CAAAqE,YAAA,CA40Y/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6jB,SAAA,GAAA5jB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GA50Y4FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA0xY7D,CAAC;IA1xY0DxE,EAAE,CAAA4I,WAAA,cAAA8e,SAAA,CAAAha,SA0xY7D,CAAC;IA1xY0D1N,EAAE,CAAAwE,SAAA,EA4xYtF,CAAC;IA5xYmFxE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAAmM,KA4xYtF,CAAC;IA5xYmFvR,EAAE,CAAAwE,SAAA,EAqzYvF,CAAC;IArzYoFxE,EAAE,CAAAyE,UAAA,SAAAW,MAAA,CAAAmM,KAqzYvF,CAAC;EAAA;AAAA;AAAA,SAAA6W,uCAAAvkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GArzYoFpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAgsZnG,CAAC;IAhsZgGnE,EAAE,CAAAyF,UAAA,+BAAA4iB,2EAAA1iB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+rZ7E+B,MAAA,CAAAyN,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IA/rZiD3F,EAAE,CAAAqE,YAAA,CAgsZnG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAhsZgGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAAW,MAAA,CAAAwF,aAorZpE,CAAC,SAAAxF,MAAA,CAAAqG,IAAD,CAAC,WAAArG,MAAA,CAAAmG,MAAD,CAAC,cAAAnG,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAyc,uCAAAzkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GAprZiE7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA+sZnG,CAAC;IA/sZgGnE,EAAE,CAAAyF,UAAA,+BAAA8iB,2EAAA5iB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8sZ7EO,MAAA,CAAA6P,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IA9sZkD3F,EAAE,CAAAqE,YAAA,CA+sZnG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA/sZgGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAAH,MAAA,CAAAsG,aAosZpE,CAAC,WAAAtG,MAAA,CAAAkL,MAAD,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2c,gDAAA3kB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GApsZiE7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA0tZjB,CAAC,UAAD,CAAC;IA1tZcnE,EAAE,CAAAyF,UAAA,oBAAAgjB,yEAAA9iB,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAA6J,SAAA,GAAAjC,WAAA,CAAAjO,SAAA;MAAA,MAAAiD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyuZpF2D,OAAA,CAAAoH,OAAA,CAAAlL,MAAA,EAAA+Q,SAAsB,EAAC;IAAA,EAAC,sBAAAgS,2EAAA/iB,MAAA;MAzuZ0D3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAM,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA0uZlFqH,OAAA,CAAAgK,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADG,CAAC,wBAAAgjB,6EAAAhjB,MAAA;MAzuZ0D3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAuR,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2uZhFsY,OAAA,CAAA/G,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFD,CAAC;IAzuZ0D3F,EAAE,CAAAqE,YAAA,CA4uZ/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA6S,SAAA,GAAA5S,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GA5uZ4FrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA0tZlB,CAAC;IA1tZezE,EAAE,CAAAwE,SAAA,EA6tZ9E,CAAC;IA7tZ2ExE,EAAE,CAAAyE,UAAA,WAAA4E,MAAA,CAAAkC,MA6tZ9E,CAAC,WAAAlC,MAAA,CAAAmG,MAAD,CAAC,WAAAnG,MAAA,CAAAuf,MAAD,CAAC,eAAAvf,MAAA,CAAAwf,UAAD,CAAC,eAAAxf,MAAA,CAAAyf,UAAD,CAAC,eAAAzf,MAAA,CAAAmM,UAAD,CAAC,eAAAnM,MAAA,CAAA+M,UAAD,CAAC,WAAA/M,MAAA,CAAAhC,MAAD,CAAC,SAAAqP,SAAD,CAAC,kBAAArN,MAAA,CAAApB,aAAD,CAAC,oBAAAoB,MAAA,CAAAwI,eAAD,CAAC,oBAAAxI,MAAA,CAAA6I,eAAD,CAAC;EAAA;AAAA;AAAA,SAAA6W,uCAAAllB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7tZ2E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAytZnD,CAAC;IAztZgDnE,EAAE,CAAAoE,UAAA,IAAAokB,+CAAA,eA6uZ3F,CAAC;IA7uZwFxoB,EAAE,CAAAqE,YAAA,CA8uZ7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GA9uZ0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA7D,MAAA,CAAAikB,QAytZpD,CAAC;IAztZiDhpB,EAAE,CAAAwE,SAAA,EA0tZhE,CAAC;IA1tZ6DxE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAA+L,IA0tZhE,CAAC,iBAAA/L,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA8P,gDAAAplB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GA1tZ6DxX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAgvZ9C,CAAC,UAAD,CAAC;IAhvZ2CnE,EAAE,CAAAyF,UAAA,oBAAAyjB,yEAAAvjB,MAAA;MAAA,MAAA8O,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAA2R,UAAA,GAAA1U,WAAA,CAAAjO,SAAA;MAAA,MAAAgG,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+vZpF0G,OAAA,CAAAqE,OAAA,CAAAlL,MAAA,EAAAwjB,UAAsB,EAAC;IAAA,EAAC,sBAAAC,2EAAAzjB,MAAA;MA/vZ0D3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAI,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAgwZlF8R,OAAA,CAAAT,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADG,CAAC,wBAAA0jB,6EAAA1jB,MAAA;MA/vZ0D3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAjN,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAiwZhFyE,OAAA,CAAA8M,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFD,CAAC;IA/vZ0D3F,EAAE,CAAAqE,YAAA,CAkwZ/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAslB,UAAA,GAAArlB,GAAA,CAAA0C,SAAA;IAAA,MAAAmO,OAAA,GAlwZ4F3U,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAmvZ9E,CAAC;IAnvZ2ExE,EAAE,CAAAyE,UAAA,WAAAkQ,OAAA,CAAApJ,MAmvZ9E,CAAC,WAAAoJ,OAAA,CAAAnF,MAAD,CAAC,WAAAmF,OAAA,CAAAiU,MAAD,CAAC,eAAAjU,OAAA,CAAAkU,UAAD,CAAC,eAAAlU,OAAA,CAAAmU,UAAD,CAAC,eAAAnU,OAAA,CAAAa,UAAD,CAAC,eAAAb,OAAA,CAAAyB,UAAD,CAAC,WAAAzB,OAAA,CAAAtN,MAAD,CAAC,SAAA8hB,UAAD,CAAC,kBAAAxU,OAAA,CAAA1M,aAAD,CAAC,oBAAA0M,OAAA,CAAA9C,eAAD,CAAC,oBAAA8C,OAAA,CAAAzC,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAoX,uCAAAzlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnvZ2E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA+uZpD,CAAC;IA/uZiDnE,EAAE,CAAAoE,UAAA,IAAA6kB,+CAAA,eAmwZ3F,CAAC;IAnwZwFjpB,EAAE,CAAAqE,YAAA,CAowZ7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GApwZ0F7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA/C,MAAA,CAAAmjB,QA+uZrD,CAAC;IA/uZkDhpB,EAAE,CAAAwE,SAAA,EAgvZhE,CAAC;IAhvZ6DxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAiL,IAgvZhE,CAAC,iBAAAjL,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAoQ,IAAA;AAAA,SAAAC,0CAAA3lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhvZ6D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA0hahF,CAAC;IA1ha6EnE,EAAE,CAAA8E,SAAA,UAgianG,CAAC;IAhiagG9E,EAAE,CAAAqE,YAAA,CAiiahG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAjia6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6ha5D,CAAC;IA7hayDxE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA+L,cAAA,CAAAC,QA6ha5D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,MAAAmY,IAAA;AAAA,MAAAC,IAAA,YAAAA,CAAA1lB,EAAA,EAAAsU,EAAA,EAAAqR,EAAA;EAAA;IAAAhL,MAAA,EAAA3a,EAAA;IAAA8K,IAAA,EAAAwJ,EAAA;IAAAzJ,KAAA,EAAA8a;EAAA;AAAA;AAAA,SAAAC,0CAAA/lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GA7hayDzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CAmraxG,CAAC;IAnraqG9G,EAAE,CAAAmE,cAAA,UAmraxG,CAAC;IAnraqGnE,EAAE,CAAAyF,UAAA,oBAAAokB,mEAAA;MAAA,MAAApV,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAqiB,IAAA,GAAArV,WAAA,CAAAjO,SAAA;MAAA,MAAAzB,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAuqa5Ff,MAAA,CAAA8L,OAAA,CAAAiZ,IAAA,CAAAC,IAAc,EAAC;IAAA,EAAC,sBAAAC,qEAAA;MAAA,MAAAvV,WAAA,GAvqa0EzU,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAqiB,IAAA,GAAArV,WAAA,CAAAjO,SAAA;MAAA,MAAAqB,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAwqa1F+B,MAAA,CAAA1B,QAAA,CAAAH,IAAA,CAAA8jB,IAAA,CAAAC,IAAoB,EAAC;IAAA,CADR,CAAC,wBAAAE,uEAAA;MAAA,MAAAxV,WAAA,GAvqa0EzU,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAqiB,IAAA,GAAArV,WAAA,CAAAjO,SAAA;MAAA,MAAAN,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAyqaxFI,MAAA,CAAAI,UAAA,CAAAN,IAAA,CAAA8jB,IAAA,CAAAC,IAAsB,EAAC;IAAA,CAFZ,CAAC;IAvqa0E/pB,EAAE,CAAAqE,YAAA,CAmrahG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAimB,IAAA,GAAAhmB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAnra6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,MAAAqlB,IAAA,CAAApX,CAiqa9F,CAAC,MAAAoX,IAAA,CAAAnX,CAAD,CAAC,UAAAmX,IAAA,CAAAne,KAAD,CAAC,WAAAme,IAAA,CAAApe,MAAD,CAAC,SAAAoe,IAAA,CAAAI,IAAD,CAAC,SAAAJ,IAAA,CAAAhZ,IAAD,CAAC,aAAA1L,MAAA,CAAAyR,QAAD,CAAC,eAAAzR,MAAA,CAAA0P,UAAD,CAAC,oBAAA1P,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA0M,cAAA,CAAAC,GAAD,CAAC,gBAAA3M,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,iBAAA7M,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAA/M,MAAA,CAAAgX,WAAA,CAAA0N,IAAA,CAAD,CAAC,oBAAA1kB,MAAA,CAAA8M,eAAD,CAAC,mBAjqa2FlS,EAAE,CAAAmqB,eAAA,KAAAT,IAAA,EAAAI,IAAA,CAAAnL,MAAA,EAAAmL,IAAA,CAAArjB,KAAA,EAAAqjB,IAAA,CAAAhZ,IAAA,CAiqa9F,CAAC;EAAA;AAAA;AAAA,SAAAsZ,mCAAAvmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,GAAA,GAjqa2FvF,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAg9apG,CAAC;IAh9aiGnE,EAAE,CAAAyF,UAAA,+BAAA4kB,uEAAA1kB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+8a7ED,MAAA,CAAAyP,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IA/8aiD3F,EAAE,CAAAqE,YAAA,CAg9a5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAh9ayFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAq8alF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,cAAArG,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAye,mCAAAzmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuR,GAAA,GAr8a+EpV,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA89apG,CAAC;IA99aiGnE,EAAE,CAAAyF,UAAA,+BAAA8kB,uEAAA5kB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwP,GAAA;MAAA,MAAAlP,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA69a7EI,MAAA,CAAAgQ,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IA79akD3F,EAAE,CAAAqE,YAAA,CA89a5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA99ayFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAo9alF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,cAAAnH,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,cAAAlS,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA2e,sCAAA3mB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAp9a+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAu+anG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA4mB,OAAA,GAAA3mB,GAAA,CAAA0C,SAAA;IAv+agGxG,EAAE,CAAA4I,WAAA,MAAA6hB,OAAA,CAAA/X,CAi+alF,CAAC,MAAA+X,OAAA,CAAA9X,CAAD,CAAC,OAAA8X,OAAA,CAAAC,EAAD,CAAC,UAAAD,OAAA,CAAA9e,KAAD,CAAC,WAAA8e,OAAA,CAAA/e,MAAD,CAAC,SAAA+e,OAAA,CAAAP,IAAD,CAAC;EAAA;AAAA;AAAA,MAAAS,IAAA;AAAA,SAAAC,gCAAA/mB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj+a+E7D,EAAE,CAAA8G,cAAA,CA4qbnF,CAAC;IA5qbgF9G,EAAE,CAAAmE,cAAA,OA4qbnF,CAAC;IA5qbgFnE,EAAE,CAAA8E,SAAA,aAorbrG,CAAC;IAprbkG9E,EAAE,CAAAqE,YAAA,CAqrbjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GArrb8FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA8qbzE,CAAC;IA9qbsExE,EAAE,CAAAyE,UAAA,4BA8qbzE,CAAC;IA9qbsEzE,EAAE,CAAA4I,WAAA,MAAAxD,MAAA,CAAAylB,WAgrb/E,CAAC,SAAAzlB,MAAA,CAAA8kB,IAAD,CAAC,WAAA9kB,MAAA,CAAA0lB,MAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,gCAAAlnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhrb4E7D,EAAE,CAAA8G,cAAA,CAsrbpF,CAAC;IAtrbiF9G,EAAE,CAAAmE,cAAA,OAsrbpF,CAAC;IAtrbiFnE,EAAE,CAAA8E,SAAA,aAurbQ,CAAC;IAvrbX9E,EAAE,CAAAqE,YAAA,CAwrbjG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAxrb8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAurb1D,CAAC;IAvrbuDxE,EAAE,CAAA4I,WAAA,MAAAtE,MAAA,CAAAumB,WAurb1D,CAAC,SAAAvmB,MAAA,CAAA4lB,IAAD,CAAC,WAAA5lB,MAAA,CAAAwmB,MAAD,CAAC;EAAA;AAAA;AAAA,MAAAE,IAAA;AAAA,SAAAC,sCAAApnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvrbuD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAi4bnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAj4bgGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA+L,cAAA,CAAAC,QA83b5D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA4Z,sCAAArnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA93byD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAs6brG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GAt6bkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA0R,WAAA,WAAApN,MAAA,CAAAsC,QAAA,CAAAtC,MAAA,CAAAwM,IAAA,CAk6btE,CAAC,aAAAxM,MAAA,CAAA6mB,UAAA,CAAA7mB,MAAA,CAAAwM,IAAA,CAAD,CAAC;IAl6bmE9Q,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAwM,IA+5bxF,CAAC,SAAAxM,MAAA,CAAA8mB,SAAD,CAAC,SAAA9mB,MAAA,CAAA+mB,WAAA,GAAA/mB,MAAA,CAAAgnB,WAAA,GAAAhnB,MAAA,CAAA+C,MAAA,CAAAkkB,QAAA,CAAAjnB,MAAA,CAAAwM,IAAA,CAAAhC,IAAA,CAAD,CAAC,YAAAxK,MAAA,CAAAknB,gBAAD,CAAC,eAAAlnB,MAAA,CAAAwQ,UAAD,CAAC;EAAA;AAAA;AAAA,SAAA2W,qCAAA5nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,GAAA,GA/5bqF7J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAixcpG,CAAC;IAjxciGnE,EAAE,CAAAyF,UAAA,+BAAAimB,yEAAA/lB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiE,GAAA;MAAA,MAAAxD,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAgxc7EO,MAAA,CAAAiP,iBAAA,CAAA3P,MAAwB,EAAC;IAAA,EAAC;IAhxciD3F,EAAE,CAAAqE,YAAA,CAixc5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAjxcyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAW,MAAA,CAAAmG,MAqwclF,CAAC,SAAAnG,MAAA,CAAAqG,IAAD,CAAC,kBAAArG,MAAA,CAAAwF,aAAD,CAAC,cAAAxF,MAAA,CAAAmQ,cAAD,CAAC,cAAAnQ,MAAA,CAAAoQ,UAAD,CAAC,cAAApQ,MAAA,CAAAqQ,cAAD,CAAC,gBAAArQ,MAAA,CAAAsQ,gBAAD,CAAC,kBAAAtQ,MAAA,CAAAuQ,kBAAD,CAAC,mBAAAvQ,MAAA,CAAAwQ,mBAAD,CAAC,UAAAxQ,MAAA,CAAAyQ,UAAD,CAAC,cAAAzQ,MAAA,CAAAyG,SAAD,CAAC;EAAA;AAAA;AAAA,SAAA8f,qCAAA9nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkG,GAAA,GArwc+E/J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAmycpG,CAAC;IAnyciGnE,EAAE,CAAAyF,UAAA,+BAAAmmB,yEAAAjmB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmE,GAAA;MAAA,MAAAV,MAAA,GAAFrJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAkyc7EuD,MAAA,CAAA6M,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAlyckD3F,EAAE,CAAAqE,YAAA,CAmyc5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAnycyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAH,MAAA,CAAAkL,MAqxclF,CAAC,SAAAlL,MAAA,CAAAmH,IAAD,CAAC,kBAAAnH,MAAA,CAAAsG,aAAD,CAAC,cAAAtG,MAAA,CAAA6R,cAAD,CAAC,cAAA7R,MAAA,CAAA8R,UAAD,CAAC,cAAA9R,MAAA,CAAA+R,cAAD,CAAC,kBAAA/R,MAAA,CAAAgS,kBAAD,CAAC,mBAAAhS,MAAA,CAAAiS,mBAAD,CAAC,UAAAjS,MAAA,CAAAkS,UAAD,CAAC,mBAAAlS,MAAA,CAAAoL,cAAD,CAAC,iBAAApL,MAAA,CAAA6K,YAAD,CAAC,kBAAA7K,MAAA,CAAA2K,aAAD,CAAC,cAAA3K,MAAA,CAAAuH,SAAD,CAAC;EAAA;AAAA;AAAA,SAAAggB,8CAAAhoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArxc+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAsycZ,CAAC;IAtycSnE,EAAE,CAAA8E,SAAA,WAmzc7F,CAAC;IAnzc0F9E,EAAE,CAAAqE,YAAA,CAozczF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAoT,UAAA,GAAAnT,GAAA,CAAA0C,SAAA;IAAA,MAAAiD,OAAA,GApzcsFzJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAsycb,CAAC;IAtycUzE,EAAE,CAAAwE,SAAA,EAyyc5E,CAAC;IAzycyExE,EAAE,CAAAyE,UAAA,WAAAgF,OAAA,CAAA8B,MAyyc5E,CAAC,WAAA9B,OAAA,CAAA+F,MAAD,CAAC,WAAA/F,OAAA,CAAApC,MAAD,CAAC,SAAA4P,UAAD,CAAC,kBAAAxN,OAAA,CAAAxB,aAAD,CAAC,cAAAwB,OAAA,CAAAmN,SAAD,CAAC,UAAAnN,OAAA,CAAAqN,KAAD,CAAC,qBAAArN,OAAA,CAAA+hB,gBAAD,CAAC,aAAA/hB,OAAA,CAAAqiB,QAAD,CAAC,eAAAriB,OAAA,CAAAqL,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAiX,qCAAAloB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzycyE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAqyc7E,CAAC;IAryc0EnE,EAAE,CAAAoE,UAAA,IAAAynB,6CAAA,eAozczF,CAAC;IApzcsF7rB,EAAE,CAAAqE,YAAA,CAqzc3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GArzcwF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAsyc3D,CAAC;IAtycwDxE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAAgT,OAsyc3D,CAAC,iBAAAhT,MAAA,CAAAoU,OAAD,CAAC;EAAA;AAAA;AAAA,SAAA6S,8CAAAnoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtycwD7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAuzczC,CAAC;IAvzcsCnE,EAAE,CAAA8E,SAAA,WAo0c7F,CAAC;IAp0c0F9E,EAAE,CAAAqE,YAAA,CAq0czF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAooB,UAAA,GAAAnoB,GAAA,CAAA0C,SAAA;IAAA,MAAA2G,OAAA,GAr0csFnN,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA0zc5E,CAAC;IA1zcyExE,EAAE,CAAAyE,UAAA,WAAA0I,OAAA,CAAA5B,MA0zc5E,CAAC,WAAA4B,OAAA,CAAAqC,MAAD,CAAC,WAAArC,OAAA,CAAA9F,MAAD,CAAC,SAAA4kB,UAAD,CAAC,kBAAA9e,OAAA,CAAAlF,aAAD,CAAC,cAAAkF,OAAA,CAAAyJ,SAAD,CAAC,UAAAzJ,OAAA,CAAA2J,KAAD,CAAC,qBAAA3J,OAAA,CAAAqe,gBAAD,CAAC,aAAAre,OAAA,CAAA2e,QAAD,CAAC,eAAA3e,OAAA,CAAA2H,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAoX,qCAAAroB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1zcyE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAszc9E,CAAC;IAtzc2EnE,EAAE,CAAAoE,UAAA,IAAA4nB,6CAAA,eAq0czF,CAAC;IAr0csFhsB,EAAE,CAAAqE,YAAA,CAs0c3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GAt0cwF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAuzc3D,CAAC;IAvzcwDxE,EAAE,CAAAyE,UAAA,YAAAoB,MAAA,CAAAkS,OAuzc3D,CAAC,iBAAAlS,MAAA,CAAAsT,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAgT,+CAAAtoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2T,IAAA,GAvzcwDxX,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAs1c3D,CAAC,WAAD,CAAC;IAt1cwDnE,EAAE,CAAAyF,UAAA,oBAAA2mB,wEAAAzmB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAhL,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk2clF0G,OAAA,CAAAqE,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAA0mB,0EAAA1mB,MAAA;MAl2cgE3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAI,OAAA,GAAF5X,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm2chF8R,OAAA,CAAAT,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADL,CAAC,wBAAA2mB,4EAAA3mB,MAAA;MAl2cgE3F,EAAE,CAAA4F,aAAA,CAAA4R,IAAA;MAAA,MAAAjN,OAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAo2c9EyE,OAAA,CAAA8M,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFT,CAAC;IAl2cgE3F,EAAE,CAAAqE,YAAA,CAq2c7F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAslB,UAAA,GAAArlB,GAAA,CAAA0C,SAAA;IAAA,MAAAmO,OAAA,GAr2c0F3U,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAy1c5E,CAAC;IAz1cyExE,EAAE,CAAAyE,UAAA,WAAAkQ,OAAA,CAAApJ,MAy1c5E,CAAC,WAAAoJ,OAAA,CAAAnF,MAAD,CAAC,WAAAmF,OAAA,CAAAtN,MAAD,CAAC,SAAA8hB,UAAD,CAAC,cAAAxU,OAAA,CAAAiC,SAAD,CAAC,iBAAAjC,OAAA,CAAA2C,eAAD,CAAC,kBAAA3C,OAAA,CAAA1M,aAAD,CAAC,oBAAA0M,OAAA,CAAA9C,eAAD,CAAC,oBAAA8C,OAAA,CAAAzC,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAqa,sCAAA1oB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2oB,IAAA,GAz1cyExsB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAw0ctC,CAAC;IAx0cmCnE,EAAE,CAAAyF,UAAA,wBAAAgnB,mEAAA;MAAFzsB,EAAE,CAAA4F,aAAA,CAAA4mB,IAAA;MAAA,MAAAE,OAAA,GAAF1sB,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAw0cpD4mB,OAAA,CAAAhV,WAAA,CAAY,EAAC;IAAA,EAAC;IAx0coC1X,EAAE,CAAAmE,cAAA,WAo1c/F,CAAC;IAp1c4FnE,EAAE,CAAAyF,UAAA,mBAAAknB,8DAAAhnB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4mB,IAAA;MAAA,MAAApN,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm1crFsZ,OAAA,CAAAvH,qBAAA,CAAAlS,MAA4B,EAAC;IAAA,EAAC;IAn1cqD3F,EAAE,CAAAqE,YAAA,CAo1c/F,CAAC;IAp1c4FrE,EAAE,CAAAoE,UAAA,IAAA+nB,8CAAA,eAs2czF,CAAC;IAt2csFnsB,EAAE,CAAAqE,YAAA,CAu2c3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GAv2cwF7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA20clF,CAAC;IA30c+ExE,EAAE,CAAAyE,UAAA,SAAAoD,MAAA,CAAA4D,IA20clF,CAAC,SAAA5D,MAAA,CAAAiQ,IAAD,CAAC,WAAAjQ,MAAA,CAAA0D,MAAD,CAAC,WAAA1D,MAAA,CAAA2H,MAAD,CAAC,YAAA3H,MAAA,CAAAkQ,OAAD,CAAC,WAAAlQ,MAAA,CAAAR,MAAD,CAAC,oBAAAQ,MAAA,CAAAgK,eAAD,CAAC,oBAAAhK,MAAA,CAAAmQ,qBAAD,CAAC;IA30c+EhY,EAAE,CAAAwE,SAAA,EAs1c7D,CAAC;IAt1c0DxE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OAs1c7D,CAAC;EAAA;AAAA;AAAA,SAAA6U,+CAAA/oB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt1c0D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAu3c7C,CAAC;IAv3c0CnE,EAAE,CAAA8E,SAAA,WAk4cjG,CAAC;IAl4c8F9E,EAAE,CAAAqE,YAAA,CAm4c7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgpB,UAAA,GAAA/oB,GAAA,CAAA0C,SAAA;IAAA,MAAA2H,OAAA,GAn4c0FnO,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA03cxE,CAAC;IA13cqExE,EAAE,CAAAyE,UAAA,WAAA0J,OAAA,CAAAgK,cA03cxE,CAAC,WAAAhK,OAAA,CAAAiK,cAAD,CAAC,WAAAjK,OAAA,CAAA9G,MAAD,CAAC,SAAAwlB,UAAD,CAAC,cAAA1e,OAAA,CAAAyI,SAAD,CAAC,UAAAzI,OAAA,CAAA2I,KAAD,CAAC,aAAA3I,OAAA,CAAA2d,QAAD,CAAC,eAAA3d,OAAA,CAAA2G,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAgY,sCAAAjpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkpB,IAAA,GA13cqE/sB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAs3ctG,CAAC;IAt3cmGnE,EAAE,CAAAyF,UAAA,4BAAAunB,uEAAArnB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAmnB,IAAA;MAAA,MAAA9e,OAAA,GAAFjO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAq3clFmI,OAAA,CAAA0K,YAAA,CAAAhT,MAAmB,EAAC;IAAA,EAAC;IAr3c2D3F,EAAE,CAAAoE,UAAA,IAAAwoB,8CAAA,cAm4c7F,CAAC;IAn4c0F5sB,EAAE,CAAAqE,YAAA,CAo4c/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAqC,MAAA,GAp4c4FlG,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAyB,MAAA,CAAA6R,OA82clF,CAAC,SA92c+E/X,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAnS,MAAA,CAAA2S,aAAA,EAAA3S,MAAA,CAAAwF,MAAA,CA82clF,CAAC,WAAAxF,MAAA,CAAA4S,cAAD,CAAC,WAAA5S,MAAA,CAAA6S,MAAD,CAAC,iBAAA7S,MAAA,CAAA8S,YAAD,CAAC,cAAA9S,MAAA,CAAA0Q,SAAD,CAAC,WAAA1Q,MAAA,CAAA+S,MAAD,CAAC;IA92c+EjZ,EAAE,CAAA4I,WAAA,cAAA1C,MAAA,CAAAgT,iBA62cjE,CAAC;IA72c8DlZ,EAAE,CAAAwE,SAAA,EAu3c/D,CAAC;IAv3c4DxE,EAAE,CAAAyE,UAAA,YAAAyB,MAAA,CAAA6R,OAu3c/D,CAAC,iBAAA7R,MAAA,CAAAiT,OAAD,CAAC;EAAA;AAAA;AAAA,MAAA8T,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,uCAAAtpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv3c4D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UA65dnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GA75dgGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAAgoB,WAw5d9E,CAAC,SAAAhoB,MAAA,CAAAiM,UAAD,CAAC,qBAAD,CAAC,gBAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA+b,uCAAAxpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA0B,GAAA,GAx5d2EvF,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA67dtG,CAAC;IA77dmGnE,EAAE,CAAAyF,UAAA,oBAAA6nB,gEAAA;MAAA,MAAA7Y,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAgoB,SAAA,GAAA9Y,WAAA,CAAAjO,SAAA;MAAA,MAAAX,MAAA,GAAF7F,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA07d1FD,MAAA,CAAAhE,MAAA,CAAAmE,IAAA,CAAAunB,SAAA,CAAAzc,IAAuB,EAAC;IAAA,EAAC,sBAAA0c,kEAAA;MAAA,MAAA/Y,WAAA,GA17d+DzU,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAgoB,SAAA,GAAA9Y,WAAA,CAAAjO,SAAA;MAAA,MAAAN,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA27dxFI,MAAA,CAAAC,QAAA,CAAAH,IAAA;QAAA8I,IAAA,EAAAye,SAAA,CAAAzc,IAAA,CAAA6N;MAAA,CAA0C,EAAC;IAAA,CADrB,CAAC,wBAAA8O,oEAAA;MAAA,MAAAhZ,WAAA,GA17d+DzU,EAAE,CAAA4F,aAAA,CAAAL,GAAA;MAAA,MAAAgoB,SAAA,GAAA9Y,WAAA,CAAAjO,SAAA;MAAA,MAAAH,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA47dtFO,MAAA,CAAAC,UAAA,CAAAN,IAAA;QAAA8I,IAAA,EAAAye,SAAA,CAAAzc,IAAA,CAAA6N;MAAA,CAA4C,EAAC;IAAA,CAFzB,CAAC;IA17d+D3e,EAAE,CAAAqE,YAAA,CA67d9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0pB,SAAA,GAAAzpB,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GA77d2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,YAAA/I,MAAA,CAAAopB,QAAA,UAk7djE,CAAC;IAl7d8D1tB,EAAE,CAAAyE,UAAA,OAAA8oB,SAAA,CAAAld,EA86drF,CAAC,OAAAkd,SAAA,CAAAhd,EAAD,CAAC,MAAAjM,MAAA,CAAAqpB,YAAD,CAAC,SAAAJ,SAAA,CAAA5mB,KAAD,CAAC,oBAAArC,MAAA,CAAAuN,eAAD,CAAC,qBAAAvN,MAAA,CAAAwN,cAAA,CAAAC,GAAD,CAAC,gBAAAzN,MAAA,CAAA0N,UAAA,CAAAC,OAAD,CAAC,iBAAA3N,MAAA,CAAA4N,eAAA,GAAAC,SAAA,GAAA7N,MAAA,CAAA8X,WAAA,CAAAmR,SAAA,CAAD,CAAC,oBAAAjpB,MAAA,CAAA4N,eAAD,CAAC,mBAAAqb,SAAA,CAAAzc,IAAD,CAAC;EAAA;AAAA;AAAA,SAAA8c,oDAAA/pB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA96dkF7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,eAk0e/F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAgqB,IAAA,GAAA/pB,GAAA,CAAA0C,SAAA;IAl0e4FxG,EAAE,CAAA4I,WAAA,MAAAilB,IAi0enF,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAjqB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj0egF7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA2zetE,CAAC;IA3zemEnE,EAAE,CAAAoE,UAAA,IAAAwpB,mDAAA,mBAk0e/F,CAAC;IAl0e4F5tB,EAAE,CAAAqE,YAAA,CAm0e3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAn0ewFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA6zenE,CAAC;IA7zegExE,EAAE,CAAAyE,UAAA,YAAAW,MAAA,CAAA2oB,WA6zenE,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAnqB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7zegE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAi1exF,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAoqB,OAAA,GAAAnqB,GAAA,CAAA0C,SAAA;IAAA,MAAA6C,MAAA,GAj1eqFrJ,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAwpB,OAw0elF,CAAC,WAAA5kB,MAAA,CAAA6kB,WAAD,CAAC,UAAAD,OAAA,CAAAxnB,KAAD,CAAC,QAAA4C,MAAA,CAAA6kB,WAAD,CAAC,UAAA7kB,MAAA,CAAAuB,aAAA,OAAAvB,MAAA,CAAA6kB,WAAD,CAAC,sBAAD,CAAC,eAAA7kB,MAAA,CAAAyL,UAAD,CAAC,cAAAzL,MAAA,CAAA8kB,SAAD,CAAC,kBAAA9kB,MAAA,CAAA+kB,aAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAxqB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAx0e+E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAo0e9E,CAAC;IAp0e2EnE,EAAE,CAAAoE,UAAA,IAAA4pB,8CAAA,cAi1exF,CAAC;IAj1eqFhuB,EAAE,CAAAqE,YAAA,CAk1e3F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GAl1ewFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAu0ejE,CAAC;IAv0e8DxE,EAAE,CAAAyE,UAAA,YAAAH,MAAA,CAAAgqB,UAu0ejE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAA1qB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GAv0e8D7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAk2epG,CAAC;IAl2eiGnE,EAAE,CAAAyF,UAAA,+BAAA+oB,0EAAA7oB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAApD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi2e7E2D,OAAA,CAAAyM,gBAAA,CAAAvQ,MAAuB,EAAC;IAAA,EAAC;IAj2ekD3F,EAAE,CAAAqE,YAAA,CAk2e5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GAl2eyF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAAM,MAAA,CAAA0pB,UAw1e9E,CAAC,SAAA1pB,MAAA,CAAA2pB,SAAD,CAAC,kBAAA3pB,MAAA,CAAA6F,aAAD,CAAC,cAAA7F,MAAA,CAAAoR,cAAD,CAAC,cAAApR,MAAA,CAAAqR,UAAD,CAAC,cAAArR,MAAA,CAAAsR,cAAD,CAAC,kBAAAtR,MAAA,CAAAuR,kBAAD,CAAC,mBAAAvR,MAAA,CAAAwR,mBAAD,CAAC,cAAAxR,MAAA,CAAA8G,SAAD,CAAC;IAx1e2E7L,EAAE,CAAA4I,WAAA,cAAA7D,MAAA,CAAA4pB,cAs1elE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAA/qB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt1e+D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,WA22e5F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAgC,MAAA,GA32eyF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAoB,MAAA,CAAA2P,UAs2e/E,CAAC,WAAA3P,MAAA,CAAAmG,WAAD,CAAC,WAAAnG,MAAA,CAAAoG,WAAA,CAAAC,MAAD,CAAC,WAAArG,MAAA,CAAA4F,IAAA,CAAAC,MAAD,CAAC,UAAA7F,MAAA,CAAA4F,IAAA,CAAAE,KAAD,CAAC;EAAA;AAAA;AAAA,SAAAkjB,+CAAAhrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAirB,IAAA,GAt2e4E9uB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA62ed,CAAC,WAAD,CAAC;IA72eWnE,EAAE,CAAAyF,UAAA,oBAAAspB,wEAAAppB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAkpB,IAAA;MAAA,MAAAna,OAAA,GAAF3U,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA43epF6O,OAAA,CAAA9D,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAqpB,0EAAArpB,MAAA;MA53ekE3F,EAAE,CAAA4F,aAAA,CAAAkpB,IAAA;MAAA,MAAAtiB,OAAA,GAAFxM,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA63elF0G,OAAA,CAAA2K,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADL,CAAC,wBAAAspB,4EAAAtpB,MAAA;MA53ekE3F,EAAE,CAAA4F,aAAA,CAAAkpB,IAAA;MAAA,MAAA5G,OAAA,GAAFloB,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA83ehFoiB,OAAA,CAAA7Q,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFT,CAAC;IA53ekE3F,EAAE,CAAAqE,YAAA,CA+3e/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAooB,UAAA,GAAAnoB,GAAA,CAAA0C,SAAA;IAAA,MAAA2G,OAAA,GA/3e4FnN,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA62ef,CAAC;IA72eYzE,EAAE,CAAAwE,SAAA,EAg3e1E,CAAC;IAh3euExE,EAAE,CAAAyE,UAAA,aAAA0I,OAAA,CAAA0J,QAg3e1E,CAAC,WAAA1J,OAAA,CAAA5B,MAAD,CAAC,WAAA4B,OAAA,CAAAqC,MAAD,CAAC,WAAArC,OAAA,CAAA9F,MAAD,CAAC,SAAA4kB,UAAD,CAAC,kBAAA9e,OAAA,CAAAlF,aAAD,CAAC,cAAAkF,OAAA,CAAAyJ,SAAD,CAAC,UAAAzJ,OAAA,CAAA2J,KAAD,CAAC,qBAAA3J,OAAA,CAAAqe,gBAAD,CAAC,eAAAre,OAAA,CAAA2H,UAAD,CAAC,oBAAA3H,OAAA,CAAA0E,eAAD,CAAC,oBAAA1E,OAAA,CAAA+E,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAgd,sCAAArrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh3euE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OA42e9C,CAAC;IA52e2CnE,EAAE,CAAAoE,UAAA,IAAAyqB,8CAAA,gBAg4e3F,CAAC;IAh4ewF7uB,EAAE,CAAAqE,YAAA,CAi4e7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgE,MAAA,GAj4e0F7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAf,MAAA,CAAAsnB,aA42e/C,CAAC;IA52e4CnvB,EAAE,CAAAwE,SAAA,EA62e7D,CAAC;IA72e0DxE,EAAE,CAAAyE,UAAA,YAAAoD,MAAA,CAAAkQ,OA62e7D,CAAC,iBAAAlQ,MAAA,CAAAsR,OAAD,CAAC;EAAA;AAAA;AAAA,SAAAiW,+CAAAvrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2oB,IAAA,GA72e0DxsB,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAm4e3C,CAAC,WAAD,CAAC;IAn4ewCnE,EAAE,CAAAyF,UAAA,oBAAA4pB,wEAAA1pB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA4mB,IAAA;MAAA,MAAAE,OAAA,GAAF1sB,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk5epF4mB,OAAA,CAAA7b,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAA2pB,0EAAA3pB,MAAA;MAl5ekE3F,EAAE,CAAA4F,aAAA,CAAA4mB,IAAA;MAAA,MAAApN,OAAA,GAAFpf,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAm5elFsZ,OAAA,CAAAjI,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADL,CAAC,wBAAA4pB,4EAAA5pB,MAAA;MAl5ekE3F,EAAE,CAAA4F,aAAA,CAAA4mB,IAAA;MAAA,MAAAre,OAAA,GAAFnO,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAo5ehFqI,OAAA,CAAAkJ,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFT,CAAC;IAl5ekE3F,EAAE,CAAAqE,YAAA,CAq5e/F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA2rB,UAAA,GAAA1rB,GAAA,CAAA0C,SAAA;IAAA,MAAAoR,OAAA,GAr5e4F5X,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAs4e1E,CAAC;IAt4euExE,EAAE,CAAAyE,UAAA,aAAAmT,OAAA,CAAAf,QAs4e1E,CAAC,WAAAe,OAAA,CAAArM,MAAD,CAAC,WAAAqM,OAAA,CAAApI,MAAD,CAAC,WAAAoI,OAAA,CAAAvQ,MAAD,CAAC,SAAAmoB,UAAD,CAAC,kBAAA5X,OAAA,CAAA3P,aAAD,CAAC,cAAA2P,OAAA,CAAAhB,SAAD,CAAC,UAAAgB,OAAA,CAAAd,KAAD,CAAC,qBAAAc,OAAA,CAAA4T,gBAAD,CAAC,eAAA5T,OAAA,CAAA9C,UAAD,CAAC,oBAAA8C,OAAA,CAAA/F,eAAD,CAAC,oBAAA+F,OAAA,CAAA1F,eAAD,CAAC;EAAA;AAAA;AAAA,SAAAud,sCAAA5rB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt4euE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAk4e/C,CAAC;IAl4e4CnE,EAAE,CAAAoE,UAAA,IAAAgrB,8CAAA,gBAs5e3F,CAAC;IAt5ewFpvB,EAAE,CAAAqE,YAAA,CAu5e7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAqC,MAAA,GAv5e0FlG,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA1C,MAAA,CAAAipB,aAk4ehD,CAAC;IAl4e6CnvB,EAAE,CAAAwE,SAAA,EAm4e7D,CAAC;IAn4e0DxE,EAAE,CAAAyE,UAAA,YAAAyB,MAAA,CAAA6R,OAm4e7D,CAAC,iBAAA7R,MAAA,CAAAiT,OAAD,CAAC;EAAA;AAAA;AAAA,MAAAuW,IAAA;AAAA,SAAAC,qCAAA9rB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn4e0D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAktf5E,CAAC;IAltfyEnE,EAAE,CAAA8E,SAAA,UAmtfU,CAAC;IAntfb9E,EAAE,CAAAqE,YAAA,CAotf5F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GAptfyFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAmtfjD,CAAC;IAntf8CxE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAA8kB,IAmtfjD,CAAC,SAAA9kB,MAAA,CAAAwqB,gBAAD,CAAC,iBAAAxqB,MAAA,CAAAyqB,YAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,8CAAAlsB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAntf8C7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UA+5f9F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAmsB,MAAA,GA/5f2FhwB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAzB,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAurB,MAq5fzF,CAAC,WAAAjrB,MAAA,CAAAmpB,WAAD,CAAC,UAAAnpB,MAAA,CAAA4B,KAAA,CAAAqpB,MAAA,CAAD,CAAC,UAAAjrB,MAAA,CAAAgH,SAAA,CAAAikB,MAAA,CAAD,CAAC,cAAAjrB,MAAA,CAAAkrB,UAAD,CAAC,kBAAAlrB,MAAA,CAAAmrB,cAAD,CAAC,QAAAnrB,MAAA,CAAAjC,GAAD,CAAC,UAAAktB,MAAA,CAAAnhB,KAAD,CAAC,kBAAA9J,MAAA,CAAAorB,aAAD,CAAC,eAAAprB,MAAA,CAAA+P,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAsb,qCAAAvsB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GAr5fsFpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CAi5fvD,CAAC;IAj5foD9G,EAAE,CAAAmE,cAAA,OAi5fvD,CAAC;IAj5foDnE,EAAE,CAAAoE,UAAA,IAAA2rB,6CAAA,eA+5f9F,CAAC;IA/5f2F/vB,EAAE,CAAAmE,cAAA,UAy7ftG,CAAC;IAz7fmGnE,EAAE,CAAAyF,UAAA,oBAAA4qB,8DAAA1qB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA86f1F+B,MAAA,CAAAgJ,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAA2qB,gEAAA3qB,MAAA;MA96fwE3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAA/W,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+6fxFO,MAAA,CAAAF,QAAA,CAAAH,IAAA,CAAAL,MAAoB,EAAC;IAAA,CADR,CAAC,wBAAA4qB,kEAAA5qB,MAAA;MA96fwE3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAnH,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg7ftFmQ,MAAA,CAAA3P,UAAA,CAAAN,IAAA,CAAAL,MAAsB,EAAC;IAAA,CAFZ,CAAC,sBAAA6qB,gEAAA7qB,MAAA;MA96fwE3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAA/T,MAAA,GAAFrJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi7fxFuD,MAAA,CAAAonB,QAAA,CAAAzqB,IAAA,CAAAL,MAAoB,EAAC;IAAA,CAHR,CAAC;IA96fwE3F,EAAE,CAAAqE,YAAA,CAy7f9F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAmsB,MAAA,GAAAlsB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAz7f2FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAo5f7E,CAAC;IAp5f0ExE,EAAE,CAAAyE,UAAA,SAAAW,MAAA,CAAAsrB,YAAA,CAAAV,MAAA,CAo5f7E,CAAC;IAp5f0EhwB,EAAE,CAAAwE,SAAA,EAk6fxE,CAAC;IAl6fqExE,EAAE,CAAAyE,UAAA,eAAAurB,MAAA,CAAAW,UAk6fxE,CAAC,aAAAX,MAAA,CAAAY,QAAD,CAAC,gBAAAxrB,MAAA,CAAAyrB,WAAD,CAAC,gBAAAzrB,MAAA,CAAA8oB,WAAD,CAAC,SAAA9oB,MAAA,CAAAuB,KAAA,CAAAqpB,MAAA,CAAD,CAAC,UAAAA,MAAA,CAAAlf,IAAA,CAAAjC,KAAD,CAAC,aAAAzJ,MAAA,CAAAyR,QAAD,CAAC,SAAAmZ,MAAA,CAAAlf,IAAD,CAAC,QAAA1L,MAAA,CAAAtC,GAAD,CAAC,kBAAAsC,MAAA,CAAA+qB,aAAD,CAAC,aAAA/qB,MAAA,CAAAwB,QAAA,CAAAopB,MAAA,CAAAlf,IAAA,CAAD,CAAC,YAAA1L,MAAA,CAAA0P,UAAD,CAAC,oBAAA1P,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA0M,cAAA,CAAAC,GAAD,CAAC,gBAAA3M,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,iBAAA7M,MAAA,CAAA0rB,eAAA,CAAAd,MAAA,CAAD,CAAC,oBAAA5qB,MAAA,CAAA8M,eAAD,CAAC,mBAAA8d,MAAA,CAAAlf,IAAD,CAAC;EAAA;AAAA;AAAA,MAAAigB,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,yCAAAptB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GAl6fqEzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAwjhBtG,CAAC;IAxjhBmGnE,EAAE,CAAAyF,UAAA,oBAAAyrB,kEAAAvrB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqjhB1Ff,MAAA,CAAA8L,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAwrB,oEAAAxrB,MAAA;MArjhBwE3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAI,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAsjhBxF+B,MAAA,CAAA1B,QAAA,CAAAH,IAAA,CAAAL,MAAoB,EAAC;IAAA,CADR,CAAC,wBAAAyrB,sEAAAzrB,MAAA;MArjhBwE3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAAvB,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAujhBtFI,MAAA,CAAAI,UAAA,CAAAN,IAAA,CAAAL,MAAsB,EAAC;IAAA,CAFZ,CAAC;IArjhBwE3F,EAAE,CAAAqE,YAAA,CAwjhB9F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAmsB,MAAA,GAAAlsB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAxjhB2FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAurB,MAAA,CAAAW,UA2ihBxE,CAAC,aAAAX,MAAA,CAAAY,QAAD,CAAC,gBAAAxrB,MAAA,CAAAyrB,WAAD,CAAC,gBAAAzrB,MAAA,CAAA8oB,WAAD,CAAC,SAAA9oB,MAAA,CAAAuB,KAAA,CAAAqpB,MAAA,CAAD,CAAC,UAAAA,MAAA,CAAAlf,IAAA,CAAAjC,KAAD,CAAC,SAAAmhB,MAAA,CAAAlf,IAAD,CAAC,kBAAD,CAAC,kBAAAkf,MAAA,CAAAqB,aAAD,CAAC,YAAArB,MAAA,CAAApuB,OAAD,CAAC;IA3ihBqE5B,EAAE,CAAA4I,WAAA,UAAAonB,MAAA,CAAAvd,KA0ihB7E,CAAC;EAAA;AAAA;AAAA,SAAA6e,+CAAAztB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1ihB0E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cA0whBvF,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA0tB,SAAA,GA1whBoFvxB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAFxG,EAAE,CAAAyE,UAAA,YAAA8sB,SAAA,CAAAC,OAuwhBvE,CAAC,mBAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAA5tB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvwhBoE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,cA2whBI,CAAC;IA3whBPnE,EAAE,CAAAmF,MAAA,EA6whBnG,CAAC;IA7whBgGnF,EAAE,CAAAqE,YAAA,CA6whBxF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0tB,SAAA,GA7whBqFvxB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAFxG,EAAE,CAAAwE,SAAA,EA6whBnG,CAAC;IA7whBgGxE,EAAE,CAAA6I,kBAAA,MAAA0oB,SAAA,CAAAC,OAAA,CAAAnd,cAAA,OA6whBnG,CAAC;EAAA;AAAA;AAAA,SAAAqd,+CAAA7tB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7whBgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cA2xhBvF,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA0tB,SAAA,GA3xhBoFvxB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAqB,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA8sB,SAAA,CAAA3U,KAyxhBzE,CAAC,gBAAA/U,MAAA,CAAApB,KAAA,OAAD,CAAC;IAzxhBsEzG,EAAE,CAAA4I,WAAA,MAAA2oB,SAAA,CAAArD,WAsxhBpE,CAAC;EAAA;AAAA;AAAA,SAAAyD,+CAAA9tB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtxhBiE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,cAmyhBlG,CAAC;IAnyhB+FnE,EAAE,CAAAmF,MAAA,EAqyhBnG,CAAC;IAryhBgGnF,EAAE,CAAAqE,YAAA,CAqyhBxF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0tB,SAAA,GAryhBqFvxB,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAA,MAAAN,MAAA,GAAFlG,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,MAAA2oB,SAAA,CAAArD,WAiyhBpE,CAAC;IAjyhBiEluB,EAAE,CAAAwE,SAAA,EAqyhBnG,CAAC;IAryhBgGxE,EAAE,CAAA4xB,kBAAA,MAAA1rB,MAAA,CAAAO,KAAA,QAAA8qB,SAAA,CAAA3U,KAAA,CAAAvI,cAAA,OAqyhBnG,CAAC;EAAA;AAAA;AAAA,MAAAwd,IAAA,YAAAA,CAAA7tB,EAAA;EAAA;IAAA8M,IAAA,EAAA9M;EAAA;AAAA;AAAA,SAAA8tB,mCAAAjuB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgJ,IAAA,GAryhBgG7M,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA6uhBN,CAAC,UAAD,CAAC;IA7uhBGnE,EAAE,CAAAyF,UAAA,oBAAAssB,4DAAApsB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAApD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAqvhBtF2D,OAAA,CAAAoH,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAqsB,8DAAArsB,MAAA;MArvhBoE3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAM,OAAA,GAAFnN,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA6vhBpFqH,OAAA,CAAAgK,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CARL,CAAC,wBAAAssB,gEAAAtsB,MAAA;MArvhBoE3F,EAAE,CAAA4F,aAAA,CAAAiH,IAAA;MAAA,MAAAuR,OAAA,GAAFpe,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8vhBlFsY,OAAA,CAAA/G,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CATT,CAAC;IArvhBoE3F,EAAE,CAAAqE,YAAA,CA+vhBjG,CAAC;IA/vhB8FrE,EAAE,CAAAoE,UAAA,IAAAktB,8CAAA,iBA0whBvF,CAAC;IA1whBoFtxB,EAAE,CAAAoE,UAAA,IAAAqtB,8CAAA,iBA6whBxF,CAAC;IA7whBqFzxB,EAAE,CAAAmE,cAAA,aA8whB/B,CAAC;IA9whB4BnE,EAAE,CAAAmF,MAAA,EAgxhBnG,CAAC;IAhxhBgGnF,EAAE,CAAAqE,YAAA,CAgxhBxF,CAAC;IAhxhBqFrE,EAAE,CAAAoE,UAAA,IAAAstB,8CAAA,iBA2xhBvF,CAAC;IA3xhBoF1xB,EAAE,CAAAoE,UAAA,IAAAutB,8CAAA,iBAqyhBxF,CAAC;IAryhBqF3xB,EAAE,CAAAqE,YAAA,CAsyhB7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0tB,SAAA,GAAAztB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAtyhB0FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA2oB,SAAA,CAAA7jB,SA6uhBP,CAAC;IA7uhBI1N,EAAE,CAAAwE,SAAA,EAgvhBzE,CAAC;IAhvhBsExE,EAAE,CAAAyE,UAAA,WAAA8sB,SAAA,CAAAlqB,MAgvhBzE,CAAC,SAAAkqB,SAAA,CAAAzgB,IAAD,CAAC,gBAAAygB,SAAA,CAAAV,WAAD,CAAC,gBAAAU,SAAA,CAAArD,WAAD,CAAC,eAAA9oB,MAAA,CAAA0P,UAAD,CAAC,oBAAA1P,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA0M,cAAA,CAAAC,GAAD,CAAC,gBAAA3M,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,iBAAA7M,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAA/M,MAAA,CAAAgX,WAAA,CAhvhBsEpc,EAAE,CAAA2E,eAAA,KAAAktB,IAAA,EAAAN,SAAA,EAgvhBzE,CAAC,oBAAAnsB,MAAA,CAAA8M,eAAD,CAAC,mBAAAqf,SAAA,CAAAzgB,IAAA,IAAAA,IAAD,CAAC;IAhvhBsE9Q,EAAE,CAAAwE,SAAA,EAiwhBhF,CAAC;IAjwhB6ExE,EAAE,CAAAyE,UAAA,SAAAW,MAAA,CAAA0P,UAiwhBhF,CAAC;IAjwhB6E9U,EAAE,CAAAwE,SAAA,EA2whBvE,CAAC;IA3whBoExE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAA0P,UA2whBvE,CAAC;IA3whBoE9U,EAAE,CAAAwE,SAAA,EAgxhBnG,CAAC;IAhxhBgGxE,EAAE,CAAA6I,kBAAA,MAAA0oB,SAAA,CAAA9qB,KAAA,KAgxhBnG,CAAC;IAhxhBgGzG,EAAE,CAAAwE,SAAA,EAkxhBhF,CAAC;IAlxhB6ExE,EAAE,CAAAyE,UAAA,SAAAW,MAAA,CAAA0P,UAkxhBhF,CAAC;IAlxhB6E9U,EAAE,CAAAwE,SAAA,EA6xhB/E,CAAC;IA7xhB4ExE,EAAE,CAAAyE,UAAA,UAAAW,MAAA,CAAA0P,UA6xhB/E,CAAC;EAAA;AAAA;AAAA,MAAAod,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,mCAAAvuB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7xhB4E7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,aAgqiBrG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAhqiBkGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,SAAAxD,MAAA,CAAAitB,SA4piB9E,CAAC,cAAAjtB,MAAA,CAAAktB,aAAD,CAAC,MAAAltB,MAAA,CAAAmtB,QAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,yCAAA5uB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5piB2E7D,EAAE,CAAA8G,cAAA,CA84iBvG,CAAC;IA94iBoG9G,EAAE,CAAA8E,SAAA,aA84iBvG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAA6uB,IAAA,GAAA5uB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GA94iBoGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,SAAAjI,MAAA,CAAAutB,UAy4iB9E,CAAC;IAz4iB2E3yB,EAAE,CAAA4I,WAAA,MAAA8pB,IAAA,CAAAhgB,CAu4iBzF,CAAC,MAAAggB,IAAA,CAAA/f,CAAD,CAAC,UAAA+f,IAAA,CAAA/mB,KAAD,CAAC,WAAA+mB,IAAA,CAAAhnB,MAAD,CAAC;EAAA;AAAA;AAAA,SAAAknB,sCAAA/uB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GAv4iBsFpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CAg6iBvG,CAAC;IAh6iBoG9G,EAAE,CAAAmE,cAAA,UAg6iBvG,CAAC;IAh6iBoGnE,EAAE,CAAAyF,UAAA,oBAAAotB,+DAAAltB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+5iB5F+B,MAAA,CAAAgJ,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC;IA/5iB0E3F,EAAE,CAAAqE,YAAA,CAg6iBvG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAivB,IAAA,GAAAhvB,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GAh6iBoGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,MAAAquB,IAAA,CAAApgB,CAk5iB9F,CAAC,MAAAogB,IAAA,CAAAngB,CAAD,CAAC,UAAAmgB,IAAA,CAAAnnB,KAAD,CAAC,WAAAmnB,IAAA,CAAApnB,MAAD,CAAC,UAAAonB,IAAA,CAAAnsB,KAAD,CAAC,cAAAmsB,IAAA,CAAAT,SAAD,CAAC,cAAAS,IAAA,CAAAC,SAAD,CAAC,SAAAD,IAAA,CAAAhiB,IAAD,CAAC,UAAAgiB,IAAA,CAAArsB,KAAD,CAAC,eAAAnC,MAAA,CAAA0uB,UAAD,CAAC,oBAAA1uB,MAAA,CAAAqP,eAAD,CAAC,oBAAArP,MAAA,CAAA2uB,eAAD,CAAC,eAAA3uB,MAAA,CAAAwQ,UAAD,CAAC;EAAA;AAAA;AAAA,MAAAoe,IAAA;AAAA,SAAAC,0CAAAtvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAl5iB2F7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAqqjBhF,CAAC;IArqjB6EnE,EAAE,CAAA8E,SAAA,UA2qjBnG,CAAC;IA3qjBgG9E,EAAE,CAAAqE,YAAA,CA4qjBhG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuB,MAAA,GA5qjB6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAwqjB/D,CAAC;IAxqjB4DxE,EAAE,CAAAyE,UAAA,gBAAAW,MAAA,CAAA6G,WAAA,CAAAmF,QAwqjB/D,CAAC,SAAAhM,MAAA,CAAAiM,UAAD,CAAC,UAAAjM,MAAA,CAAAkM,aAAD,CAAC;EAAA;AAAA;AAAA,SAAA8hB,iEAAAvvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxqjB4D7D,EAAE,CAAA8E,SAAA,aAysjBtF,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkB,MAAA,GAzsjBmF/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAM,MAAA,CAAA8J,KAssjBhF,CAAC,oBAAA9J,MAAA,CAAA4O,eAAD,CAAC;EAAA;AAAA;AAAA,SAAA0f,iEAAAxvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtsjB6E7D,EAAE,CAAAmE,cAAA,aA0sjB/C,CAAC;IA1sjB4CnE,EAAE,CAAAmF,MAAA,EA4sjBnG,CAAC;IA5sjBgGnF,EAAE,CAAAqE,YAAA,CA4sjBtF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAgC,MAAA,GA5sjBmF7F,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA4sjBnG,CAAC;IA5sjBgGxE,EAAE,CAAA6I,kBAAA,MAAAhD,MAAA,CAAAytB,cAAA,KA4sjBnG,CAAC;EAAA;AAAA;AAAA,SAAAC,mDAAA1vB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5sjBgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,sBA8rjBtG,CAAC;IA9rjBmGnE,EAAE,CAAA+G,eAAA,CA+rjBD,CAAC;IA/rjBF/G,EAAE,CAAAmE,cAAA,OA+rjBD,CAAC;IA/rjBFnE,EAAE,CAAA8E,SAAA,aAgsjBtB,CAAC,QAAD,CAAC;IAhsjBmB9E,EAAE,CAAAoE,UAAA,IAAAgvB,gEAAA,iBAysjBtF,CAAC;IAzsjBmFpzB,EAAE,CAAAoE,UAAA,IAAAivB,gEAAA,iBA4sjBtF,CAAC;IA5sjBmFrzB,EAAE,CAAAqE,YAAA,CA6sjB3F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAS,MAAA,GA7sjBwFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,yBA6rjBtE,CAAC;IA7rjBmErN,EAAE,CAAA4I,WAAA,MAAAtE,MAAA,CAAAoO,CAwrjBzF,CAAC,MAAApO,MAAA,CAAAqO,CAAD,CAAC,UAAArO,MAAA,CAAAqH,KAAD,CAAC,WAAArH,MAAA,CAAAoH,MAAD,CAAC;IAxrjBsF1L,EAAE,CAAAwE,SAAA,EA+rjB9D,CAAC;IA/rjB2DxE,EAAE,CAAAqN,WAAA,UAAA/I,MAAA,CAAAkvB,YAAA,EA+rjB9D,CAAC,WAAAlvB,MAAA,CAAAoH,MAAA,OAAD,CAAC,UAAApH,MAAA,CAAAqH,KAAA,OAAD,CAAC;IA/rjB2D3L,EAAE,CAAAwE,SAAA,EAgsjBrC,CAAC;IAhsjBkCxE,EAAE,CAAAyE,UAAA,cAAAH,MAAA,CAAAoC,cAAA,EAAF1G,EAAE,CAAAiF,cAgsjBrC,CAAC;IAhsjBkCjF,EAAE,CAAAwE,SAAA,EAmsjBhF,CAAC;IAnsjB6ExE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAwQ,UAmsjBhF,CAAC;IAnsjB6E9U,EAAE,CAAAwE,SAAA,EA0sjBrE,CAAC;IA1sjBkExE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAwQ,UA0sjBrE,CAAC;EAAA;AAAA;AAAA,MAAA2e,IAAA;AAAA,SAAAC,6CAAA7vB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4D,GAAA,GA1sjBkEzH,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA,CAs2jBxG,CAAC;IAt2jBqG9G,EAAE,CAAAmE,cAAA,UAs2jBxG,CAAC;IAt2jBqGnE,EAAE,CAAAyF,UAAA,oBAAAkuB,sEAAAhuB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAA6B,GAAA;MAAA,MAAA1C,MAAA,GAAF/E,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA81jB5Ff,MAAA,CAAA8L,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC;IA91jB0E3F,EAAE,CAAAqE,YAAA,CAs2jBhG,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAimB,IAAA,GAAAhmB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAt2jB6FpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAqlB,IAAA,CAAAhZ,IAk1jBxF,CAAC,MAAAgZ,IAAA,CAAApX,CAAD,CAAC,MAAAoX,IAAA,CAAAnX,CAAD,CAAC,UAAAmX,IAAA,CAAAne,KAAD,CAAC,WAAAme,IAAA,CAAApe,MAAD,CAAC,SAAAoe,IAAA,CAAAI,IAAD,CAAC,UAAAJ,IAAA,CAAArjB,KAAD,CAAC,UAAAqjB,IAAA,CAAAjb,KAAD,CAAC,oBAAAzJ,MAAA,CAAAuO,eAAD,CAAC,oBAAAvO,MAAA,CAAA6tB,eAAD,CAAC,aAAA7tB,MAAA,CAAAyR,QAAD,CAAC,eAAAzR,MAAA,CAAA0P,UAAD,CAAC,oBAAA1P,MAAA,CAAAyM,eAAD,CAAC,qBAAAzM,MAAA,CAAA0M,cAAA,CAAAC,GAAD,CAAC,gBAAA3M,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,iBAAA7M,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAA/M,MAAA,CAAAgN,cAAA,CAAA0X,IAAA,CAAD,CAAC,oBAAA1kB,MAAA,CAAA8M,eAAD,CAAC,mBAAA4X,IAAA,CAAAhZ,IAAD,CAAC;EAAA;AAAA;AAAA,MAAA8iB,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,0CAAAjwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAl1jBqF7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cAuskBnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAuB,MAAA,GAvskBgGpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAxD,MAAA,CAAA2uB,aAiskBnE,CAAC,WAAA3uB,MAAA,CAAAiC,MAAA,CAAAkkB,QAAA,CAAAnmB,MAAA,CAAA4uB,KAAA,CAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,0CAAApwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjskBgE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,cAitkBnG,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GAjtkBgGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAtE,MAAA,CAAAyvB,aA2skBnE,CAAC,WAAAzvB,MAAA,CAAA+C,MAAA,CAAAkkB,QAAA,CAAAjnB,MAAA,CAAA0vB,KAAA,CAAD,CAAC;EAAA;AAAA;AAAA,MAAAE,IAAA,YAAAA,CAAA;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,qCAAAxwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3skBgE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA8ilB7B,CAAC;IA9ilB0BnE,EAAE,CAAA8E,SAAA,UA+ilBpE,CAAC;IA/ilBiE9E,EAAE,CAAAqE,YAAA,CAgjlB/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAuF,OAAA,GAAAtF,GAAA,CAAA0C,SAAA;IAhjlB4FxG,EAAE,CAAAwE,SAAA,EA+ilBvE,CAAC;IA/ilBoExE,EAAE,CAAA4I,WAAA,MAAAQ,OAAA,CAAA7G,IA+ilBvE,CAAC;EAAA;AAAA;AAAA,SAAA+xB,qCAAAzwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/ilBoE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAijlB7B,CAAC,aAAD,CAAC;IAjjlB0BnE,EAAE,CAAAmF,MAAA,EAwjlBrG,CAAC;IAxjlBkGnF,EAAE,CAAAqE,YAAA,CAwjlB1F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA0wB,OAAA,GAAAzwB,GAAA,CAAA0C,SAAA;IAxjlBuFxG,EAAE,CAAAwE,SAAA,EAmjlB/D,CAAC;IAnjlB4DxE,EAAE,CAAAqN,WAAA,gBAAAknB,OAAA,CAAAvqB,UAmjlB/D,CAAC;IAnjlB4DhK,EAAE,CAAA4I,WAAA,cAAA2rB,OAAA,CAAAtqB,aAojlB9D,CAAC;IApjlB2DjK,EAAE,CAAAwE,SAAA,EAwjlBrG,CAAC;IAxjlBkGxE,EAAE,CAAA6I,kBAAA,MAAA0rB,OAAA,CAAAC,IAAA,KAwjlBrG,CAAC;EAAA;AAAA;AAAA,SAAAC,qCAAA5wB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxjlBkG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UA0jlB3B,CAAC;IA1jlBwBnE,EAAE,CAAA8E,SAAA,UA2jlBpE,CAAC;IA3jlBiE9E,EAAE,CAAAqE,YAAA,CA4jlB/F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAmJ,OAAA,GAAAlJ,GAAA,CAAA0C,SAAA;IA5jlB4FxG,EAAE,CAAAwE,SAAA,EA2jlBvE,CAAC;IA3jlBoExE,EAAE,CAAA4I,WAAA,MAAAoE,OAAA,CAAAzK,IA2jlBvE,CAAC;EAAA;AAAA;AAAA,SAAAmyB,iCAAA7wB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA3jlBoEpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAo0lBvB,CAAC,UAAD,CAAC;IAp0lBoBnE,EAAE,CAAAyF,UAAA,oBAAAkvB,0DAAAhvB,MAAA;MAAF3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAvV,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAg1lBtF+B,MAAA,CAAAgJ,OAAA,CAAAlL,MAAc,EAAC;IAAA,EAAC,sBAAAivB,4DAAAjvB,MAAA;MAh1lBoE3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAA/W,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAi1lBpFO,MAAA,CAAA8Q,UAAA,CAAAxR,MAAiB,EAAC;IAAA,CADL,CAAC,wBAAAkvB,8DAAAlvB,MAAA;MAh1lBoE3F,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAnH,MAAA,GAAFjW,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CAk1lBlFmQ,MAAA,CAAAoB,YAAA,CAAA1R,MAAmB,EAAC;IAAA,CAFT,CAAC;IAh1lBoE3F,EAAE,CAAAqE,YAAA,CAm1lB1F,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAixB,MAAA,GAAAhxB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GAn1lBuFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAAxD,MAAA,CAAA2vB,QAo0lBxB,CAAC;IAp0lBqB/0B,EAAE,CAAAwE,SAAA,EAu0lB9D,CAAC;IAv0lB2DxE,EAAE,CAAAyE,UAAA,kBAAAqwB,MAAA,CAAAE,aAu0lB9D,CAAC,aAAAF,MAAA,CAAAG,QAAD,CAAC,iBAAA7vB,MAAA,CAAA8vB,YAAD,CAAC,WAAA9vB,MAAA,CAAAiC,MAAD,CAAC,aAAAjC,MAAA,CAAAwB,QAAA,CAAAkuB,MAAA,CAAAG,QAAA,CAAAnkB,IAAA,CAAD,CAAC,oBAAA1L,MAAA,CAAAyM,eAAD,CAAC,oBAAAzM,MAAA,CAAA8M,eAAD,CAAC,oBAAA9M,MAAA,CAAAuO,eAAD,CAAC,eAAAvO,MAAA,CAAA0P,UAAD,CAAC;EAAA;AAAA;AAAA,SAAAqgB,iCAAAtxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv0lB2D7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAA8E,SAAA,UAk2lB5F,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAS,MAAA,GAl2lByFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAA8wB,WAy1lBxE,CAAC,kBAAA9wB,MAAA,CAAA+wB,aAAD,CAAC,QAAA/wB,MAAA,CAAAzB,GAAD,CAAC,QAAAyB,MAAA,CAAAxB,GAAD,CAAC,WAAAwB,MAAA,CAAA4pB,WAAD,CAAC,cAAA5pB,MAAA,CAAAgxB,SAAD,CAAC,eAAAhxB,MAAA,CAAAoZ,UAAD,CAAC,eAAApZ,MAAA,CAAAqsB,UAAD,CAAC,mBAAArsB,MAAA,CAAAixB,kBAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,oCAAA3xB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAz1lBqE7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,gBA02lBpG,CAAC,cAAD,CAAC;IA12lBiGnE,EAAE,CAAAmF,MAAA,EA22lB7D,CAAC;IA32lB0DnF,EAAE,CAAAqE,YAAA,CA22lBrD,CAAC;IA32lBkDrE,EAAE,CAAAmE,cAAA,eA42lB3E,CAAC;IA52lBwEnE,EAAE,CAAAmF,MAAA,EA42lBhE,CAAC;IA52lB6DnF,EAAE,CAAAqE,YAAA,CA42lBxD,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAAkB,MAAA,GA52lBqD/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqN,WAAA,wBAu2lBtE,CAAC;IAv2lBmErN,EAAE,CAAA4I,WAAA,cAAA7D,MAAA,CAAAkF,aAw2lBnE,CAAC;IAx2lBgEjK,EAAE,CAAAwE,SAAA,EA22lB7D,CAAC;IA32lB0DxE,EAAE,CAAAqF,iBAAA,CAAAN,MAAA,CAAA0wB,YA22lB7D,CAAC;IA32lB0Dz1B,EAAE,CAAAwE,SAAA,EA42lBhE,CAAC;IA52lB6DxE,EAAE,CAAAqF,iBAAA,CAAAN,MAAA,CAAAivB,KA42lBhE,CAAC;EAAA;AAAA;AAAA,SAAA0B,kCAAA7xB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuZ,GAAA,GA52lB6Dpd,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,UAynmBpG,CAAC,UAAD,CAAC,uBAAD,CAAC;IAznmBiGnE,EAAE,CAAA8E,SAAA,aAiomB1B,CAAC,aAAD,CAAC;IAjomBuB9E,EAAE,CAAAqE,YAAA,CAmomB5E,CAAC,CAAD,CAAC;IAnomByErE,EAAE,CAAAmE,cAAA,aA6omBlG,CAAC;IA7omB+FnE,EAAE,CAAAyF,UAAA,mBAAAkwB,6DAAA;MAAA,MAAAlhB,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAwY,OAAA,GAAAnhB,WAAA,CAAAjO,SAAA;MAAA,MAAAqB,MAAA,GAAF7H,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA2omBvF+B,MAAA,CAAAhG,MAAA,CAAAmE,IAAA,CAAA4vB,OAAA,CAAA9kB,IAAqB,EAAC;IAAA,EAAC,wBAAA+kB,kEAAA;MAAA,MAAAphB,WAAA,GA3omB8DzU,EAAE,CAAA4F,aAAA,CAAAwX,GAAA;MAAA,MAAAwY,OAAA,GAAAnhB,WAAA,CAAAjO,SAAA;MAAA,MAAAH,MAAA,GAAFrG,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA4omBlFO,MAAA,CAAAF,QAAA,CAAAH,IAAA,CAAA4vB,OAAA,CAAA9kB,IAAuB,EAAC;IAAA,CADP,CAAC;IA3omB8D9Q,EAAE,CAAAqE,YAAA,CA6omBvF,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA+xB,OAAA,GAAA9xB,GAAA,CAAA0C,SAAA;IAAA,MAAApB,MAAA,GA7omBoFpF,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,oBAAAW,MAAA,CAAAyM,eAmnmBhE,CAAC,gBAAAzM,MAAA,CAAA4M,UAAA,CAAAC,OAAD,CAAC,0BAAD,CAAC,iBAAA7M,MAAA,CAAA8M,eAAA,GAAAC,SAAA,GAAAyjB,OAAA,CAAA3jB,OAAD,CAAC,oBAAA7M,MAAA,CAAA8M,eAAD,CAAC,mBAAA0jB,OAAA,CAAA9kB,IAAD,CAAC;IAnnmB6D9Q,EAAE,CAAAwE,SAAA,EA4nmB5E,CAAC;IA5nmByExE,EAAE,CAAA4I,WAAA,OAAAgtB,OAAA,CAAAE,EA4nmB5E,CAAC,OAAAF,OAAA,CAAAG,MAAA,CAAAxoB,EAAD,CAAC,OAAAqoB,OAAA,CAAAI,MAAA,CAAAC,EAAD,CAAC;IA5nmByEj2B,EAAE,CAAAwE,SAAA,EAiomBtC,CAAC;IAjomBmCxE,EAAE,CAAA4I,WAAA,eAAAgtB,OAAA,CAAAM,UAiomBtC,CAAC;IAjomBmCl2B,EAAE,CAAAwE,SAAA,EAkomBtC,CAAC;IAlomBmCxE,EAAE,CAAA4I,WAAA,eAAAgtB,OAAA,CAAAO,QAkomBtC,CAAC;IAlomBmCn2B,EAAE,CAAAwE,SAAA,EAsomB7E,CAAC;IAtomB0ExE,EAAE,CAAA4I,WAAA,MAAAgtB,OAAA,CAAAQ,IAsomB7E,CAAC,WAAAR,OAAA,CAAAplB,YAAD,CAAC,iBAAAolB,OAAA,CAAAtO,WAAD,CAAC;EAAA;AAAA;AAAA,SAAA+O,kCAAAxyB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkG,GAAA,GAtomB0E/J,EAAE,CAAAwF,gBAAA;IAAFxF,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,WAgpmBhB,CAAC,cAAD,CAAC;IAhpmBanE,EAAE,CAAAyF,UAAA,mBAAA6wB,6DAAA;MAAA,MAAA7hB,WAAA,GAAFzU,EAAE,CAAA4F,aAAA,CAAAmE,GAAA;MAAA,MAAA0gB,OAAA,GAAAhW,WAAA,CAAAjO,SAAA;MAAA,MAAA6C,MAAA,GAAFrJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA8pmBvFuD,MAAA,CAAAxH,MAAA,CAAAmE,IAAA,CAAAykB,OAAA,CAAA3Z,IAAqB,EAAC;IAAA,EAAC,wBAAAylB,kEAAA;MAAA,MAAA9hB,WAAA,GA9pmB8DzU,EAAE,CAAA4F,aAAA,CAAAmE,GAAA;MAAA,MAAA0gB,OAAA,GAAAhW,WAAA,CAAAjO,SAAA;MAAA,MAAAiD,OAAA,GAAFzJ,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA8F,WAAA,CA+pmBlF2D,OAAA,CAAAtD,QAAA,CAAAH,IAAA,CAAAykB,OAAA,CAAA3Z,IAAuB,EAAC;IAAA,CADP,CAAC;IA9pmB8D9Q,EAAE,CAAAqE,YAAA,CAgqmBvF,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA4mB,OAAA,GAAA3mB,GAAA,CAAA0C,SAAA;IAAA,MAAAlC,MAAA,GAhqmBoFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA6hB,OAAA,CAAA/c,SAgpmB9B,CAAC;IAhpmB2B1N,EAAE,CAAAwE,SAAA,EAwpmB9D,CAAC;IAxpmB2DxE,EAAE,CAAAyE,UAAA,oBAAAH,MAAA,CAAAuN,eAwpmB9D,CAAC,gBAAAvN,MAAA,CAAA0N,UAAA,CAAAC,OAAD,CAAC,0BAAD,CAAC,iBAAA3N,MAAA,CAAA4N,eAAA,GAAAC,SAAA,GAAAsY,OAAA,CAAAxY,OAAD,CAAC,oBAAA3N,MAAA,CAAA4N,eAAD,CAAC,mBAAAuY,OAAA,CAAA3Z,IAAD,CAAC;IAxpmB2D9Q,EAAE,CAAA4I,WAAA,OAkpmBrF,CAAC,OAAD,CAAC,UAAA6hB,OAAA,CAAA9e,KAAD,CAAC,WAAA8e,OAAA,CAAA/e,MAAD,CAAC,SAAA+e,OAAA,CAAAP,IAAD,CAAC;EAAA;AAAA;AAAA,SAAAsM,8CAAA3yB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlpmBkF7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,cA4qmBlG,CAAC;IA5qmB+FnE,EAAE,CAAAmF,MAAA,EA8qmBnG,CAAC;IA9qmBgGnF,EAAE,CAAAqE,YAAA,CA8qmBxF,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA4yB,QAAA,GA9qmBqFz2B,EAAE,CAAAuE,aAAA,GAAAiC,SAAA;IAAFxG,EAAE,CAAA4I,WAAA,MAAA6tB,QAAA,CAAA9qB,KAAA,IAuqmBxE,CAAC,MAAA8qB,QAAA,CAAA/qB,MAAA,IAAD,CAAC,gBAAA+qB,QAAA,CAAAC,WAAD,CAAC,OAAAD,QAAA,CAAAC,WAAA,oBAAD,CAAC;IAvqmBqE12B,EAAE,CAAAwE,SAAA,EA8qmBnG,CAAC;IA9qmBgGxE,EAAE,CAAA6I,kBAAA,MAAA4tB,QAAA,CAAAhwB,KAAA,KA8qmBnG,CAAC;EAAA;AAAA;AAAA,SAAAkwB,kCAAA9yB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9qmBgG7D,EAAE,CAAA8G,cAAA;IAAF9G,EAAE,CAAAmE,cAAA,OAmqmB7B,CAAC;IAnqmB0BnE,EAAE,CAAAoE,UAAA,IAAAoyB,6CAAA,kBA8qmBxF,CAAC;IA9qmBqFx2B,EAAE,CAAAqE,YAAA,CA+qmB7F,CAAC;EAAA;EAAA,IAAAR,EAAA;IAAA,MAAA4yB,QAAA,GAAA3yB,GAAA,CAAA0C,SAAA;IAAA,MAAAzB,MAAA,GA/qmB0F/E,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA4I,WAAA,cAAA6tB,QAAA,CAAA/oB,SAmqmB9B,CAAC;IAnqmB2B1N,EAAE,CAAAwE,SAAA,EAqqmB5D,CAAC;IArqmByDxE,EAAE,CAAAyE,UAAA,SAAAM,MAAA,CAAA6xB,UAAA,IAAAH,QAAA,CAAA/qB,MAAA,KAqqmB5D,CAAC;EAAA;AAAA;AA1+mBjD,SAASmrB,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACnCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAIpyB,OAAO;EACX,IAAIqyB,IAAI;EACR,IAAIC,MAAM;EACV,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,QAAQ,GAAG,CAAC;EAChB,SAASC,KAAKA,CAAA,EAAG;IACbD,QAAQ,GAAGJ,OAAO,CAACM,OAAO,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC;IACtDJ,OAAO,GAAG,IAAI;IACdD,MAAM,GAAGJ,IAAI,CAACU,KAAK,CAAC5yB,OAAO,EAAEqyB,IAAI,CAAC;EACtC;EACA,OAAO,YAAY;IACf,MAAMQ,GAAG,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC;IACvB,IAAI,CAACH,QAAQ,IAAIJ,OAAO,CAACM,OAAO,KAAK,KAAK,EAAE;MACxCF,QAAQ,GAAGK,GAAG;IAClB;IACA,MAAMC,SAAS,GAAGX,IAAI,IAAIU,GAAG,GAAGL,QAAQ,CAAC;IACzCxyB,OAAO,GAAG,IAAI;IACd;IACAqyB,IAAI,GAAGU,SAAS;IAChB,IAAID,SAAS,IAAI,CAAC,EAAE;MAChBE,YAAY,CAACT,OAAO,CAAC;MACrBA,OAAO,GAAG,IAAI;MACdC,QAAQ,GAAGK,GAAG;MACdP,MAAM,GAAGJ,IAAI,CAACU,KAAK,CAAC5yB,OAAO,EAAEqyB,IAAI,CAAC;IACtC,CAAC,MACI,IAAI,CAACE,OAAO,IAAIH,OAAO,CAACa,QAAQ,KAAK,KAAK,EAAE;MAC7CV,OAAO,GAAGW,UAAU,CAACT,KAAK,EAAEK,SAAS,CAAC;IAC1C;IACA,OAAOR,MAAM;EACjB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,YAAYA,CAACC,QAAQ,EAAEhB,OAAO,EAAE;EACrC,OAAO,SAASiB,cAAcA,CAACjC,MAAM,EAAEkC,GAAG,EAAEC,UAAU,EAAE;IACpD,OAAO;MACHC,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAEF,UAAU,CAACE,UAAU;MACjCC,GAAG,EAAE,SAASC,MAAMA,CAAA,EAAG;QACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,GAAG,EAAE;UAC7BE,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAEF,UAAU,CAACE,UAAU;UACjCxpB,KAAK,EAAEgoB,QAAQ,CAACsB,UAAU,CAACtpB,KAAK,EAAEmpB,QAAQ,EAAEhB,OAAO;QACvD,CAAC,CAAC;QACF,OAAO,IAAI,CAACkB,GAAG,CAAC;MACpB;IACJ,CAAC;EACL,CAAC;AACL;AAEA,IAAIQ,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK;EAC7BA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACnCA,cAAc,CAAC,MAAM,CAAC,GAAG,MAAM;EAC/BA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;EACjCA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACvC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAMC,WAAW,GAAG,CAAC;AACrB,SAASC,gBAAgBA,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EAClE,IAAIA,SAAS,KAAKL,cAAc,CAAC3mB,GAAG,EAAE;IAClC,OAAO8mB,YAAY,CAACG,GAAG,GAAGL,WAAW;EACzC;EACA,IAAII,SAAS,KAAKL,cAAc,CAACxsB,MAAM,EAAE;IACrC,OAAO2sB,YAAY,CAACG,GAAG,GAAGH,YAAY,CAACntB,MAAM,GAAGotB,iBAAiB,CAACptB,MAAM,GAAGitB,WAAW;EAC1F;EACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;IACrC,OAAOJ,YAAY,CAACG,GAAG,GAAGH,YAAY,CAACntB,MAAM,GAAG,CAAC,GAAGotB,iBAAiB,CAACptB,MAAM,GAAG,CAAC;EACpF;EACA,OAAOyG,SAAS;AACpB;AACA,SAAS+mB,kBAAkBA,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EACpE,IAAIA,SAAS,KAAKL,cAAc,CAACpqB,IAAI,EAAE;IACnC,OAAOuqB,YAAY,CAACM,IAAI,GAAGR,WAAW;EAC1C;EACA,IAAII,SAAS,KAAKL,cAAc,CAACnqB,KAAK,EAAE;IACpC,OAAOsqB,YAAY,CAACM,IAAI,GAAGN,YAAY,CAACltB,KAAK,GAAGmtB,iBAAiB,CAACntB,KAAK,GAAGgtB,WAAW;EACzF;EACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;IACrC,OAAOJ,YAAY,CAACM,IAAI,GAAGN,YAAY,CAACltB,KAAK,GAAG,CAAC,GAAGmtB,iBAAiB,CAACntB,KAAK,GAAG,CAAC;EACnF;EACA,OAAOwG,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMinB,cAAc,CAAC;EACjB;AACJ;AACA;AACA;AACA;EACI,OAAOC,0BAA0BA,CAACR,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;IAC1E,IAAI7B,MAAM,GAAG0B,gBAAgB,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACzE,IAAI7B,MAAM,GAAG4B,iBAAiB,CAACptB,MAAM,GAAG4tB,MAAM,CAACC,WAAW,EAAE;MACxDrC,MAAM,GAAGoC,MAAM,CAACC,WAAW,GAAGT,iBAAiB,CAACptB,MAAM;IAC1D;IACA,OAAOwrB,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOsC,sBAAsBA,CAACX,YAAY,EAAEC,iBAAiB,EAAEW,eAAe,EAAEV,SAAS,EAAE;IACvF,IAAI7B,MAAM;IACV,IAAI6B,SAAS,KAAKL,cAAc,CAAC3mB,GAAG,EAAE;MAClCmlB,MAAM,GAAG2B,YAAY,CAACntB,MAAM,GAAG,CAAC,GAAG+tB,eAAe,CAAC/tB,MAAM,GAAG,CAAC,GAAGitB,WAAW;IAC/E;IACA,IAAII,SAAS,KAAKL,cAAc,CAACxsB,MAAM,EAAE;MACrCgrB,MAAM,GAAG4B,iBAAiB,CAACptB,MAAM,GAAGmtB,YAAY,CAACntB,MAAM,GAAG,CAAC,GAAG+tB,eAAe,CAAC/tB,MAAM,GAAG,CAAC,GAAGitB,WAAW;IAC1G;IACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;MACrC/B,MAAM,GAAG4B,iBAAiB,CAACptB,MAAM,GAAG,CAAC,GAAG+tB,eAAe,CAAC/tB,MAAM,GAAG,CAAC;IACtE;IACA,MAAMguB,eAAe,GAAGd,gBAAgB,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACpF,IAAIW,eAAe,GAAGZ,iBAAiB,CAACptB,MAAM,GAAG4tB,MAAM,CAACC,WAAW,EAAE;MACjErC,MAAM,IAAIwC,eAAe,GAAGZ,iBAAiB,CAACptB,MAAM,GAAG4tB,MAAM,CAACC,WAAW;IAC7E;IACA,OAAOrC,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOyC,4BAA4BA,CAACd,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;IAC5E,IAAI7B,MAAM,GAAGgC,kBAAkB,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IAC3E,IAAI7B,MAAM,GAAG4B,iBAAiB,CAACntB,KAAK,GAAG2tB,MAAM,CAACM,UAAU,EAAE;MACtD1C,MAAM,GAAGoC,MAAM,CAACM,UAAU,GAAGd,iBAAiB,CAACntB,KAAK;IACxD;IACA,OAAOurB,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAO2C,wBAAwBA,CAAChB,YAAY,EAAEC,iBAAiB,EAAEW,eAAe,EAAEV,SAAS,EAAE;IACzF,IAAI7B,MAAM;IACV,IAAI6B,SAAS,KAAKL,cAAc,CAACpqB,IAAI,EAAE;MACnC4oB,MAAM,GAAG2B,YAAY,CAACltB,KAAK,GAAG,CAAC,GAAG8tB,eAAe,CAAC9tB,KAAK,GAAG,CAAC,GAAGgtB,WAAW;IAC7E;IACA,IAAII,SAAS,KAAKL,cAAc,CAACnqB,KAAK,EAAE;MACpC2oB,MAAM,GAAG4B,iBAAiB,CAACntB,KAAK,GAAGktB,YAAY,CAACltB,KAAK,GAAG,CAAC,GAAG8tB,eAAe,CAAC9tB,KAAK,GAAG,CAAC,GAAGgtB,WAAW;IACvG;IACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;MACrC/B,MAAM,GAAG4B,iBAAiB,CAACntB,KAAK,GAAG,CAAC,GAAG8tB,eAAe,CAAC9tB,KAAK,GAAG,CAAC;IACpE;IACA,MAAM+tB,eAAe,GAAGR,kBAAkB,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACtF,IAAIW,eAAe,GAAGZ,iBAAiB,CAACntB,KAAK,GAAG2tB,MAAM,CAACM,UAAU,EAAE;MAC/D1C,MAAM,IAAIwC,eAAe,GAAGZ,iBAAiB,CAACntB,KAAK,GAAG2tB,MAAM,CAACM,UAAU;IAC3E;IACA,OAAO1C,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAO4C,UAAUA,CAACjB,YAAY,EAAEC,iBAAiB,EAAEiB,SAAS,EAAEC,OAAO,EAAE;IACnE,IAAIC,IAAI,GAAG,KAAK;IAChB,IAAIF,SAAS,KAAKrB,cAAc,CAACnqB,KAAK,EAAE;MACpC,IAAIsqB,YAAY,CAACM,IAAI,GAAGN,YAAY,CAACltB,KAAK,GAAGmtB,iBAAiB,CAACntB,KAAK,GAAGquB,OAAO,GAAGV,MAAM,CAACM,UAAU,EAAE;QAChGK,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAACpqB,IAAI,EAAE;MACnC,IAAIuqB,YAAY,CAACM,IAAI,GAAGL,iBAAiB,CAACntB,KAAK,GAAGquB,OAAO,GAAG,CAAC,EAAE;QAC3DC,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAAC3mB,GAAG,EAAE;MAClC,IAAI8mB,YAAY,CAACG,GAAG,GAAGF,iBAAiB,CAACptB,MAAM,GAAGsuB,OAAO,GAAG,CAAC,EAAE;QAC3DC,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAACxsB,MAAM,EAAE;MACrC,IAAI2sB,YAAY,CAACG,GAAG,GAAGH,YAAY,CAACntB,MAAM,GAAGotB,iBAAiB,CAACptB,MAAM,GAAGsuB,OAAO,GAAGV,MAAM,CAACC,WAAW,EAAE;QAClGU,IAAI,GAAG,IAAI;MACf;IACJ;IACA,OAAOA,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,aAAaA,CAACH,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEX,eAAe,EAAEV,SAAS,EAAE;IACzE,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIG,IAAI,GAAG,CAAC;IACZ,IAAIY,SAAS,KAAKrB,cAAc,CAACnqB,KAAK,EAAE;MACpC4qB,IAAI,GAAG,CAAC,CAAC;MACTH,GAAG,GAAGI,cAAc,CAACI,sBAAsB,CAACY,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC5F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACpqB,IAAI,EAAE;MACxC6qB,IAAI,GAAGgB,MAAM,CAACxuB,KAAK;MACnBqtB,GAAG,GAAGI,cAAc,CAACI,sBAAsB,CAACY,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC5F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAC3mB,GAAG,EAAE;MACvCinB,GAAG,GAAGmB,MAAM,CAACzuB,MAAM;MACnBytB,IAAI,GAAGC,cAAc,CAACS,wBAAwB,CAACO,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC/F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACxsB,MAAM,EAAE;MAC1C8sB,GAAG,GAAG,CAAC,CAAC;MACRG,IAAI,GAAGC,cAAc,CAACS,wBAAwB,CAACO,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC/F;IACA,OAAO;MAAEC,GAAG;MAAEG;IAAK,CAAC;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOkB,eAAeA,CAACN,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAEjB,SAAS,EAAE;IACnE,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIG,IAAI,GAAG,CAAC;IACZ,IAAIY,SAAS,KAAKrB,cAAc,CAACnqB,KAAK,EAAE;MACpC4qB,IAAI,GAAGiB,OAAO,CAACjB,IAAI,GAAGiB,OAAO,CAACzuB,KAAK,GAAGquB,OAAO;MAC7ChB,GAAG,GAAGI,cAAc,CAACC,0BAA0B,CAACe,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAC/E,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACpqB,IAAI,EAAE;MACxC6qB,IAAI,GAAGiB,OAAO,CAACjB,IAAI,GAAGgB,MAAM,CAACxuB,KAAK,GAAGquB,OAAO;MAC5ChB,GAAG,GAAGI,cAAc,CAACC,0BAA0B,CAACe,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAC/E,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAC3mB,GAAG,EAAE;MACvCinB,GAAG,GAAGoB,OAAO,CAACpB,GAAG,GAAGmB,MAAM,CAACzuB,MAAM,GAAGsuB,OAAO;MAC3Cb,IAAI,GAAGC,cAAc,CAACO,4BAA4B,CAACS,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAClF,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACxsB,MAAM,EAAE;MAC1C8sB,GAAG,GAAGoB,OAAO,CAACpB,GAAG,GAAGoB,OAAO,CAAC1uB,MAAM,GAAGsuB,OAAO;MAC5Cb,IAAI,GAAGC,cAAc,CAACO,4BAA4B,CAACS,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAClF;IACA,OAAO;MAAEC,GAAG;MAAEG;IAAK,CAAC;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOmB,kBAAkBA,CAACP,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAE;IAC3D,MAAMF,UAAU,GAAGV,cAAc,CAACU,UAAU,CAACM,OAAO,EAAED,MAAM,EAAEJ,SAAS,EAAEC,OAAO,CAAC;IACjF,IAAIF,UAAU,EAAE;MACZ,IAAIC,SAAS,KAAKrB,cAAc,CAACnqB,KAAK,EAAE;QACpC,OAAOmqB,cAAc,CAACpqB,IAAI;MAC9B,CAAC,MACI,IAAIyrB,SAAS,KAAKrB,cAAc,CAACpqB,IAAI,EAAE;QACxC,OAAOoqB,cAAc,CAACnqB,KAAK;MAC/B,CAAC,MACI,IAAIwrB,SAAS,KAAKrB,cAAc,CAAC3mB,GAAG,EAAE;QACvC,OAAO2mB,cAAc,CAACxsB,MAAM;MAChC,CAAC,MACI,IAAI6tB,SAAS,KAAKrB,cAAc,CAACxsB,MAAM,EAAE;QAC1C,OAAOwsB,cAAc,CAAC3mB,GAAG;MAC7B;IACJ;IACA,OAAOgoB,SAAS;EACpB;AACJ;AAEA,MAAMQ,uBAAuB,CAAC;EAC1BC,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IACvC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,IAAIC,GAAG,GAAG,4BAA4B;IACtCA,GAAG,IAAK,aAAY,IAAI,CAACd,SAAU,EAAC;IACpCc,GAAG,IAAK,SAAQ,IAAI,CAACppB,IAAK,EAAC;IAC3BopB,GAAG,IAAK,IAAG,IAAI,CAACC,QAAS,EAAC;IAC1B,OAAOD,GAAG;EACd;EACAE,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,IAAI,CAAC7wB,QAAQ,CAAC+zB,IAAI,CAAC,IAAI,CAAC,CAAC;EACxC;EACA/zB,QAAQA,CAAA,EAAG;IACP,IAAI,CAAChG,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAMM,SAAS,GAAG,IAAI,CAACR,OAAO,CAACS,aAAa;IAC5C,MAAMd,OAAO,GAAG,IAAI,CAACe,IAAI,CAACD,aAAa,CAACE,qBAAqB,CAAC,CAAC;IAC/D;IACA,IAAI,CAAChB,OAAO,CAAC1uB,MAAM,IAAI,CAAC0uB,OAAO,CAACzuB,KAAK,EACjC;IACJ,MAAMwuB,MAAM,GAAGc,SAAS,CAACG,qBAAqB,CAAC,CAAC;IAChD,IAAI,CAACC,SAAS,CAACjB,OAAO,EAAED,MAAM,CAAC;IAC/B,IAAI,CAACE,eAAe,CAACY,SAAS,EAAEb,OAAO,EAAED,MAAM,CAAC;IAChD,IAAI,IAAI,CAACmB,SAAS,EAAE;MAChB,IAAI,CAACpB,aAAa,CAACE,OAAO,EAAED,MAAM,CAAC;IACvC;IACA;IACArC,UAAU,CAAC,MAAM,IAAI,CAAC4C,QAAQ,CAACa,QAAQ,CAACN,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;EACrE;EACAZ,eAAeA,CAACY,SAAS,EAAEb,OAAO,EAAED,MAAM,EAAE;IACxC,MAAM;MAAEnB,GAAG;MAAEG;IAAK,CAAC,GAAGC,cAAc,CAACiB,eAAe,CAAC,IAAI,CAACN,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAE,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACjB,SAAS,CAAC;IACnH,IAAI,CAAC2B,QAAQ,CAACc,QAAQ,CAACP,SAAS,EAAE,KAAK,EAAG,GAAEjC,GAAI,IAAG,CAAC;IACpD,IAAI,CAAC0B,QAAQ,CAACc,QAAQ,CAACP,SAAS,EAAE,MAAM,EAAG,GAAE9B,IAAK,IAAG,CAAC;EAC1D;EACAe,aAAaA,CAACE,OAAO,EAAED,MAAM,EAAE;IAC3B,MAAMsB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACP,aAAa;IAC5C,MAAMzB,eAAe,GAAGgC,QAAQ,CAACL,qBAAqB,CAAC,CAAC;IACxD,MAAM;MAAEpC,GAAG;MAAEG;IAAK,CAAC,GAAGC,cAAc,CAACc,aAAa,CAAC,IAAI,CAACH,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEX,eAAe,EAAE,IAAI,CAACV,SAAS,CAAC;IACpH,IAAI,CAAC2B,QAAQ,CAACc,QAAQ,CAACC,QAAQ,EAAE,KAAK,EAAG,GAAEzC,GAAI,IAAG,CAAC;IACnD,IAAI,CAAC0B,QAAQ,CAACc,QAAQ,CAACC,QAAQ,EAAE,MAAM,EAAG,GAAEtC,IAAK,IAAG,CAAC;EACzD;EACAkC,SAASA,CAACjB,OAAO,EAAED,MAAM,EAAE;IACvB,IAAI,CAACJ,SAAS,GAAGX,cAAc,CAACkB,kBAAkB,CAAC,IAAI,CAACP,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAE,IAAI,CAACJ,OAAO,CAAC;EACrG;EACA0B,cAAcA,CAAA,EAAG;IACb,IAAI,CAACz0B,QAAQ,CAAC,CAAC;EACnB;AACJ;AACAszB,uBAAuB,CAACoB,IAAI,YAAAC,gCAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFtB,uBAAuB,EAAjCv6B,EAAE,CAAA87B,iBAAA,CAAiD97B,EAAE,CAAC+7B,UAAU,GAAhE/7B,EAAE,CAAA87B,iBAAA,CAA2E97B,EAAE,CAACg8B,SAAS,GAAzFh8B,EAAE,CAAA87B,iBAAA,CAAoG77B,WAAW;AAAA,CAA4C;AACvQs6B,uBAAuB,CAAC0B,IAAI,kBAD8Ej8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EACJ8oB,uBAAuB;EAAA4B,SAAA;EAAAC,SAAA,WAAAC,8BAAAx4B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MADrB7D,EAAE,CAAAs8B,WAAA,CAAA34B,GAAA;IAAA;IAAA,IAAAE,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAA23B,QAAA,GAAAc,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAC,QAAA;EAAAC,YAAA,WAAAC,qCAAAh5B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAyF,UAAA,oBAAAq3B,kDAAA;QAAA,OACJh5B,GAAA,CAAA43B,cAAA,CAAe,CAAC;MAAA,UADd17B,EAAE,CAAA+8B,eAAA;IAAA;IAAA,IAAAl5B,EAAA;MAAF7D,EAAE,CAAAg9B,UAAA,CAAAl5B,GAAA,CAAA82B,UAAA;IAAA;EAAA;EAAAqC,MAAA;IAAA9B,IAAA;IAAAG,SAAA;IAAA7pB,IAAA;IAAAsoB,SAAA;IAAAhB,SAAA;IAAAiB,OAAA;IAAAc,QAAA;IAAA91B,KAAA;IAAAN,QAAA;IAAAE,OAAA;EAAA;EAAAs4B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA24B,iCAAAx5B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,SAEpG,CAAC;MAFiGnE,EAAE,CAAA8E,SAAA,gBAGL,CAAC;MAHE9E,EAAE,CAAAmE,cAAA,YAI1E,CAAC;MAJuEnE,EAAE,CAAAoE,UAAA,IAAAF,uCAAA,iBAO9F,CAAC;MAP2FlE,EAAE,CAAAoE,UAAA,IAAAS,uCAAA,iBAQrD,CAAC;MARkD7E,EAAE,CAAAqE,YAAA,CASjG,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAR,EAAA;MAT8F7D,EAAE,CAAAwE,SAAA,EAGd,CAAC;MAHWxE,EAAE,CAAAs9B,sBAAA,4BAAAx5B,GAAA,CAAAi2B,SAAA,IAGd,CAAC;MAHW/5B,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAw3B,SAGlE,CAAC;MAH+Dt7B,EAAE,CAAAwE,SAAA,EAKlF,CAAC;MAL+ExE,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAAkB,KAKlF,CAAC;MAL+EhF,EAAE,CAAAwE,SAAA,EAQnF,CAAC;MARgFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAkB,KAQnF,CAAC;IAAA;EAAA;EAAAu4B,YAAA,GAG44Fv8B,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACy8B,gBAAgB;EAAAC,MAAA;EAAAC,aAAA;AAAA,EAAyI;AACnpGv8B,UAAU,CAAC,CACP22B,YAAY,CAAC,GAAG,CAAC,CACpB,EAAEwC,uBAAuB,CAACqD,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAC7D;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAf0G79B,EAAE,CAAA89B,iBAAA,CAejBvD,uBAAuB,EAAc,CAAC;IACrH9oB,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,qBAAqB;MAAEr5B,QAAQ,EAAG;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEi5B,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3FAAg3F;IAAE,CAAC;EACh6F,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjsB,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,EAAE;MAAEtqB,IAAI,EAAEzR,EAAE,CAACg8B;IAAU,CAAC,EAAE;MAAEvqB,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC/GxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEk7B,IAAI,EAAE,CAAC;MACnC1pB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEi7B,SAAS,EAAE,CAAC;MACZ7pB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoR,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE05B,SAAS,EAAE,CAAC;MACZtoB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE04B,SAAS,EAAE,CAAC;MACZtnB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE25B,OAAO,EAAE,CAAC;MACVvoB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEy6B,QAAQ,EAAE,CAAC;MACXrpB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2E,KAAK,EAAE,CAAC;MACRyM,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqE,QAAQ,EAAE,CAAC;MACX+M,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuE,OAAO,EAAE,CAAC;MACV6M,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEo7B,QAAQ,EAAE,CAAC;MACXhqB,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC,CAAC;IAAE2D,UAAU,EAAE,CAAC;MACbnpB,IAAI,EAAElR,WAAW;MACjB02B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEyE,cAAc,EAAE,CAAC;MACjBjqB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMiH,yBAAyB,CAAC;EAC5B1D,WAAWA,CAAC2D,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC/B;EACAC,SAASA,CAAC9sB,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;IACxB,OAAO,IAAI,CAAC4sB,UAAU,CAAC/F,GAAG,CAAC7mB,IAAI,CAAC;EACpC;EACA+sB,MAAMA,CAACC,QAAQ,EAAE;IACb,OAAO,IAAI,CAACC,YAAY,CAAC,IAAI,CAACjtB,IAAI,EAAEgtB,QAAQ,CAAC;EACjD;EACAC,YAAYA,CAACjtB,IAAI,EAAEgtB,QAAQ,EAAE;IACzBA,QAAQ,GAAG,IAAI,CAACE,cAAc,CAACF,QAAQ,CAAC;IACxC,MAAMG,SAAS,GAAG,IAAI,CAACC,eAAe,CAACptB,IAAI,EAAEgtB,QAAQ,CAAC;IACtD,IAAI,CAACK,QAAQ,CAACrtB,IAAI,EAAEmtB,SAAS,CAAC;IAC9B,OAAOA,SAAS;EACpB;EACAG,OAAOA,CAACC,QAAQ,EAAE;IACd,MAAMC,WAAW,GAAG,IAAI,CAACZ,UAAU,CAAC/F,GAAG,CAAC0G,QAAQ,CAACE,aAAa,CAAC;IAC/D,IAAID,WAAW,IAAIA,WAAW,CAACnyB,MAAM,EAAE;MACnC,MAAMqyB,GAAG,GAAGF,WAAW,CAACG,OAAO,CAACJ,QAAQ,CAAC;MACzC,IAAIG,GAAG,GAAG,CAAC,CAAC,EAAE;QACV,MAAMP,SAAS,GAAGK,WAAW,CAACE,GAAG,CAAC;QAClCP,SAAS,CAACG,OAAO,CAAC,CAAC;QACnBE,WAAW,CAACI,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;MAC9B;IACJ;EACJ;EACAG,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC9tB,IAAI,CAAC;EACjC;EACA8tB,aAAaA,CAAC9tB,IAAI,EAAE;IAChB,MAAM+tB,KAAK,GAAG,IAAI,CAACnB,UAAU,CAAC/F,GAAG,CAAC7mB,IAAI,CAAC;IACvC,IAAI+tB,KAAK,IAAIA,KAAK,CAAC1yB,MAAM,EAAE;MACvB,IAAI2yB,CAAC,GAAGD,KAAK,CAAC1yB,MAAM,GAAG,CAAC;MACxB,OAAO2yB,CAAC,IAAI,CAAC,EAAE;QACX,IAAI,CAACV,OAAO,CAACS,KAAK,CAACC,CAAC,EAAE,CAAC,CAAC;MAC5B;IACJ;EACJ;EACAZ,eAAeA,CAACptB,IAAI,EAAEgtB,QAAQ,EAAE;IAC5B,OAAO,IAAI,CAACN,gBAAgB,CAACuB,eAAe,CAACjuB,IAAI,EAAEgtB,QAAQ,CAAC;EAChE;EACAE,cAAcA,CAACF,QAAQ,EAAE;IACrB,MAAMxB,MAAM,GAAG;MAAE,GAAG,IAAI,CAACmB,QAAQ,CAACnB;IAAO,CAAC;IAC1C,MAAM0C,OAAO,GAAG;MAAE,GAAG,IAAI,CAACvB,QAAQ,CAACuB;IAAQ,CAAC;IAC5C,IAAI,CAAClB,QAAQ,CAACxB,MAAM,IAAI,CAACwB,QAAQ,CAACkB,OAAO,EAAE;MACvClB,QAAQ,GAAG;QAAExB,MAAM,EAAEwB;MAAS,CAAC;IACnC;IACA,IAAIxB,MAAM,EAAE;MACRwB,QAAQ,CAACxB,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAE,GAAGwB,QAAQ,CAACxB;MAAO,CAAC;IACvD;IACA,IAAI0C,OAAO,EAAE;MACTlB,QAAQ,CAACkB,OAAO,GAAG;QAAE,GAAGA,OAAO;QAAE,GAAGlB,QAAQ,CAACkB;MAAQ,CAAC;IAC1D;IACA,OAAOlB,QAAQ;EACnB;EACAK,QAAQA,CAACrtB,IAAI,EAAEmtB,SAAS,EAAE;IACtB,IAAI,CAAC,IAAI,CAACP,UAAU,CAACuB,GAAG,CAACnuB,IAAI,CAAC,EAAE;MAC5B,IAAI,CAAC4sB,UAAU,CAACwB,GAAG,CAACpuB,IAAI,EAAE,EAAE,CAAC;IACjC;IACA,MAAMquB,KAAK,GAAG,IAAI,CAACzB,UAAU,CAAC/F,GAAG,CAAC7mB,IAAI,CAAC;IACvCquB,KAAK,CAACC,IAAI,CAACnB,SAAS,CAAC;EACzB;AACJ;AAEA,SAASoB,kBAAkBA,CAACttB,CAAC,EAAE;EAC3B,OAAOA,CAAC,CAAC+nB,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwF,gBAAgB,CAAC;EACnBzF,WAAWA,CAAC0F,cAAc,EAAEC,wBAAwB,EAAEC,QAAQ,EAAE;IAC5D,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,OAAOC,0BAA0BA,CAACC,SAAS,EAAE;IACzCL,gBAAgB,CAACM,uBAAuB,GAAGD,SAAS;EACxD;EACA;AACJ;AACA;AACA;AACA;EACIE,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACC,UAAU,EACf,OAAO,IAAI,CAACA,UAAU;IAC1B,IAAIR,gBAAgB,CAACM,uBAAuB,EACxC,OAAON,gBAAgB,CAACM,uBAAuB;IACnD,IAAI,IAAI,CAACL,cAAc,CAAC7B,UAAU,CAACvxB,MAAM,EACrC,OAAO,IAAI,CAACozB,cAAc,CAAC7B,UAAU,CAAC,CAAC,CAAC;IAC5C,MAAM,IAAIqC,KAAK,CAAC,wHAAwH,CAAC;EAC7I;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoBA,CAACL,SAAS,EAAE;IAC5B,IAAI,CAACG,UAAU,GAAGH,SAAS;EAC/B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIM,oBAAoBA,CAAChC,SAAS,EAAE;IAC5B,IAAIoB,kBAAkB,CAACpB,SAAS,CAAC,EAAE;MAC/B,OAAOA,SAAS,CAACnE,OAAO,CAACS,aAAa;IAC1C;IACA,IAAI0D,SAAS,CAACiC,QAAQ,IAAIjC,SAAS,CAACiC,QAAQ,CAACC,SAAS,CAACh0B,MAAM,GAAG,CAAC,EAAE;MAC/D,OAAO8xB,SAAS,CAACiC,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC;IAC1C;IACA;IACA,OAAOlC,SAAS,CAACmC,QAAQ,CAAC7F,aAAa;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACI8F,wBAAwBA,CAACpC,SAAS,EAAE;IAChC,OAAO,IAAI,CAACgC,oBAAoB,CAAChC,SAAS,CAAC;EAC/C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIqC,wBAAwBA,CAACrC,SAAS,EAAEH,QAAQ,EAAE;IAC1C,IAAIA,QAAQ,EAAE;MACV,IAAIA,QAAQ,CAACxB,MAAM,KAAK9qB,SAAS,EAAE;QAC/B,MAAM+uB,WAAW,GAAG1I,MAAM,CAAC2I,mBAAmB,CAAC1C,QAAQ,CAACxB,MAAM,CAAC;QAC/D,KAAK,MAAMmE,WAAW,IAAIF,WAAW,EAAE;UACnCtC,SAAS,CAACI,QAAQ,CAACoC,WAAW,CAAC,GAAG3C,QAAQ,CAACxB,MAAM,CAACmE,WAAW,CAAC;QAClE;MACJ;MACA,IAAI3C,QAAQ,CAACkB,OAAO,KAAKxtB,SAAS,EAAE;QAChC,MAAMkvB,SAAS,GAAG7I,MAAM,CAAC2I,mBAAmB,CAAC1C,QAAQ,CAACkB,OAAO,CAAC;QAC9D,KAAK,MAAM2B,SAAS,IAAID,SAAS,EAAE;UAC/BzC,SAAS,CAACI,QAAQ,CAACsC,SAAS,CAAC,GAAG7C,QAAQ,CAACkB,OAAO,CAAC2B,SAAS,CAAC;QAC/D;MACJ;IACJ;IACA,OAAO1C,SAAS;EACpB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIc,eAAeA,CAAC6B,cAAc,EAAE9C,QAAQ,GAAG,CAAC,CAAC,EAAEsC,QAAQ,EAAE;IACrD,IAAI,CAACA,QAAQ,EACTA,QAAQ,GAAG,IAAI,CAACP,oBAAoB,CAAC,CAAC;IAC1C,MAAMgB,cAAc,GAAG,IAAI,CAACZ,oBAAoB,CAACG,QAAQ,CAAC;IAC1D,MAAMU,UAAU,GAAG,IAAIpgC,eAAe,CAACmgC,cAAc,EAAE,IAAI,CAACrB,wBAAwB,EAAE,IAAI,CAACD,cAAc,EAAE,IAAI,CAACE,QAAQ,CAAC;IACzH,MAAMsB,MAAM,GAAG,IAAIpgC,eAAe,CAACigC,cAAc,CAAC;IAClD,MAAMI,YAAY,GAAGF,UAAU,CAACG,MAAM,CAACF,MAAM,CAAC;IAC9C,IAAI,CAACT,wBAAwB,CAACU,YAAY,EAAElD,QAAQ,CAAC;IACrD,OAAOkD,YAAY;EACvB;AACJ;AACA1B,gBAAgB,CAACM,uBAAuB,GAAG,IAAI;AAC/CN,gBAAgB,CAACtE,IAAI,YAAAkG,yBAAAhG,CAAA;EAAA,YAAAA,CAAA,IAAwFoE,gBAAgB,EA1PnBjgC,EAAE,CAAA8hC,QAAA,CA0PmC9hC,EAAE,CAAC+hC,cAAc,GA1PtD/hC,EAAE,CAAA8hC,QAAA,CA0PiE9hC,EAAE,CAACgiC,wBAAwB,GA1P9FhiC,EAAE,CAAA8hC,QAAA,CA0PyG9hC,EAAE,CAACiiC,QAAQ;AAAA,CAA6C;AAC7QhC,gBAAgB,CAACiC,KAAK,kBA3PoFliC,EAAE,CAAAmiC,kBAAA;EAAAC,KAAA,EA2PKnC,gBAAgB;EAAAoC,OAAA,EAAhBpC,gBAAgB,CAAAtE;AAAA,EAAG;AACpI;EAAA,QAAAkC,SAAA,oBAAAA,SAAA,KA5P0G79B,EAAE,CAAA89B,iBAAA,CA4PjBmC,gBAAgB,EAAc,CAAC;IAC9GxuB,IAAI,EAAEhR;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEgR,IAAI,EAAEzR,EAAE,CAAC+hC;IAAe,CAAC,EAAE;MAAEtwB,IAAI,EAAEzR,EAAE,CAACgiC;IAAyB,CAAC,EAAE;MAAEvwB,IAAI,EAAEzR,EAAE,CAACiiC;IAAS,CAAC,CAAC;EAAE,CAAC;AAAA;AAE/I,MAAMK,cAAc,SAASpE,yBAAyB,CAAC;EACnD1D,WAAWA,CAAC2D,gBAAgB,EAAE;IAC1B,KAAK,CAACA,gBAAgB,CAAC;IACvB,IAAI,CAAC1sB,IAAI,GAAG8oB,uBAAuB;EACvC;AACJ;AACA+H,cAAc,CAAC3G,IAAI,YAAA4G,uBAAA1G,CAAA;EAAA,YAAAA,CAAA,IAAwFyG,cAAc,EAtQftiC,EAAE,CAAA8hC,QAAA,CAsQ+B7B,gBAAgB;AAAA,CAA6C;AACxMqC,cAAc,CAACJ,KAAK,kBAvQsFliC,EAAE,CAAAmiC,kBAAA;EAAAC,KAAA,EAuQGE,cAAc;EAAAD,OAAA,EAAdC,cAAc,CAAA3G;AAAA,EAAG;AAChI;EAAA,QAAAkC,SAAA,oBAAAA,SAAA,KAxQ0G79B,EAAE,CAAA89B,iBAAA,CAwQjBwE,cAAc,EAAc,CAAC;IAC5G7wB,IAAI,EAAEhR;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEgR,IAAI,EAAEwuB;IAAiB,CAAC,CAAC;EAAE,CAAC;AAAA;AAEhF,IAAI/4B,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;EACjCA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;AACrC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAIs7B,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,aAAa,CAAC,GAAG,aAAa;EACzCA,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACnC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;EAC1BA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC9BA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;AACtC,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,MAAMC,oBAAoB,CAAC;EACvBlI,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmI,UAAU,GAAG,KAAK;EAC3B;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB,MAAMC,cAAc,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC17B,MAAM,CAACzE,KAAK,CAAC,CAAC,EAAE,IAAI,CAACyE,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;IACrF,MAAM47B,SAAS,GAAG,IAAI,CAACL,UAAU,GAAG,OAAO,GAAG,QAAQ;IACtD,IAAI,CAAC9rB,QAAQ,GAAI,sBAAqBmsB,SAAU,KAAIF,cAAe,GAAE;EACzE;EACA;AACJ;AACA;AACA;AACA;EACIC,cAAcA,CAAC17B,MAAM,EAAE47B,MAAM,EAAE;IAC3B;IACAA,MAAM,CAAClD,IAAI,CAAC,CAAC,CAAC;IACd,MAAMmD,KAAK,GAAG,EAAE;IAChB77B,MAAM,CAAC87B,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,CAAC,EAAE5D,CAAC,KAAK;MAC/ByD,KAAK,CAACnD,IAAI,CAAE,GAAEsD,CAAE,IAAGC,IAAI,CAACC,KAAK,CAACN,MAAM,CAACxD,CAAC,CAAC,GAAG,GAAG,CAAE,GAAE,CAAC;IACtD,CAAC,CAAC;IACF,OAAOyD,KAAK,CAACM,IAAI,CAAC,IAAI,CAAC;EAC3B;AACJ;AACAd,oBAAoB,CAAC/G,IAAI,YAAA8H,6BAAA5H,CAAA;EAAA,YAAAA,CAAA,IAAwF6G,oBAAoB;AAAA,CAAmD;AACxLA,oBAAoB,CAACzG,IAAI,kBAxTiFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAwTPixB,oBAAoB;EAAAvG,SAAA;EAAAc,MAAA;IAAAyG,UAAA;IAAAr8B,MAAA;IAAAqE,MAAA;IAAAC,KAAA;IAAAg3B,UAAA;EAAA;EAAAgB,QAAA,GAxTf3jC,EAAE,CAAA4jC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAm/B,8BAAAhgC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,YA8TxG,CAAC,YAAD,CAAC,UAAD,CAAC;MA9TqGnE,EAAE,CAAAmF,MAAA,EAgU3D,CAAC;MAhUwDnF,EAAE,CAAAqE,YAAA,CAgUpD,CAAC,CAAD,CAAC;MAhUiDrE,EAAE,CAAA8E,SAAA,YAkUpC,CAAC;MAlUiC9E,EAAE,CAAAmE,cAAA,YAmUvE,CAAC,UAAD,CAAC;MAnUoEnE,EAAE,CAAAmF,MAAA,EAoU3D,CAAC;MApUwDnF,EAAE,CAAAqE,YAAA,CAoUpD,CAAC,CAAD,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAR,EAAA;MApUiD7D,EAAE,CAAAqN,WAAA,WAAAvJ,GAAA,CAAA6+B,UAAA,GAAAxwB,SAAA,GAAArO,GAAA,CAAA4H,MAAA,MA4TpD,CAAC,UAAA5H,GAAA,CAAA6H,KAAA,MAAD,CAAC;MA5TiD3L,EAAE,CAAA0R,WAAA,sBAAA5N,GAAA,CAAA6+B,UA2TjE,CAAC;MA3T8D3iC,EAAE,CAAAwE,SAAA,EAgU3D,CAAC;MAhUwDxE,EAAE,CAAAqF,iBAAA,CAAAvB,GAAA,CAAA4/B,UAAA,IAAArvB,cAAA,EAgU3D,CAAC;MAhUwDrU,EAAE,CAAAwE,SAAA,EAkU3C,CAAC;MAlUwCxE,EAAE,CAAAqN,WAAA,eAAAvJ,GAAA,CAAA+S,QAkU3C,CAAC;MAlUwC7W,EAAE,CAAAwE,SAAA,EAoU3D,CAAC;MApUwDxE,EAAE,CAAAqF,iBAAA,CAAAvB,GAAA,CAAA4/B,UAAA,IAAArvB,cAAA,EAoU3D,CAAC;IAAA;EAAA;EAAAqpB,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAGwhB;AAC1kB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAxU0G79B,EAAE,CAAA89B,iBAAA,CAwUjB4E,oBAAoB,EAAc,CAAC;IAClHjxB,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,yBAAyB;MAAEr5B,QAAQ,EAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEi5B,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAE8F,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAErG,MAAM,EAAE,CAAC,0cAA0c;IAAE,CAAC;EAC3iB,CAAC,CAAC,QAAkB;IAAEgG,UAAU,EAAE,CAAC;MAC3BjyB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsL,KAAK,EAAE,CAAC;MACR8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsiC,UAAU,EAAE,CAAC;MACblxB,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA,SAAS2jC,WAAWA,CAACv9B,KAAK,EAAE;EACxB,IAAIA,KAAK,YAAY8wB,IAAI,EAAE;IACvB9wB,KAAK,GAAGA,KAAK,CAACw9B,kBAAkB,CAAC,CAAC;EACtC,CAAC,MACI;IACDx9B,KAAK,GAAGA,KAAK,CAAC4N,cAAc,CAAC,CAAC;EAClC;EACA,OAAO5N,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAASy9B,WAAWA,CAACz9B,KAAK,EAAE;EACxB,OAAOA,KAAK,CAAC4N,cAAc,CAAC,CAAC,CAAC8vB,OAAO,CAAC,WAAW,EAAEC,KAAK,IAAI;IACxD,OAAO;MACH,GAAG,EAAE,OAAO;MACZ;MACA,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,MAAM;MACX,GAAG,EAAE;IACT,CAAC,CAACA,KAAK,CAAC;EACZ,CAAC,CAAC;AACN;AAEA,MAAMC,oBAAoB,CAAC;EACvB7J,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC5zB,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC/E,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACwF,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC2jC,MAAM,GAAG,IAAI3jC,YAAY,CAAC,CAAC;EACpC;EACA,IAAI4jC,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAAC79B,cAAc,IAAI,SAAS;EAC3C;EACA89B,YAAYA,CAAA,EAAG;IACX,IAAI,CAACr+B,QAAQ,CAACH,IAAI,CAAC;MAAE8I,IAAI,EAAE,IAAI,CAACrI;IAAM,CAAC,CAAC;EAC5C;EACAg+B,YAAYA,CAAA,EAAG;IACX,IAAI,CAACn+B,UAAU,CAACN,IAAI,CAAC;MAAE8I,IAAI,EAAE,IAAI,CAACrI;IAAM,CAAC,CAAC;EAC9C;AACJ;AACA49B,oBAAoB,CAAC1I,IAAI,YAAA+I,6BAAA7I,CAAA;EAAA,YAAAA,CAAA,IAAwFwI,oBAAoB;AAAA,CAAmD;AACxLA,oBAAoB,CAACpI,IAAI,kBA1ZiFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA0ZP4yB,oBAAoB;EAAAlI,SAAA;EAAAS,YAAA,WAAA+H,kCAAA9gC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA1Zf7D,EAAE,CAAAyF,UAAA,wBAAAm/B,mDAAA;QAAA,OA0ZP9gC,GAAA,CAAA0gC,YAAA,CAAa,CAAC;MAAA,0BAAAK,mDAAA;QAAA,OAAd/gC,GAAA,CAAA2gC,YAAA,CAAa,CAAC;MAAA;IAAA;EAAA;EAAAxH,MAAA;IAAAt2B,KAAA;IAAAF,KAAA;IAAAC,cAAA;IAAAE,QAAA;EAAA;EAAA+4B,OAAA;IAAA99B,MAAA;IAAAsE,QAAA;IAAAG,UAAA;IAAAg+B,MAAA;EAAA;EAAApH,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAogC,8BAAAjhC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA1ZT7D,EAAE,CAAAmE,cAAA,aA2ZI,CAAC;MA3ZPnE,EAAE,CAAAyF,UAAA,mBAAAs/B,oDAAA;QAAA,OA2ZxBjhC,GAAA,CAAAjC,MAAA,CAAAmE,IAAA,CAAAlC,GAAA,CAAA4C,cAA0B,CAAC;MAAA,EAAC;MA3ZN1G,EAAE,CAAAmE,cAAA,aA4ZC,CAAC;MA5ZJnE,EAAE,CAAAyF,UAAA,mBAAAu/B,oDAAA;QAAA,OA4Z3BlhC,GAAA,CAAAwgC,MAAA,CAAAt+B,IAAA,CAAAlC,GAAA,CAAA4C,cAA0B,CAAC;MAAA,EAAC;MA5ZH1G,EAAE,CAAAqE,YAAA,CA4ZS,CAAC;MA5ZZrE,EAAE,CAAAmE,cAAA,aA6ZvE,CAAC;MA7ZoEnE,EAAE,CAAAmF,MAAA,EA+ZvG,CAAC;MA/ZoGnF,EAAE,CAAAqE,YAAA,CA+ZhG,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAR,EAAA;MA/Z6F7D,EAAE,CAAA0R,WAAA,WAAA5N,GAAA,CAAA8C,QA2ZnC,CAAC;MA3ZgC5G,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAA4C,cA2Z3E,CAAC;MA3ZwE1G,EAAE,CAAAwE,SAAA,EA4ZtC,CAAC;MA5ZmCxE,EAAE,CAAAqN,WAAA,qBAAAvJ,GAAA,CAAA6C,KA4ZtC,CAAC;MA5ZmC3G,EAAE,CAAAwE,SAAA,EA+ZvG,CAAC;MA/ZoGxE,EAAE,CAAA6I,kBAAA,MAAA/E,GAAA,CAAAygC,YAAA,KA+ZvG,CAAC;IAAA;EAAA;EAAA5G,aAAA;EAAAmG,eAAA;AAAA,EAEoE;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAla0G79B,EAAE,CAAA89B,iBAAA,CAkajBuG,oBAAoB,EAAc,CAAC;IAClH5yB,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,yBAAyB;MACnCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEp9B,KAAK,EAAE,CAAC;MACtB8K,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoG,KAAK,EAAE,CAAC;MACRgL,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqG,cAAc,EAAE,CAAC;MACjB+K,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuG,QAAQ,EAAE,CAAC;MACX6K,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEuF,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACbmL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0jC,MAAM,EAAE,CAAC;MACT7yB,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE4jC,YAAY,EAAE,CAAC;MACf/yB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfhzB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMgO,eAAe,CAAC;EAClBzK,WAAWA,CAAC0K,EAAE,EAAE;IACZ,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACvC,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC58B,UAAU,GAAG,IAAIpF,YAAY,CAAC,CAAC;IACpC,IAAI,CAACwkC,aAAa,GAAG,IAAIxkC,YAAY,CAAC,CAAC;IACvC,IAAI,CAACykC,eAAe,GAAG,IAAIzkC,YAAY,CAAC,CAAC;IACzC,IAAI,CAAC0kC,aAAa,GAAG,EAAE;EAC3B;EACAzC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACJ,EAAE,CAACK,YAAY,CAAC,CAAC;IACtB,IAAI,CAACF,aAAa,GAAG,IAAI,CAACG,gBAAgB,CAAC,CAAC;EAChD;EACAA,gBAAgBA,CAAA,EAAG;IACf,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMh/B,KAAK,IAAI,IAAI,CAACqK,IAAI,EAAE;MAC3B,MAAMpK,cAAc,GAAGs9B,WAAW,CAACv9B,KAAK,CAAC;MACzC,MAAM04B,GAAG,GAAGsG,KAAK,CAACC,SAAS,CAACjG,CAAC,IAAI;QAC7B,OAAOA,CAAC,CAACh5B,KAAK,KAAKC,cAAc;MACrC,CAAC,CAAC;MACF,IAAIy4B,GAAG,KAAK,CAAC,CAAC,EAAE;QACZsG,KAAK,CAAC1F,IAAI,CAAC;UACPt5B,KAAK;UACLC,cAAc;UACdC,KAAK,EAAE,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC9kB,KAAK;QACrC,CAAC,CAAC;MACN;IACJ;IACA,OAAOg/B,KAAK;EAChB;EACA7+B,QAAQA,CAAC++B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAAC19B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAM29B,IAAI,GAAG,IAAI,CAAC39B,aAAa,CAAC49B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAACl/B,KAAK,KAAKq/B,CAAC,CAACh3B,IAAI;IACjC,CAAC,CAAC;IACF,OAAO82B,IAAI,KAAKzzB,SAAS;EAC7B;EACAhM,QAAQA,CAACy/B,IAAI,EAAE;IACX,IAAI,CAACT,aAAa,CAACn/B,IAAI,CAAC4/B,IAAI,CAAC;EACjC;EACAt/B,UAAUA,CAACs/B,IAAI,EAAE;IACb,IAAI,CAACR,eAAe,CAACp/B,IAAI,CAAC4/B,IAAI,CAAC;EACnC;EACAzsB,OAAOA,CAACxQ,KAAK,EAAEi9B,IAAI,EAAE;IACjB,OAAOA,IAAI,CAACn/B,KAAK;EACrB;AACJ;AACAw+B,eAAe,CAACtJ,IAAI,YAAAoK,wBAAAlK,CAAA;EAAA,YAAAA,CAAA,IAAwFoJ,eAAe,EA3fjBjlC,EAAE,CAAA87B,iBAAA,CA2fiC97B,EAAE,CAACgmC,iBAAiB;AAAA,CAA4C;AAC7Mf,eAAe,CAAChJ,IAAI,kBA5fsFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA4fZwzB,eAAe;EAAA9I,SAAA;EAAAc,MAAA;IAAAnsB,IAAA;IAAA9L,KAAA;IAAAqC,MAAA;IAAAqE,MAAA;IAAAC,KAAA;IAAA1D,aAAA;IAAA06B,UAAA;EAAA;EAAAhD,OAAA;IAAA55B,UAAA;IAAAo/B,aAAA;IAAAC,eAAA;EAAA;EAAAzB,QAAA,GA5fL3jC,EAAE,CAAA4jC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAuhC,yBAAApiC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,SA6f3E,CAAC;MA7fwEnE,EAAE,CAAAoE,UAAA,IAAAc,iCAAA,mBAggB9F,CAAC;MAhgB2FlF,EAAE,CAAAmE,cAAA,YAigB9E,CAAC,WAAD,CAAC;MAjgB2EnE,EAAE,CAAAoE,UAAA,IAAAkB,6BAAA,eA8gB9F,CAAC;MA9gB2FtF,EAAE,CAAAqE,YAAA,CA+gBhG,CAAC,CAAD,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAR,EAAA;MA/gB6F7D,EAAE,CAAAqN,WAAA,UAAAvJ,GAAA,CAAA6H,KAAA,MA6f5E,CAAC;MA7fyE3L,EAAE,CAAAwE,SAAA,EA8flD,CAAC;MA9f+CxE,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAAkB,KAAA,kBAAAlB,GAAA,CAAAkB,KAAA,CAAA8H,MAAA,KA8flD,CAAC;MA9f+C9M,EAAE,CAAAwE,SAAA,EAkgBD,CAAC;MAlgBFxE,EAAE,CAAAqN,WAAA,eAAAvJ,GAAA,CAAA4H,MAAA,WAkgBD,CAAC;MAlgBF1L,EAAE,CAAA0R,WAAA,sBAAA5N,GAAA,CAAA6+B,UAkgBrC,CAAC;MAlgBkC3iC,EAAE,CAAAwE,SAAA,EAmgB3D,CAAC;MAngBwDxE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAuhC,aAmgB3D,CAAC,iBAAAvhC,GAAA,CAAAqV,OAAD,CAAC;IAAA;EAAA;EAAAokB,YAAA,GAekuC8G,oBAAoB,EAAkLrjC,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACklC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AAC7uD;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAnhB0G79B,EAAE,CAAA89B,iBAAA,CAmhBjBmH,eAAe,EAAc,CAAC;IAC7GxzB,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,mBAAmB;MAAEr5B,QAAQ,EAAG;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEi5B,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAE8F,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAErG,MAAM,EAAE,CAAC,8tCAA8tC;IAAE,CAAC;EAC/zC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjsB,IAAI,EAAEzR,EAAE,CAACgmC;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEl1B,IAAI,EAAE,CAAC;MAC/FW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2E,KAAK,EAAE,CAAC;MACRyM,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsL,KAAK,EAAE,CAAC;MACR8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4H,aAAa,EAAE,CAAC;MAChBwJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsiC,UAAU,EAAE,CAAC;MACblxB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACb0L,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEukC,aAAa,EAAE,CAAC;MAChB1zB,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEwkC,eAAe,EAAE,CAAC;MAClB3zB,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMulC,cAAc,CAAC;EACjB3L,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4L,UAAU,GAAG,KAAK;IACvB,IAAI,CAACtxB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACnN,gBAAgB,GAAG,IAAIhH,YAAY,CAAC,CAAC;IAC1C,IAAI,CAACmH,mBAAmB,GAAG,IAAInH,YAAY,CAAC,CAAC;IAC7C,IAAI,CAACqH,qBAAqB,GAAG,IAAIrH,YAAY,CAAC,CAAC;IAC/C,IAAI,CAACuG,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACs7B,UAAU,GAAGA,UAAU;EAChC;EACAI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAIe,aAAa,GAAG,CAAC;IACrB,IAAI,IAAI,CAACD,UAAU,EAAE;MACjB,IAAI,CAACE,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAACv/B,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,QAAQ,KAAKC,cAAc,CAACqH,KAAK,EAAE;QAC7E,IAAI,IAAI,CAAC+3B,UAAU,KAAK9D,UAAU,CAACgE,WAAW,EAAE;UAC5CH,aAAa,GAAG,CAAC;QACrB,CAAC,MACI;UACDA,aAAa,GAAG,CAAC;QACrB;MACJ;IACJ;IACA,MAAMI,YAAY,GAAG,EAAE,GAAGJ,aAAa;IACvC,IAAI,CAACK,UAAU,GAAGpD,IAAI,CAACqD,KAAK,CAAE,IAAI,CAACr/B,IAAI,CAAC,CAAC,CAAC,GAAGm/B,YAAY,GAAI,IAAI,CAAC;IAClE,IAAI,CAACl/B,WAAW,GACZ,CAAC,IAAI,CAACP,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,QAAQ,KAAKC,cAAc,CAACqH,KAAK,GACrE+0B,IAAI,CAACqD,KAAK,CAAE,IAAI,CAACr/B,IAAI,CAAC,CAAC,CAAC,GAAG++B,aAAa,GAAI,IAAI,CAAC,GACjD,IAAI,CAACK,UAAU;EAC7B;EACAH,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACv/B,aAAa,CAAC4P,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,GAAGpE,UAAU,CAACgE,WAAW,GAAGhE,UAAU,CAACqE,MAAM;EACzG;AACJ;AACAV,cAAc,CAACxK,IAAI,YAAAmL,uBAAAjL,CAAA;EAAA,YAAAA,CAAA,IAAwFsK,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAAClK,IAAI,kBAxmBuFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAwmBb00B,cAAc;EAAAhK,SAAA;EAAAc,MAAA;IAAA31B,IAAA;IAAA8+B,UAAA;IAAAp/B,aAAA;IAAAs/B,UAAA;IAAAr+B,aAAA;IAAA6M,UAAA;EAAA;EAAA6qB,OAAA;IAAAh4B,gBAAA;IAAAG,mBAAA;IAAAE,qBAAA;EAAA;EAAA27B,QAAA,GAxmBH3jC,EAAE,CAAA+mC,kBAAA,CAwmBmW,CAACzE,cAAc,CAAC,GAxmBrXtiC,EAAE,CAAA4jC,oBAAA;EAAAoD,kBAAA,EAAA9+B,GAAA;EAAAg1B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAuiC,wBAAApjC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAknC,eAAA;MAAFlnC,EAAE,CAAAmE,cAAA,YAymBpB,CAAC;MAzmBiBnE,EAAE,CAAA8G,cAAA,CA0mB7B,CAAC;MA1mB0B9G,EAAE,CAAAmE,cAAA,YA0mB7B,CAAC;MA1mB0BnE,EAAE,CAAAmnC,YAAA,EA2mB5E,CAAC;MA3mByEnnC,EAAE,CAAAqE,YAAA,CA4mBjG,CAAC;MA5mB8FrE,EAAE,CAAAoE,UAAA,IAAAyC,iDAAA,oCAsnB7E,CAAC;MAtnB0E7G,EAAE,CAAAoE,UAAA,IAAAoD,2CAAA,8BAqoBnF,CAAC;MAroBgFxH,EAAE,CAAAqE,YAAA,CAsoBnG,CAAC;IAAA;IAAA,IAAAR,EAAA;MAtoBgG7D,EAAE,CAAAqN,WAAA,UAAAvJ,GAAA,CAAAwD,IAAA,SAymBjD,CAAC,WAAAxD,GAAA,CAAAwD,IAAA,SAAD,CAAC;MAzmB8CtH,EAAE,CAAAwE,SAAA,EA0mBtD,CAAC;MA1mBmDxE,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAA4iC,UA0mBtD,CAAC,WAAA5iC,GAAA,CAAAwD,IAAA,GAAD,CAAC;MA1mBmDtH,EAAE,CAAAwE,SAAA,EA8mB3C,CAAC;MA9mBwCxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAsiC,UAAA,IAAAtiC,GAAA,CAAAwiC,UAAA,KAAAxiC,GAAA,CAAA0+B,UAAA,CAAAgE,WA8mB3C,CAAC;MA9mBwCxmC,EAAE,CAAAwE,SAAA,EAwnBhD,CAAC;MAxnB6CxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAsiC,UAAA,IAAAtiC,GAAA,CAAAwiC,UAAA,KAAAxiC,GAAA,CAAA0+B,UAAA,CAAAqE,MAwnBhD,CAAC;IAAA;EAAA;EAAAtJ,YAAA,GAenBmF,oBAAoB,EAAoHuC,eAAe,EAA6MjkC,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AAC7gB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAxoB0G79B,EAAE,CAAA89B,iBAAA,CAwoBjBqI,cAAc,EAAc,CAAC;IAC5G10B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACCmQ,SAAS,EAAE,CAAC9E,cAAc,CAAC;MAC3BvE,QAAQ,EAAE,kBAAkB;MAC5Br5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEz8B,IAAI,EAAE,CAAC;MACrBmK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+lC,UAAU,EAAE,CAAC;MACb30B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2G,aAAa,EAAE,CAAC;MAChByK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEimC,UAAU,EAAE,CAAC;MACb70B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4H,aAAa,EAAE,CAAC;MAChBwJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyU,UAAU,EAAE,CAAC;MACbrD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsH,gBAAgB,EAAE,CAAC;MACnB8J,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEkH,mBAAmB,EAAE,CAAC;MACtB2J,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEoH,qBAAqB,EAAE,CAAC;MACxByJ,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAMymC,kBAAkB,CAAC;EACrB7M,WAAWA,CAACC,OAAO,EAAE6M,IAAI,EAAE;IACvB,IAAI,CAAC7M,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC6M,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI5mC,YAAY,CAAC,CAAC;IACjC,IAAI,CAAC6mC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB;EACA1I,OAAOA,CAAA,EAAG;IACNnH,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;EAC9B;EACAuQ,kBAAkBA,CAAA,EAAG;IACjB;IACA,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,MAAM;MAChB,IAAI,CAACH,SAAS,GAAG,IAAI;MACrB,IAAI,CAACD,OAAO,CAACvhC,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN;EACAyhC,QAAQA,CAAA,EAAG;IACP,MAAMG,KAAK,GAAGA,CAAA,KAAM;MAChB,IAAI,CAAC,IAAI,CAACnN,OAAO,EAAE;QACf;MACJ;MACA;MACA,MAAM;QAAEoN,YAAY;QAAEC;MAAY,CAAC,GAAG,IAAI,CAACrN,OAAO,CAACS,aAAa;MAChE,IAAI2M,YAAY,IAAIC,WAAW,EAAE;QAC7BlQ,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;QAC1B,IAAI,CAACuQ,kBAAkB,CAAC,CAAC;MAC7B,CAAC,MACI;QACD9P,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;QAC1B,IAAI,CAACmQ,IAAI,CAACS,iBAAiB,CAAC,MAAM;UAC9B,IAAI,CAAC5Q,OAAO,GAAGW,UAAU,CAAC,MAAM8P,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;QACjD,CAAC,CAAC;MACN;IACJ,CAAC;IACD,IAAI,CAACN,IAAI,CAACS,iBAAiB,CAAC,MAAM;MAC9B,IAAI,CAAC5Q,OAAO,GAAGW,UAAU,CAAC,MAAM8P,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;EACN;AACJ;AACAP,kBAAkB,CAAC1L,IAAI,YAAAqM,2BAAAnM,CAAA;EAAA,YAAAA,CAAA,IAAwFwL,kBAAkB,EA/uBvBrnC,EAAE,CAAA87B,iBAAA,CA+uBuC97B,EAAE,CAAC+7B,UAAU,GA/uBtD/7B,EAAE,CAAA87B,iBAAA,CA+uBiE97B,EAAE,CAACioC,MAAM;AAAA,CAA4C;AAClOZ,kBAAkB,CAACa,IAAI,kBAhvBmFloC,EAAE,CAAAmoC,iBAAA;EAAA12B,IAAA,EAgvBT41B,kBAAkB;EAAAlL,SAAA;EAAAwD,OAAA;IAAA4H,OAAA;EAAA;AAAA,EAAmF;AACxM;EAAA,QAAA1J,SAAA,oBAAAA,SAAA,KAjvB0G79B,EAAE,CAAA89B,iBAAA,CAivBjBuJ,kBAAkB,EAAc,CAAC;IAChH51B,IAAI,EAAE5Q,SAAS;IACfo2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtsB,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,EAAE;MAAEtqB,IAAI,EAAEzR,EAAE,CAACioC;IAAO,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEV,OAAO,EAAE,CAAC;MAChH91B,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,SAASwnC,MAAMA,CAACv5B,KAAK,EAAE;EACnB,OAAOw5B,QAAQ,CAACC,IAAI,CAACz5B,KAAK,CAAC,KAAK,eAAe;AACnD;AACA,SAAS05B,QAAQA,CAAC15B,KAAK,EAAE;EACrB,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AAEA,MAAM25B,kBAAkB,CAAC;EACrBhO,WAAWA,CAACiO,YAAY,EAAEnB,IAAI,EAAEpC,EAAE,EAAEvK,UAAU,EAAE;IAC5C,IAAI,CAAC8N,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACnB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACpC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACvK,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC5hB,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC2vB,UAAU,GAAGjG,SAAS,CAACkG,OAAO;IACnC,IAAI,CAAC7zB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACjT,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;EACpC;EACAioC,QAAQA,CAAA,EAAG;IACP,IAAI1nC,gBAAgB,CAAC,IAAI,CAACy5B,UAAU,CAAC,EAAE;MACnC,IAAI,CAAC7lB,UAAU,GAAG,KAAK;IAC3B;EACJ;EACAimB,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC8N,qBAAqB,CAAC,CAAC;IAC5B;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAIzB,kBAAkB,CAAC,IAAI,CAACoB,YAAY,EAAE,IAAI,CAACnB,IAAI,CAAC;IAC9E,IAAI,CAACwB,kBAAkB,CAACvB,OAAO,CAACwB,SAAS,CAAC,IAAI,CAACzD,MAAM,CAACtK,IAAI,CAAC,IAAI,CAAC,CAAC;EACrE;EACAgO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,IAAI,IAAI,CAACH,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAACvB,OAAO,CAAC2B,WAAW,CAAC,CAAC;MAC7C,IAAI,CAACJ,kBAAkB,CAAC/J,OAAO,CAAC,CAAC;IACrC;EACJ;EACA6D,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACvtB,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,GAAG,IAAI,CAACoxB,SAAS,CAAC,IAAI,CAACpxB,OAAO,CAAC;IAC/C,CAAC,MACI;MACD,IAAI,CAACA,OAAO,GAAG,EAAE;IACrB;IACA,IAAI,IAAI,CAACzQ,IAAI,EAAE;MACX,IAAI,CAACqE,KAAK,GAAG,IAAI,CAACrE,IAAI,CAAC,CAAC,CAAC;MACzB,IAAI,CAACoE,MAAM,GAAG,IAAI,CAACpE,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,MACI;MACD,MAAMmE,IAAI,GAAG,IAAI,CAAC29B,gBAAgB,CAAC,CAAC;MACpC,IAAI39B,IAAI,EAAE;QACN,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACE,KAAK;QACvB,IAAI,CAACD,MAAM,GAAGD,IAAI,CAACC,MAAM;MAC7B;IACJ;IACA;IACA,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,GAAG,GAAG;IACpB;IACA,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;MACd,IAAI,CAACA,MAAM,GAAG,GAAG;IACrB;IACA,IAAI,CAACC,KAAK,GAAG23B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACh7B,KAAK,CAAC;IACnC,IAAI,CAACD,MAAM,GAAG43B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACj7B,MAAM,CAAC;IACrC,IAAI,IAAI,CAACw5B,EAAE,EAAE;MACT,IAAI,CAACA,EAAE,CAACK,YAAY,CAAC,CAAC;IAC1B;EACJ;EACA6D,gBAAgBA,CAAA,EAAG;IACf,IAAIz9B,KAAK;IACT,IAAID,MAAM;IACV,MAAM29B,QAAQ,GAAG,IAAI,CAACZ,YAAY,CAACvN,aAAa;IAChD,IAAIj6B,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,IAAI0O,QAAQ,CAACC,UAAU,KAAK,IAAI,EAAE;MACpE;MACA,MAAM79B,IAAI,GAAG49B,QAAQ,CAACC,UAAU,CAAClO,qBAAqB,CAAC,CAAC;MACxDzvB,KAAK,GAAGF,IAAI,CAACE,KAAK;MAClBD,MAAM,GAAGD,IAAI,CAACC,MAAM;IACxB;IACA,IAAIC,KAAK,IAAID,MAAM,EAAE;MACjB,OAAO;QAAEC,KAAK;QAAED;MAAO,CAAC;IAC5B;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI69B,WAAWA,CAAA,EAAG;IACV,KAAK,IAAI9J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC1nB,OAAO,CAACjL,MAAM,EAAE2yB,CAAC,EAAE,EAAE;MAC1C,MAAM+J,CAAC,GAAG,IAAI,CAACzxB,OAAO,CAAC0nB,CAAC,CAAC;MACzB+J,CAAC,CAAC/iC,KAAK,GAAG+iC,CAAC,CAAC16B,IAAI;MAChB,IAAIs5B,MAAM,CAACoB,CAAC,CAAC/iC,KAAK,CAAC,EAAE;QACjB+iC,CAAC,CAAC/iC,KAAK,GAAG+iC,CAAC,CAAC/iC,KAAK,CAACw9B,kBAAkB,CAAC,CAAC;MAC1C;MACA,IAAIuF,CAAC,CAAC7qB,MAAM,EAAE;QACV,KAAK,IAAI8qB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAAC7qB,MAAM,CAAC7R,MAAM,EAAE28B,CAAC,EAAE,EAAE;UACtC,MAAM3D,CAAC,GAAG0D,CAAC,CAAC7qB,MAAM,CAAC8qB,CAAC,CAAC;UACrB3D,CAAC,CAACr/B,KAAK,GAAGq/B,CAAC,CAACh3B,IAAI;UAChB,IAAIs5B,MAAM,CAACtC,CAAC,CAACr/B,KAAK,CAAC,EAAE;YACjBq/B,CAAC,CAACr/B,KAAK,GAAGq/B,CAAC,CAACr/B,KAAK,CAACw9B,kBAAkB,CAAC,CAAC;UAC1C;QACJ;MACJ;IACJ;EACJ;EACAgF,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACS,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAACR,WAAW,CAAC,CAAC;IACzC;EACJ;EACAL,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAAC5nC,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAM5E,MAAM,GAAGx0B,SAAS,CAAC+3B,MAAM,EAAE,QAAQ,CAAC;IAC1C,MAAMqQ,YAAY,GAAG5T,MAAM,CAAC6T,IAAI,CAACpoC,YAAY,CAAC,GAAG,CAAC,CAAC,CAACunC,SAAS,CAACc,CAAC,IAAI;MAC/D,IAAI,CAACvE,MAAM,CAAC,CAAC;MACb,IAAI,IAAI,CAACJ,EAAE,EAAE;QACT,IAAI,CAACA,EAAE,CAACK,YAAY,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC;IACF,IAAI,CAACmE,kBAAkB,GAAGC,YAAY;EAC1C;EACA;AACJ;AACA;AACA;AACA;EACIR,SAASA,CAACr4B,IAAI,EAAE;IACZ,MAAMiH,OAAO,GAAG,EAAE;IAClB,KAAK,MAAM6tB,IAAI,IAAI90B,IAAI,EAAE;MACrB,MAAMg5B,IAAI,GAAG,CAAC,CAAC;MACf,IAAIlE,IAAI,CAAC,MAAM,CAAC,KAAKzzB,SAAS,EAAE;QAC5B23B,IAAI,CAAC,MAAM,CAAC,GAAGlE,IAAI,CAAC,MAAM,CAAC;MAC/B;MACA,IAAIA,IAAI,CAAC,OAAO,CAAC,KAAKzzB,SAAS,EAAE;QAC7B23B,IAAI,CAAC,OAAO,CAAC,GAAGlE,IAAI,CAAC,OAAO,CAAC;MACjC;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAKzzB,SAAS,EAAE;QAC9B23B,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;QACnB,KAAK,MAAMC,UAAU,IAAInE,IAAI,CAAC,QAAQ,CAAC,EAAE;UACrC,MAAMoE,cAAc,GAAGxR,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAEF,UAAU,CAAC;UACpDD,IAAI,CAAC,QAAQ,CAAC,CAAC/J,IAAI,CAACiK,cAAc,CAAC;QACvC;MACJ;MACA,IAAIpE,IAAI,CAAC,OAAO,CAAC,KAAKzzB,SAAS,EAAE;QAC7B23B,IAAI,CAAC,OAAO,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACxE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7D;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAKzzB,SAAS,EAAE;QAC9B23B,IAAI,CAAC,QAAQ,CAAC,GAAGlE,IAAI,CAAC,QAAQ,CAAC;MACnC;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAKzzB,SAAS,EAAE;QAC9B23B,IAAI,CAAC,QAAQ,CAAC,GAAGlE,IAAI,CAAC,QAAQ,CAAC;MACnC;MACA7tB,OAAO,CAACgoB,IAAI,CAAC+J,IAAI,CAAC;IACtB;IACA,OAAO/xB,OAAO;EAClB;AACJ;AACAywB,kBAAkB,CAAC7M,IAAI,YAAA0O,2BAAAxO,CAAA;EAAA,YAAAA,CAAA,IAAwF2M,kBAAkB,EA35BvBxoC,EAAE,CAAA87B,iBAAA,CA25BuC97B,EAAE,CAAC+7B,UAAU,GA35BtD/7B,EAAE,CAAA87B,iBAAA,CA25BiE97B,EAAE,CAACioC,MAAM,GA35B5EjoC,EAAE,CAAA87B,iBAAA,CA25BuF97B,EAAE,CAACgmC,iBAAiB,GA35B7GhmC,EAAE,CAAA87B,iBAAA,CA25BwH77B,WAAW;AAAA,CAA4C;AAC3RuoC,kBAAkB,CAACvM,IAAI,kBA55BmFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA45BT+2B,kBAAkB;EAAArM,SAAA;EAAAc,MAAA;IAAAllB,OAAA;IAAAzQ,IAAA;IAAAyR,MAAA;IAAA2vB,UAAA;IAAA1vB,YAAA;IAAAlE,UAAA;EAAA;EAAA6qB,OAAA;IAAA99B,MAAA;EAAA;EAAA8hC,QAAA,GA55BX3jC,EAAE,CAAA4jC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAz4B,QAAA,WAAA4lC,4BAAAzmC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8E,SAAA,SA45B6Q,CAAC;IAAA;EAAA;EAAA64B,aAAA;AAAA,EAAqB;AAC/Y;EAAA,QAAAE,SAAA,oBAAAA,SAAA,KA75B0G79B,EAAE,CAAA89B,iBAAA,CA65BjB0K,kBAAkB,EAAc,CAAC;IAChH/2B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,YAAY;MACtBr5B,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE+M,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,EAAE;MAAEtqB,IAAI,EAAEzR,EAAE,CAACioC;IAAO,CAAC,EAAE;MAAEx2B,IAAI,EAAEzR,EAAE,CAACgmC;IAAkB,CAAC,EAAE;MAAEv0B,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC5IxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE8X,OAAO,EAAE,CAAC;MACtCtG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEiH,IAAI,EAAE,CAAC;MACPmK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0Y,MAAM,EAAE,CAAC;MACTtH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqoC,UAAU,EAAE,CAAC;MACbj3B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2Y,YAAY,EAAE,CAAC;MACfvH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyU,UAAU,EAAE,CAAC;MACbrD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAIyN,WAAW;AACf,CAAC,UAAUA,WAAW,EAAE;EACpBA,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK;EAC1BA,WAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAChCA,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM;EAC5BA,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO;AAClC,CAAC,EAAEA,WAAW,KAAKA,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AAErC,MAAMk8B,kBAAkB,CAAC;EACrB/P,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC+P,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAAChQ,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAChe,WAAW,GAAG,MAAM;IACzB,IAAI,CAACtd,UAAU,GAAG,QAAQ;IAC1B,IAAI,CAAC0D,SAAS,GAAG,EAAE;IACnB,QAAQ,IAAI,CAACU,MAAM;MACf,KAAKC,WAAW,CAAC0D,GAAG;QAChB,IAAI,CAACY,CAAC,GAAG,IAAI,CAAC3C,MAAM;QACpB,IAAI,CAAC0C,CAAC,GAAG,IAAI,CAAC/G,KAAK,GAAG,CAAC;QACvB;MACJ,KAAK0C,WAAW,CAACnC,MAAM;QACnB,IAAI,CAACyG,CAAC,GAAG,IAAI,CAAC3C,MAAM;QACpB,IAAI,CAAC0C,CAAC,GAAG,IAAI,CAAC/G,KAAK,GAAG,CAAC;QACvB;MACJ,KAAK0C,WAAW,CAACC,IAAI;QACjB,IAAI,CAACqE,CAAC,GAAG,EAAE,IAAI,CAAC3C,MAAM,GAAG,IAAI,CAACw6B,UAAU,GAAG,IAAI,CAACC,MAAM,CAAC;QACvD,IAAI,CAAC/3B,CAAC,GAAG,CAAC,IAAI,CAAChH,MAAM,GAAG,CAAC;QACzB,IAAI,CAACgC,SAAS,GAAG,aAAa;QAC9B;MACJ,KAAKW,WAAW,CAACE,KAAK;QAClB,IAAI,CAACoE,CAAC,GAAG,IAAI,CAAC3C,MAAM,GAAG,IAAI,CAACy6B,MAAM;QAClC,IAAI,CAAC/3B,CAAC,GAAG,CAAC,IAAI,CAAChH,MAAM,GAAG,CAAC;QACzB,IAAI,CAACgC,SAAS,GAAG,aAAa;QAC9B;MACJ;IACJ;EACJ;AACJ;AACA68B,kBAAkB,CAAC5O,IAAI,YAAA+O,2BAAA7O,CAAA;EAAA,YAAAA,CAAA,IAAwF0O,kBAAkB,EAl+BvBvqC,EAAE,CAAA87B,iBAAA,CAk+BuC97B,EAAE,CAAC+7B,UAAU;AAAA,CAA4C;AAC5MwO,kBAAkB,CAACtO,IAAI,kBAn+BmFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAm+BT84B,kBAAkB;EAAApO,SAAA;EAAAc,MAAA;IAAA7uB,MAAA;IAAA3H,KAAA;IAAAuJ,MAAA;IAAArE,KAAA;IAAAD,MAAA;EAAA;EAAAi4B,QAAA,GAn+BX3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAxiC,GAAA;EAAA+0B,KAAA;EAAAC,IAAA;EAAAz4B,QAAA,WAAAkmC,4BAAA/mC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA0+BxG,CAAC;MA1+BqG9G,EAAE,CAAAmE,cAAA,UA0+BxG,CAAC;MA1+BqGnE,EAAE,CAAAmF,MAAA,EA4+BzG,CAAC;MA5+BsGnF,EAAE,CAAAqE,YAAA,CA4+B9F,CAAC;IAAA;IAAA,IAAAR,EAAA;MA5+B2F7D,EAAE,CAAA4I,WAAA,iBAAA9E,GAAA,CAAAwjB,WAq+BtE,CAAC,MAAAxjB,GAAA,CAAA4O,CAAD,CAAC,MAAA5O,GAAA,CAAA6O,CAAD,CAAC,gBAAA7O,GAAA,CAAAkG,UAAD,CAAC,cAAAlG,GAAA,CAAA4J,SAAD,CAAC;MAr+BmE1N,EAAE,CAAAwE,SAAA,EA4+BzG,CAAC;MA5+BsGxE,EAAE,CAAA6I,kBAAA,MAAA/E,GAAA,CAAA2C,KAAA,KA4+BzG,CAAC;IAAA;EAAA;EAAAk3B,aAAA;EAAAmG,eAAA;AAAA,EACsE;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA9+B0G79B,EAAE,CAAA89B,iBAAA,CA8+BjByM,kBAAkB,EAAc,CAAC;IAChH94B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,0BAA0B;MACpCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtyB,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE3tB,MAAM,EAAE,CAAC;MAC1FqD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoG,KAAK,EAAE,CAAC;MACRgL,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2P,MAAM,EAAE,CAAC;MACTyB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsL,KAAK,EAAE,CAAC;MACR8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,SAASwqC,SAASA,CAACC,CAAC,EAAEhoC,GAAG,GAAG,EAAE,EAAE;EAC5B,IAAI,OAAOgoC,CAAC,KAAK,QAAQ,EAAE;IACvB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACvB,OAAOA,CAAC,GAAG,EAAE;IACjB,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ;EACAA,CAAC,GAAGA,CAAC,CAACC,IAAI,CAAC,CAAC;EACZ,IAAID,CAAC,CAACh+B,MAAM,IAAIhK,GAAG,EAAE;IACjB,OAAOgoC,CAAC;EACZ,CAAC,MACI;IACD,OAAQ,GAAEA,CAAC,CAACE,KAAK,CAAC,CAAC,EAAEloC,GAAG,CAAE,KAAI;EAClC;AACJ;AAEA,SAASmoC,WAAWA,CAACr/B,KAAK,EAAEs/B,QAAQ,EAAE;EAClC,IAAIt/B,KAAK,CAACkB,MAAM,GAAGo+B,QAAQ,EAAE;IACzB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG9H,IAAI,CAACqD,KAAK,CAAC/6B,KAAK,CAACkB,MAAM,GAAGo+B,QAAQ,CAAC;IACnD,KAAK,IAAIzL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7zB,KAAK,CAACkB,MAAM,EAAE2yB,CAAC,EAAE,EAAE;MACnC,IAAIA,CAAC,GAAG2L,OAAO,KAAK,CAAC,EAAE;QACnBD,OAAO,CAACpL,IAAI,CAACn0B,KAAK,CAAC6zB,CAAC,CAAC,CAAC;MAC1B;IACJ;IACA7zB,KAAK,GAAGu/B,OAAO;EACnB;EACA,OAAOv/B,KAAK;AAChB;AACA,SAASy/B,YAAYA,CAAC5kC,KAAK,EAAE6kC,SAAS,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,WAAW,GAAG,CAAC/kC,KAAK,IAAI,EAAE,EAAE4hC,QAAQ,CAAC,CAAC;EAC5C,IAAIoD,UAAU,GAAG,EAAE;EACnB,IAAI,IAAI,CAACC,IAAI,CAACF,WAAW,CAAC,EAAE;IACxBC,UAAU,GAAGD,WAAW,CAACG,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEtpC,IAAI,KAAK;MAC1D,MAAMupC,IAAI,GAAG,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG;MACtC,OAAOD,IAAI,CAACh/B,MAAM,GAAGvK,IAAI,CAACuK,MAAM,GAAGw+B,SAAS,GAAG,CAAC,GAAGO,KAAK,EAAEC,IAAI,CAACf,IAAI,CAAC,CAAC,EAAExoC,IAAI,CAACwoC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGc,KAAK,EAAEC,IAAI,GAAGvpC,IAAI,CAAC;IACjH,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,MACI;IACD,IAAIypC,UAAU,GAAG,CAAC;IAClB,OAAOA,UAAU,GAAGR,WAAW,CAAC1+B,MAAM,EAAE;MACpC2+B,UAAU,CAAC1L,IAAI,CAACyL,WAAW,CAACS,SAAS,CAACD,UAAU,EAAEA,UAAU,GAAGV,SAAS,CAAC,CAAC;MAC1EU,UAAU,IAAIV,SAAS;IAC3B;EACJ;EACA,IAAIG,UAAU,CAAC3+B,MAAM,GAAGy+B,QAAQ,EAAE;IAC9BE,UAAU,GAAGA,UAAU,CAACpM,MAAM,CAAC,CAAC,EAAEkM,QAAQ,CAAC;IAC3CE,UAAU,CAACA,UAAU,CAAC3+B,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK;EAC9C;EACA,OAAO2+B,UAAU;AACrB;AAEA,IAAIS,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,OAAO,CAAC,GAAG,OAAO;EAC7BA,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC/BA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;AAC7B,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,MAAMC,mBAAmB,CAAC;EACtB3R,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACtvB,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,UAAU,GAAG,MAAM;IACxB,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACP,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACM,WAAW,GAAG,IAAI;IACvB,IAAI,CAACW,SAAS,GAAG,KAAK;IACtB,IAAI,CAACugC,iBAAiB,GAAG,IAAIzrC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC0rC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACziC,UAAU,GAAGkiC,UAAU,CAACQ,MAAM;IACnC,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAAClhC,MAAM,GAAG,CAAC;IACf,IAAI,CAACmhC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,iCAAiC,GAAG,EAAE;EAC/C;EACA,IAAI5iC,oBAAoBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAAC2B,SAAS,IAAI,IAAI,CAACkhC,KAAK,CAACC,IAAI;EAC5C;EACApK,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAvK,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAAChsC,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;MACrC;MACA,IAAI,CAACyR,iBAAiB,CAACpmC,IAAI,CAAC;QAAE0F,MAAM,EAAE,IAAI,CAACmhC;MAAa,CAAC,CAAC;MAC1D;IACJ;IACA,MAAMnhC,MAAM,GAAGwhC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAACjS,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAAC1vB,MAAM,EAAE,EAAE,CAAC;IAC3F,IAAIA,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MACxB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC0gC,iBAAiB,CAACpmC,IAAI,CAAC;QAAE0F,MAAM,EAAE,IAAI,CAACA;MAAO,CAAC,CAAC;MACpDosB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;IACvC;EACJ;EACA3H,MAAMA,CAAA,EAAG;IACL,MAAMyH,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAI,CAACnhC,KAAK,GAAG,IAAI,CAACwhC,QAAQ,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAChiC,cAAc,EAAE;MACrB,IAAI,CAACf,UAAU,GAAG,IAAI,CAACe,cAAc;IACzC,CAAC,MACI,IAAI2hC,KAAK,CAAC1iC,UAAU,EAAE;MACvB;MACA,IAAI,CAACA,UAAU,GAAG0iC,KAAK,CAAC1iC,UAAU,CAACmtB,KAAK,CAACuV,KAAK,EAAE,IAAI,CAAC1hC,aAAa,CAAC;IACvE,CAAC,MACI;MACD,IAAI,CAAChB,UAAU,GAAG,UAAUy7B,CAAC,EAAE;QAC3B,IAAIA,CAAC,CAACtL,WAAW,CAAC1rB,IAAI,KAAK,MAAM,EAAE;UAC/B,OAAOg3B,CAAC,CAAC7B,kBAAkB,CAAC,CAAC;QACjC;QACA,OAAO6B,CAAC,CAACzxB,cAAc,CAAC,CAAC;MAC7B,CAAC;IACL;IACA,MAAMg5B,KAAK,GAAG,IAAI,CAACniC,WAAW,GAAG,IAAI,CAACoiC,gBAAgB,CAAC,IAAI,CAAC1hC,KAAK,CAAC,GAAG,IAAI;IACzE,IAAI,CAAC2hC,aAAa,GAAG,IAAI,CAACR,KAAK,CAACS,SAAS,GACnC,UAAU1H,CAAC,EAAE;MACX,OAAO,IAAI,CAACiH,KAAK,CAACjH,CAAC,CAAC,GAAG,IAAI,CAACiH,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,GAAG;IACvD,CAAC,GACC,IAAI,CAACT,KAAK;IAChB,IAAI,CAAC9iC,aAAa,GAAG,EAAE;IACvB,IAAIojC,KAAK,IAAIA,KAAK,KAAK,CAAC,EAAE;MACtB,IAAI,CAACpjC,aAAa,GAAI,UAASojC,KAAM,GAAE;MACvC,IAAI,CAACrjC,UAAU,GAAGkiC,UAAU,CAACuB,GAAG;MAChC,IAAI,CAACpB,eAAe,GAAG,EAAE;IAC7B,CAAC,MACI;MACD,IAAI,CAACriC,UAAU,GAAGkiC,UAAU,CAACQ,MAAM;IACvC;IACA5U,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAK,gBAAgBA,CAAC1hC,KAAK,EAAE;IACpB,IAAIyhC,KAAK,GAAG,CAAC;IACb,IAAI,CAACV,cAAc,GAAG,CAAC;IACvB,KAAK,IAAIlN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7zB,KAAK,CAACkB,MAAM,EAAE2yB,CAAC,EAAE,EAAE;MACnC,MAAMiO,IAAI,GAAG,IAAI,CAACrjC,UAAU,CAACuB,KAAK,CAAC6zB,CAAC,CAAC,CAAC,CAAC4I,QAAQ,CAAC,CAAC;MACjD,IAAIsF,UAAU,GAAGD,IAAI,CAAC5gC,MAAM;MAC5B,IAAI,IAAI,CAAC7B,SAAS,EAAE;QAChB0iC,UAAU,GAAG,IAAI,CAACjkC,QAAQ,CAACgkC,IAAI,CAAC,CAAC5gC,MAAM;MAC3C;MACA,IAAI6gC,UAAU,GAAG,IAAI,CAAChB,cAAc,EAAE;QAClC,IAAI,CAACA,cAAc,GAAGgB,UAAU;MACpC;IACJ;IACA,MAAMC,GAAG,GAAGtK,IAAI,CAACzgC,GAAG,CAAC,IAAI,CAAC8pC,cAAc,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAChE,MAAMiB,SAAS,GAAG,CAAC,CAAC,CAAC;IACrB,MAAMC,SAAS,GAAGF,GAAG,GAAGC,SAAS;IACjC,IAAIE,SAAS,GAAGD,SAAS;IACzB,MAAME,YAAY,GAAG1K,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACh7B,KAAK,GAAGC,KAAK,CAACkB,MAAM,CAAC;IAC1D;IACA,OAAOihC,SAAS,GAAGC,YAAY,IAAIX,KAAK,GAAG,CAAC,EAAE,EAAE;MAC5CA,KAAK,IAAI,EAAE;MACXU,SAAS,GAAGzK,IAAI,CAAC2K,GAAG,CAACZ,KAAK,IAAI/J,IAAI,CAAC4K,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGJ,SAAS;IAC7D;IACA,IAAIK,WAAW,GAAG,EAAE;IACpB,IAAI,IAAI,CAACjkC,oBAAoB,EAAE;MAC3B,MAAMkkC,WAAW,GAAG,IAAI,CAACxiC,KAAK,CAACggC,MAAM,CAAC,CAACyC,OAAO,EAAEC,OAAO,KAAMA,OAAO,CAACxhC,MAAM,GAAGuhC,OAAO,CAACvhC,MAAM,GAAGwhC,OAAO,GAAGD,OAAQ,EAAE,EAAE,CAAC;MACtH,MAAME,SAAS,GAAG,IAAI,CAACjlC,UAAU,CAAC8kC,WAAW,CAAC;MAC9CD,WAAW,GAAG,EAAE,IAAII,SAAS,CAACzhC,MAAM,IAAI,CAAC,CAAC;MAC1C,IAAI,CAACggC,iCAAiC,GAAG,IAAI,CAAC0B,2BAA2B,CAACJ,WAAW,CAAC;IAC1F;IACA,MAAMK,cAAc,GAAGpB,KAAK,KAAK,CAAC,GAC5B/J,IAAI,CAACxgC,GAAG,CAACwgC,IAAI,CAACoL,GAAG,CAACpL,IAAI,CAACqL,GAAG,CAAEtB,KAAK,GAAG/J,IAAI,CAAC4K,EAAE,GAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC/iC,aAAa,GAAG0iC,SAAS,EAAE,EAAE,CAAC,GAC1FM,WAAW;IACjB,IAAI,CAACtB,YAAY,GAAGvJ,IAAI,CAACzgC,GAAG,CAAC4rC,cAAc,EAAE,GAAG,CAAC;IACjD,OAAOpB,KAAK;EAChB;EACAD,QAAQA,CAAA,EAAG;IACP,IAAIxhC,KAAK;IACT,MAAMs/B,QAAQ,GAAG,IAAI,CAAC0D,WAAW,CAAC,EAAE,CAAC;IACrC,MAAMC,aAAa,GAAG,IAAI,CAACD,WAAW,CAAC,GAAG,CAAC;IAC3C,IAAI,IAAI,CAACE,UAAU,EAAE;MACjBljC,KAAK,GAAG,IAAI,CAACkjC,UAAU;IAC3B,CAAC,MACI,IAAI,IAAI,CAAC/B,KAAK,CAACnhC,KAAK,EAAE;MACvBA,KAAK,GAAG,IAAI,CAACmhC,KAAK,CAACnhC,KAAK,CAAC4rB,KAAK,CAAC,IAAI,CAACuV,KAAK,EAAE,CAAC8B,aAAa,CAAC,CAAC;IAC/D,CAAC,MACI;MACDjjC,KAAK,GAAG,IAAI,CAACmhC,KAAK,CAAC3lC,MAAM,CAAC,CAAC;MAC3BwE,KAAK,GAAGq/B,WAAW,CAACr/B,KAAK,EAAEs/B,QAAQ,CAAC;IACxC;IACA,OAAOt/B,KAAK;EAChB;EACAgjC,WAAWA,CAACG,SAAS,EAAE;IACnB,OAAOzL,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACh7B,KAAK,GAAGojC,SAAS,CAAC;EAC7C;EACA3kC,aAAaA,CAACsjC,IAAI,EAAE;IAChB,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAACrB,eAAe,GAAG,GAAG;EACrF;EACA7hC,iBAAiBA,CAAA,EAAG;IAChB,OAAQ,eAAc,CAAC,IAAI,CAAC6hC,eAAe,GAAG,CAAE,GAAE;EACtD;EACA3iC,QAAQA,CAACjD,KAAK,EAAE;IACZ,OAAO,IAAI,CAACwE,SAAS,GAAG4/B,SAAS,CAACpkC,KAAK,EAAE,IAAI,CAAC0E,aAAa,CAAC,GAAG1E,KAAK;EACxE;EACA+nC,2BAA2BA,CAACQ,YAAY,EAAE;IACtC,IAAI,IAAI,CAACjC,KAAK,CAACS,SAAS,EAAE;MACtB,MAAMyB,qBAAqB,GAAG,CAAC,CAAC,CAAC;MACjC,MAAMC,aAAa,GAAG5L,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACS,SAAS,CAAC,CAAC,GAAGyB,qBAAqB,CAAC;MAChF,MAAME,aAAa,GAAGH,YAAY,CAAChE,KAAK,CAAC,CAAC,EAAEkE,aAAa,CAAC;MAC1D,OAAO5L,IAAI,CAACxgC,GAAG,CAACqsC,aAAa,CAACriC,MAAM,EAAE,IAAI,CAAC3B,aAAa,CAAC;IAC7D;IACA,OAAO,IAAI,CAACA,aAAa;EAC7B;EACA7B,UAAUA,CAAC7C,KAAK,EAAE;IACd,IAAIA,KAAK,CAAC4hC,QAAQ,CAAC,CAAC,CAACv7B,MAAM,GAAG,IAAI,CAAC3B,aAAa,IAAI,IAAI,CAAC4hC,KAAK,CAACS,SAAS,EAAE;MACtE,MAAM4B,eAAe,GAAG,CAAC;MACzB,IAAI7D,QAAQ,GAAG,IAAI,CAACrgC,WAAW,GAAGo4B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAGoC,eAAe;MACtF,IAAI7D,QAAQ,IAAI,CAAC,EAAE;QACf,OAAO,CAAC,IAAI,CAAC7hC,QAAQ,CAACjD,KAAK,CAAC,CAAC;MACjC;MACA,IAAI4oC,oBAAoB,GAAG/L,IAAI,CAACxgC,GAAG,CAAC,IAAI,CAACgqC,iCAAiC,EAAE,IAAI,CAAC3hC,aAAa,CAAC;MAC/F,IAAI,CAAClK,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;QACrC0U,oBAAoB,GAAG/L,IAAI,CAACqD,KAAK,CAACrD,IAAI,CAACzgC,GAAG,CAAC,IAAI,CAACgqC,YAAY,GAAGuC,eAAe,EAAE9L,IAAI,CAACxgC,GAAG,CAAC,IAAI,CAACgqC,iCAAiC,EAAE,IAAI,CAAC3hC,aAAa,CAAC,CAAC,CAAC;MAC1J;MACAogC,QAAQ,GAAGjI,IAAI,CAACzgC,GAAG,CAAC0oC,QAAQ,EAAE6D,eAAe,CAAC;MAC9C,MAAMvD,KAAK,GAAGR,YAAY,CAAC5kC,KAAK,EAAE4oC,oBAAoB,EAAE9D,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC;MACpF,OAAOM,KAAK;IAChB;IACA,OAAO,CAAC,IAAI,CAACniC,QAAQ,CAACjD,KAAK,CAAC,CAAC;EACjC;AACJ;AACA0lC,mBAAmB,CAACxQ,IAAI,YAAA2T,4BAAAzT,CAAA;EAAA,YAAAA,CAAA,IAAwFsQ,mBAAmB,EAnvCzBnsC,EAAE,CAAA87B,iBAAA,CAmvCyC77B,WAAW;AAAA,CAA4C;AAC5MksC,mBAAmB,CAAClQ,IAAI,kBApvCkFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAovCR06B,mBAAmB;EAAAhQ,SAAA;EAAAC,SAAA,WAAAmT,0BAAA1rC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApvCb7D,EAAE,CAAAs8B,WAAA,CAAAl0B,GAAA;IAAA;IAAA,IAAAvE,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAqpC,YAAA,GAAA5Q,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA8P,KAAA;IAAA3+B,MAAA;IAAA/C,aAAA;IAAAyjC,UAAA;IAAAxjC,UAAA;IAAAL,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAR,aAAA;IAAAH,cAAA;IAAAkB,KAAA;IAAAT,WAAA;IAAAW,SAAA;EAAA;EAAA8zB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAtiC,GAAA;EAAA60B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA8qC,6BAAA3rC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CAqvCzF,CAAC;MArvCsF9G,EAAE,CAAAmE,cAAA,gBAqvCzF,CAAC;MArvCsFnE,EAAE,CAAAoE,UAAA,IAAA+F,qCAAA,cA8wC/F,CAAC;MA9wC4FnK,EAAE,CAAAqE,YAAA,CA+wCjG,CAAC;MA/wC8FrE,EAAE,CAAAoE,UAAA,IAAAsG,qCAAA,cAqxCjG,CAAC;IAAA;IAAA,IAAA7G,EAAA;MArxC8F7D,EAAE,CAAAwE,SAAA,EAsvCvE,CAAC;MAtvCoExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA8H,KAsvCvE,CAAC;MAtvCoE5L,EAAE,CAAAwE,SAAA,EAixCzE,CAAC;MAjxCsExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA8H,KAixCzE,CAAC;IAAA;EAAA;EAAA2xB,YAAA,GAKMv8B,EAAE,CAACklC,OAAO,EAAgGllC,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACnR;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAvxC0G79B,EAAE,CAAA89B,iBAAA,CAuxCjBqO,mBAAmB,EAAc,CAAC;IACjH16B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtyB,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC9DxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE8sC,KAAK,EAAE,CAAC;MACpCt7B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+N,MAAM,EAAE,CAAC;MACTqD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgL,aAAa,EAAE,CAAC;MAChBoG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyuC,UAAU,EAAE,CAAC;MACbr9B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEiL,UAAU,EAAE,CAAC;MACbmG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4K,SAAS,EAAE,CAAC;MACZwG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8K,aAAa,EAAE,CAAC;MAChBsG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+K,cAAc,EAAE,CAAC;MACjBqG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuK,aAAa,EAAE,CAAC;MAChB6G,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoK,cAAc,EAAE,CAAC;MACjBgH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsL,KAAK,EAAE,CAAC;MACR8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6K,WAAW,EAAE,CAAC;MACduG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwL,SAAS,EAAE,CAAC;MACZ4F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+rC,iBAAiB,EAAE,CAAC;MACpB36B,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEusC,YAAY,EAAE,CAAC;MACf17B,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMwY,cAAc,CAAC;EACjBjV,WAAWA,CAAA,EAAG;IACV,IAAI,CAACtvB,WAAW,GAAG,IAAI;IACvB,IAAI,CAACN,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACY,OAAO,GAAG6C,WAAW,CAACnC,MAAM;IACjC,IAAI,CAACwjC,WAAW,GAAG,CAAC;IACpB,IAAI,CAAC7jC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACugC,iBAAiB,GAAG,IAAIzrC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAACgvC,cAAc,GAAG,QAAQ;IAC9B,IAAI,CAAC3jC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACke,IAAI,GAAG,MAAM;IAClB,IAAI,CAACY,MAAM,GAAG,QAAQ;IACtB,IAAI,CAACxf,UAAU,GAAG,MAAM;IACxB,IAAI,CAACgc,WAAW,GAAG,MAAM;IACzB,IAAI,CAACsoB,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC3jC,WAAW,GAAGoC,WAAW;EAClC;EACAu0B,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC53B,SAAS,GAAI,eAAc,IAAI,CAACgiC,WAAW,GAAG,IAAI,CAACE,OAAO,GAAG,IAAI,CAACnkC,IAAI,CAACC,MAAO,GAAE;IACrF,IAAI,OAAO,IAAI,CAACmkC,cAAc,KAAK,WAAW,EAAE;MAC5C,IAAI,CAACxkC,aAAa,GAAG,CAAC,IAAI,CAACwkC,cAAc,CAAC;IAC9C;EACJ;EACA7kC,eAAeA,CAAC;IAAEU;EAAO,CAAC,EAAE;IACxB,MAAMokC,cAAc,GAAGpkC,MAAM,GAAG,EAAE,GAAG,CAAC;IACtC,IAAIokC,cAAc,KAAK,IAAI,CAAC9jC,WAAW,EAAE;MACrC,IAAI,CAACA,WAAW,GAAG8jC,cAAc;MACjChY,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACpmC,IAAI,CAAC;UAAE0F;QAAO,CAAC,CAAC;MAC3C,CAAC,EAAE,CAAC,CAAC;IACT;EACJ;AACJ;AACA+jC,cAAc,CAAC9T,IAAI,YAAAoU,uBAAAlU,CAAA;EAAA,YAAAA,CAAA,IAAwF4T,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAACxT,IAAI,kBAz4CuFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAy4Cbg+B,cAAc;EAAAtT,SAAA;EAAAC,SAAA,WAAA4T,qBAAAnsC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAz4CH7D,EAAE,CAAAs8B,WAAA,CAy4C8gB6P,mBAAmB;IAAA;IAAA,IAAAtoC,EAAA;MAAA,IAAA04B,EAAA;MAz4CniBv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAmsC,cAAA,GAAA1T,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA1xB,MAAA;IAAAE,IAAA;IAAAR,SAAA;IAAAC,WAAA;IAAAC,aAAA;IAAAC,cAAA;IAAAR,aAAA;IAAAslC,SAAA;IAAAnkC,SAAA;IAAAH,KAAA;IAAAikC,cAAA;IAAArkC,OAAA;IAAAkkC,WAAA;IAAA7jC,SAAA;EAAA;EAAA8zB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA9/B,GAAA;EAAAqyB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAyrC,wBAAAtsC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA04CvC,CAAC;MA14CoC9G,EAAE,CAAAmE,cAAA,OA04CvC,CAAC;MA14CoCnE,EAAE,CAAAoE,UAAA,IAAA0G,gCAAA,eA45CrG,CAAC;MA55CkG9K,EAAE,CAAAoE,UAAA,IAAA0H,gCAAA,cAq6C9F,CAAC;MAr6C2F9L,EAAE,CAAAqE,YAAA,CAs6CjG,CAAC;IAAA;IAAA,IAAAR,EAAA;MAt6C8F7D,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAA6rC,cA04CrE,CAAC,cAAA7rC,GAAA,CAAA4J,SAAD,CAAC;MA14CkE1N,EAAE,CAAAwE,SAAA,EA64CxF,CAAC;MA74CqFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAyH,MA64CxF,CAAC;MA74CqFvL,EAAE,CAAAwE,SAAA,EA+5CrF,CAAC;MA/5CkFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAosC,SA+5CrF,CAAC;IAAA;EAAA;EAAA3S,YAAA,GAQkB4O,mBAAmB,EAAsR5B,kBAAkB,EAA0HvpC,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AAC9lB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAx6C0G79B,EAAE,CAAA89B,iBAAA,CAw6CjB2R,cAAc,EAAc,CAAC;IAC5Gh+B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEx4B,MAAM,EAAE,CAAC;MACvBkG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoL,IAAI,EAAE,CAAC;MACPgG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4K,SAAS,EAAE,CAAC;MACZwG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6K,WAAW,EAAE,CAAC;MACduG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8K,aAAa,EAAE,CAAC;MAChBsG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+K,cAAc,EAAE,CAAC;MACjBqG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuK,aAAa,EAAE,CAAC;MAChB6G,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6vC,SAAS,EAAE,CAAC;MACZz+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0L,SAAS,EAAE,CAAC;MACZ0F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuL,KAAK,EAAE,CAAC;MACR6F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwvC,cAAc,EAAE,CAAC;MACjBp+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmL,OAAO,EAAE,CAAC;MACViG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqvC,WAAW,EAAE,CAAC;MACdj+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwL,SAAS,EAAE,CAAC;MACZ4F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+rC,iBAAiB,EAAE,CAAC;MACpB36B,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEqvC,cAAc,EAAE,CAAC;MACjBx+B,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAACkV,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,SAASiE,WAAWA,CAAC19B,CAAC,EAAEC,CAAC,EAAE09B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,EAAE;EAClD,IAAIC,MAAM,GAAG,EAAE;EACfP,CAAC,GAAG/M,IAAI,CAACqD,KAAK,CAAC0J,CAAC,CAAC;EACjBC,CAAC,GAAGhN,IAAI,CAACqD,KAAK,CAAC2J,CAAC,CAAC;EACjBD,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;EACnBC,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;EACnBM,MAAM,GAAI,IAAG,CAACl+B,CAAC,GAAG69B,CAAC,EAAE59B,CAAC,CAAE,EAAC;EACzBi+B,MAAM,IAAK,IAAGP,CAAC,GAAG,CAAC,GAAGE,CAAE,EAAC;EACzB,IAAIE,EAAE,EAAE;IACJG,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAACA,CAAC,EAAEA,CAAC,CAAE,EAAC;EAC1C,CAAC,MACI;IACDK,MAAM,IAAK,IAAGL,CAAE,IAAGA,CAAE,EAAC;EAC1B;EACAK,MAAM,IAAK,IAAGN,CAAC,GAAG,CAAC,GAAGC,CAAE,EAAC;EACzB,IAAII,EAAE,EAAE;IACJC,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAAC,CAACA,CAAC,EAAEA,CAAC,CAAE,EAAC;EAC3C,CAAC,MACI;IACDK,MAAM,IAAK,IAAGL,CAAE,IAAG,CAACA,CAAE,EAAC;EAC3B;EACAK,MAAM,IAAK,IAAG,CAAC,GAAGL,CAAC,GAAGF,CAAE,EAAC;EACzB,IAAIK,EAAE,EAAE;IACJE,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAAC,CAACA,CAAC,EAAE,CAACA,CAAC,CAAE,EAAC;EAC5C,CAAC,MACI;IACDK,MAAM,IAAK,IAAG,CAACL,CAAE,IAAG,CAACA,CAAE,EAAC;EAC5B;EACAK,MAAM,IAAK,IAAG,CAAC,GAAGL,CAAC,GAAGD,CAAE,EAAC;EACzB,IAAIE,EAAE,EAAE;IACJI,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAACA,CAAC,EAAE,CAACA,CAAC,CAAE,EAAC;EAC3C,CAAC,MACI;IACDK,MAAM,IAAK,IAAG,CAACL,CAAE,IAAGA,CAAE,EAAC;EAC3B;EACAK,MAAM,IAAK,GAAE;EACb,OAAOA,MAAM;AACjB;AAEA,MAAMC,mBAAmB,CAAC;EACtBrW,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACtvB,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,UAAU,GAAG,MAAM;IACxB,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACP,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACqE,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACE,YAAY,GAAG,KAAK;IACzB,IAAI,CAACtD,SAAS,GAAG,KAAK;IACtB,IAAI,CAACugC,iBAAiB,GAAG,IAAIzrC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC4rC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACE,WAAW,GAAG,CAAC;IACpB,IAAI,CAACJ,eAAe,GAAG,EAAE;IACzB,IAAI,CAACriC,UAAU,GAAGkiC,UAAU,CAACQ,MAAM;IACnC,IAAI,CAAC/gC,KAAK,GAAG,CAAC;IACd,IAAI,CAAC6gC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACF,YAAY,GAAG,KAAK;IACzB,IAAI,CAACwE,mBAAmB,GAAG,CAAC;IAC5B,IAAI,CAACziC,WAAW,GAAGA,WAAW;EAClC;EACAu0B,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAvK,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAAChsC,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;MACrC;MACA,IAAI,CAAChvB,KAAK,GAAG,IAAI,CAAColC,uBAAuB,CAAC,CAAC;MAC3C,IAAI,CAAC3E,iBAAiB,CAACpmC,IAAI,CAAC;QAAE2F,KAAK,EAAE,IAAI,CAACA;MAAM,CAAC,CAAC;MAClD;IACJ;IACA,MAAMA,KAAK,GAAGuhC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAACjS,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAACzvB,KAAK,EAAE,EAAE,CAAC;IACzF,IAAIA,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;MACtB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACygC,iBAAiB,CAACpmC,IAAI,CAAC;QAAE2F;MAAM,CAAC,CAAC;MACtCmsB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;IACvC;EACJ;EACA3H,MAAMA,CAAA,EAAG;IACL,MAAMyH,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMiE,IAAI,GAAG,IAAI,CAAC5iC,MAAM,KAAKC,WAAW,CAAC0D,GAAG,IAAI,IAAI,CAAC3D,MAAM,KAAKC,WAAW,CAACE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1F,IAAI,CAAC9B,WAAW,GAAG62B,IAAI,CAACxgC,GAAG,CAAC,IAAI,CAACypC,aAAa,EAAE,CAAC,CAAC,GAAG,IAAI,CAACE,WAAW;IACrE,IAAI,CAAC7gC,KAAK,GAAG,IAAI,CAACwhC,QAAQ,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAChiC,cAAc,EAAE;MACrB,IAAI,CAACf,UAAU,GAAG,IAAI,CAACe,cAAc;IACzC,CAAC,MACI,IAAI2hC,KAAK,CAAC1iC,UAAU,EAAE;MACvB;MACA,IAAI,CAACA,UAAU,GAAG0iC,KAAK,CAAC1iC,UAAU,CAACmtB,KAAK,CAACuV,KAAK,EAAE,IAAI,CAAC1hC,aAAa,CAAC;IACvE,CAAC,MACI;MACD,IAAI,CAAChB,UAAU,GAAG,UAAUy7B,CAAC,EAAE;QAC3B,IAAIA,CAAC,CAACtL,WAAW,CAAC1rB,IAAI,KAAK,MAAM,EAAE;UAC/B,OAAOg3B,CAAC,CAAC7B,kBAAkB,CAAC,CAAC;QACjC;QACA,OAAO6B,CAAC,CAACzxB,cAAc,CAAC,CAAC;MAC7B,CAAC;IACL;IACA,IAAI,CAACk5B,aAAa,GAAGR,KAAK,CAACS,SAAS,GAC9B1H,CAAC,IAAI;MACH;MACA,MAAMmL,cAAc,GAAGlE,KAAK,CAACjH,CAAC,CAAC,GAAGiH,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,GAAG;MACzD,IAAI,IAAI,CAAC3hC,SAAS,IAAIi6B,CAAC,CAACuC,QAAQ,CAAC,CAAC,CAACv7B,MAAM,GAAG,IAAI,CAAC3B,aAAa,EAAE;QAC5D,MAAM+lC,YAAY,GAAG,IAAI,CAAC5nC,UAAU,CAACw8B,CAAC,CAAC,CAACh5B,MAAM;QAC9C,IAAIokC,YAAY,KAAK,CAAC,EAAE;UACpB,OAAOD,cAAc;QACzB;QACA,MAAME,SAAS,GAAGpE,KAAK,CAACS,SAAS,CAAC,CAAC;QACnC,MAAM4D,aAAa,GAAGF,YAAY,GAAG,CAAC;QACtC,MAAMG,kBAAkB,GAAGF,SAAS,GAAG,GAAG,GAAGC,aAAa,GAAG,GAAG;QAChE,OAAOrE,KAAK,CAACjH,CAAC,CAAC,GAAGuL,kBAAkB;MACxC;MACA,OAAOJ,cAAc;IACzB,CAAC,GACClE,KAAK;IACX,IAAI,IAAI,CAAC59B,YAAY,IAAI,IAAI,CAACO,cAAc,EAAE;MAC1C,IAAI,CAAC4hC,iBAAiB,CAAC,CAAC;IAC5B;IACA,QAAQ,IAAI,CAACljC,MAAM;MACf,KAAKC,WAAW,CAAC0D,GAAG;QAChB,IAAI,CAACrE,SAAS,GAAG,UAAUggC,IAAI,EAAE;UAC7B,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,KAAK;QAC1D,CAAC;QACD,IAAI,CAAC1jC,UAAU,GAAGkiC,UAAU,CAACQ,MAAM;QACnC,IAAI,CAAC6E,EAAE,GAAG,IAAI,CAAChF,aAAa,GAAGyE,IAAI;QACnC,IAAI,CAACxjC,EAAE,GAAG,IAAI,CAACf,WAAW,GAAGukC,IAAI;QACjC,IAAI,CAAC1jC,EAAE,GAAG0jC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;QACpC;MACJ,KAAK3iC,WAAW,CAACnC,MAAM;QACnB,IAAI,CAACwB,SAAS,GAAG,UAAUggC,IAAI,EAAE;UAC7B,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,KAAK;QAC1D,CAAC;QACD,IAAI,CAAC1jC,UAAU,GAAGkiC,UAAU,CAACQ,MAAM;QACnC,IAAI,CAAC6E,EAAE,GAAG,IAAI,CAAChF,aAAa,GAAGyE,IAAI;QACnC,IAAI,CAACxjC,EAAE,GAAG,IAAI,CAACf,WAAW,GAAGukC,IAAI;QACjC,IAAI,CAAC1jC,EAAE,GAAG0jC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;QACpC;MACJ,KAAK3iC,WAAW,CAACC,IAAI;QACjB,IAAI,CAACZ,SAAS,GAAG,UAAUggC,IAAI,EAAE;UAC7B,OAAO,cAAc,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG;QAC1D,CAAC;QACD,IAAI,CAAC1jC,UAAU,GAAGkiC,UAAU,CAACuB,GAAG;QAChC,IAAI,CAAC+D,EAAE,GAAG,IAAI,CAACjF,aAAa,GAAG,CAACyE,IAAI;QACpC,IAAI,CAACzjC,EAAE,GAAG,IAAI,CAACd,WAAW,GAAG,CAACukC,IAAI;QAClC,IAAI,CAAC1jC,EAAE,GAAG,OAAO;QACjB;MACJ,KAAKe,WAAW,CAACE,KAAK;QAClB,IAAI,CAACb,SAAS,GAAG,UAAUggC,IAAI,EAAE;UAC7B,OAAO,cAAc,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG;QAC1D,CAAC;QACD,IAAI,CAAC1jC,UAAU,GAAGkiC,UAAU,CAACuF,KAAK;QAClC,IAAI,CAACD,EAAE,GAAG,IAAI,CAACjF,aAAa,GAAG,CAACyE,IAAI;QACpC,IAAI,CAACzjC,EAAE,GAAG,IAAI,CAACd,WAAW,GAAG,CAACukC,IAAI;QAClC,IAAI,CAAC1jC,EAAE,GAAG,OAAO;QACjB;MACJ;IACJ;IACAwqB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAqE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACI,MAAM,GAAG,IAAI,CAACnE,aAAa,CAACjK,IAAI,CAACzgC,GAAG,CAAC20B,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC9nB,cAAc,CAACiiC,GAAG,CAAC/L,IAAI,IAAIA,IAAI,CAAC/2B,KAAK,CAAC,CAAC,CAAC;IACnG,IAAI,CAAC+iC,MAAM,GAAG,IAAI,CAACrE,aAAa,CAACjK,IAAI,CAACxgC,GAAG,CAAC00B,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC9nB,cAAc,CAACiiC,GAAG,CAAC/L,IAAI,IAAIA,IAAI,CAAC/2B,KAAK,CAAC,CAAC,CAAC;IACnG,IAAI,CAACiiC,mBAAmB,GAAG,IAAI,CAACphC,cAAc,CAAC5C,MAAM;IACrD,IAAI,CAACc,iBAAiB,GAAGwiC,WAAW,CAAC,CAAC,EAAE,IAAI,CAACwB,MAAM,EAAE,IAAI,CAAC7jC,aAAa,EAAE,IAAI,CAAC2jC,MAAM,GAAG,IAAI,CAACE,MAAM,EAAE,CAAC,EAAE,CACnG,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACR,CAAC;EACN;EACAxE,QAAQA,CAAA,EAAG;IACP,IAAIxhC,KAAK;IACT,MAAMs/B,QAAQ,GAAG,IAAI,CAAC0D,WAAW,CAAC,EAAE,CAAC;IACrC,MAAMC,aAAa,GAAG,IAAI,CAACD,WAAW,CAAC,EAAE,CAAC;IAC1C,IAAI,IAAI,CAACE,UAAU,EAAE;MACjBljC,KAAK,GAAG,IAAI,CAACkjC,UAAU;IAC3B,CAAC,MACI,IAAI,IAAI,CAAC/B,KAAK,CAACnhC,KAAK,EAAE;MACvBA,KAAK,GAAG,IAAI,CAACmhC,KAAK,CAACnhC,KAAK,CAAC4rB,KAAK,CAAC,IAAI,CAACuV,KAAK,EAAE,CAAC8B,aAAa,CAAC,CAAC;IAC/D,CAAC,MACI;MACDjjC,KAAK,GAAG,IAAI,CAACmhC,KAAK,CAAC3lC,MAAM,CAAC,CAAC;MAC3BwE,KAAK,GAAGq/B,WAAW,CAACr/B,KAAK,EAAEs/B,QAAQ,CAAC;IACxC;IACA,OAAOt/B,KAAK;EAChB;EACAgjC,WAAWA,CAACiD,UAAU,EAAE;IACpB,OAAOvO,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACj7B,MAAM,GAAGmmC,UAAU,CAAC;EAC/C;EACAznC,aAAaA,CAACsjC,IAAI,EAAE;IAChB,OAAQ,aAAY,IAAI,CAACH,aAAa,CAACG,IAAI,CAAE,IAAG,IAAI,CAACrB,eAAgB,GAAE;EAC3E;EACA7hC,iBAAiBA,CAAA,EAAG;IAChB,OAAQ,gBAAe;EAC3B;EACAd,QAAQA,CAACjD,KAAK,EAAE;IACZ,OAAO,IAAI,CAACwE,SAAS,GAAG4/B,SAAS,CAACpkC,KAAK,EAAE,IAAI,CAAC0E,aAAa,CAAC,GAAG1E,KAAK;EACxE;EACAsqC,uBAAuBA,CAAA,EAAG;IACtB,MAAMe,QAAQ,GAAGxO,IAAI,CAACxgC,GAAG,CAAC,GAAG,IAAI,CAAC8I,KAAK,CAAC+lC,GAAG,CAAC9V,CAAC,IAAI,IAAI,CAACnyB,QAAQ,CAAC,IAAI,CAACW,UAAU,CAACwxB,CAAC,CAAC,CAAC,CAAC/uB,MAAM,CAAC,CAAC;IAC3F,MAAM+gC,SAAS,GAAG,CAAC;IACnB,OAAOiE,QAAQ,GAAGjE,SAAS;EAC/B;EACAvkC,UAAUA,CAAC7C,KAAK,EAAE;IACd,IAAIA,KAAK,CAAC4hC,QAAQ,CAAC,CAAC,CAACv7B,MAAM,GAAG,IAAI,CAAC3B,aAAa,IAAI,IAAI,CAAC4hC,KAAK,CAACS,SAAS,EAAE;MACtE;MACA,MAAMuE,cAAc,GAAG,IAAI,CAAC5mC,aAAa;MACzC,MAAMogC,QAAQ,GAAGjI,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;MACxD,IAAIjC,QAAQ,IAAI,CAAC,EAAE;QACf,OAAO,CAAC,IAAI,CAAC7hC,QAAQ,CAACjD,KAAK,CAAC,CAAC;MACjC;MACA,OAAO4kC,YAAY,CAAC5kC,KAAK,EAAEsrC,cAAc,EAAEzO,IAAI,CAACzgC,GAAG,CAAC0oC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACrE;IACA,OAAO,CAAC,IAAI,CAAClhC,UAAU,CAAC5D,KAAK,CAAC,CAAC;EACnC;AACJ;AACAoqC,mBAAmB,CAAClV,IAAI,YAAAqW,4BAAAnW,CAAA;EAAA,YAAAA,CAAA,IAAwFgV,mBAAmB,EAjtDzB7wC,EAAE,CAAA87B,iBAAA,CAitDyC77B,WAAW;AAAA,CAA4C;AAC5M4wC,mBAAmB,CAAC5U,IAAI,kBAltDkFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAktDRo/B,mBAAmB;EAAA1U,SAAA;EAAAC,SAAA,WAAA6V,0BAAApuC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAltDb7D,EAAE,CAAAs8B,WAAA,CAAAl0B,GAAA;IAAA;IAAA,IAAAvE,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAqpC,YAAA,GAAA5Q,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA8P,KAAA;IAAA3+B,MAAA;IAAA/C,aAAA;IAAAyjC,UAAA;IAAAxjC,UAAA;IAAAL,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAR,aAAA;IAAAmD,aAAA;IAAArC,MAAA;IAAAgE,cAAA;IAAAT,aAAA;IAAAE,YAAA;IAAAtD,SAAA;EAAA;EAAA8zB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAx+B,GAAA;EAAA+wB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAwtC,6BAAAruC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CAmtDzF,CAAC;MAntDsF9G,EAAE,CAAAmE,cAAA,gBAmtDzF,CAAC;MAntDsFnE,EAAE,CAAAoE,UAAA,IAAAqJ,qCAAA,cAgvD/F,CAAC;MAhvD4FzN,EAAE,CAAAqE,YAAA,CAivDjG,CAAC;MAjvD8FrE,EAAE,CAAAoE,UAAA,IAAAuJ,wCAAA,iBAwvDvG,CAAC;MAxvDoG3N,EAAE,CAAAoE,UAAA,IAAAoK,qCAAA,cAwwDjG,CAAC;MAxwD8FxO,EAAE,CAAAoE,UAAA,IAAA8K,qCAAA,cA+xDjG,CAAC;IAAA;IAAA,IAAArL,EAAA;MA/xD8F7D,EAAE,CAAAwE,SAAA,EAotDvE,CAAC;MAptDoExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA8H,KAotDvE,CAAC;MAptDoE5L,EAAE,CAAAwE,SAAA,EAovDrC,CAAC;MApvDkCxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAgtC,mBAAA,QAAAhtC,GAAA,CAAA8tC,MAAA,IAAA9tC,GAAA,CAAA4tC,MAAA,IAAA5tC,GAAA,CAAAqL,YAovDrC,CAAC;MApvDkCnP,EAAE,CAAAwE,SAAA,EAyvDzE,CAAC;MAzvDsExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA8H,KAyvDzE,CAAC;MAzvDsE5L,EAAE,CAAAwE,SAAA,EA0wD7D,CAAC;MA1wD0DxE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA4L,cA0wD7D,CAAC;IAAA;EAAA;EAAA6tB,YAAA,GAsBNv8B,EAAE,CAACklC,OAAO,EAAgGllC,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACnR;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAjyD0G79B,EAAE,CAAA89B,iBAAA,CAiyDjB+S,mBAAmB,EAAc,CAAC;IACjHp/B,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtyB,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC9DxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE8sC,KAAK,EAAE,CAAC;MACpCt7B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+N,MAAM,EAAE,CAAC;MACTqD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgL,aAAa,EAAE,CAAC;MAChBoG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyuC,UAAU,EAAE,CAAC;MACbr9B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEiL,UAAU,EAAE,CAAC;MACbmG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4K,SAAS,EAAE,CAAC;MACZwG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8K,aAAa,EAAE,CAAC;MAChBsG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+K,cAAc,EAAE,CAAC;MACjBqG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuK,aAAa,EAAE,CAAC;MAChB6G,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0N,aAAa,EAAE,CAAC;MAChB0D,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqP,cAAc,EAAE,CAAC;MACjB+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4O,aAAa,EAAE,CAAC;MAChBwC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8O,YAAY,EAAE,CAAC;MACfsC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwL,SAAS,EAAE,CAAC;MACZ4F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+rC,iBAAiB,EAAE,CAAC;MACpB36B,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEusC,YAAY,EAAE,CAAC;MACf17B,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMkb,cAAc,CAAC;EACjB3X,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC5vB,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAC6E,OAAO,GAAGpB,WAAW,CAACC,IAAI;IAC/B,IAAI,CAAC8jC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACvmC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACugC,iBAAiB,GAAG,IAAIzrC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC0xC,cAAc,GAAG,QAAQ;IAC9B,IAAI,CAACrmC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACke,IAAI,GAAG,MAAM;IAClB,IAAI,CAACY,MAAM,GAAG,MAAM;IACpB,IAAI,CAACxf,UAAU,GAAG,MAAM;IACxB,IAAI,CAACgc,WAAW,GAAG,CAAC;IACpB,IAAI,CAACsoB,OAAO,GAAG,CAAC;EACpB;EACAhN,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACt1B,MAAM,GAAG,EAAE,IAAI,CAACoiC,WAAW,GAAG,IAAI,CAACxC,OAAO,CAAC;IAChD,IAAI,IAAI,CAACngC,OAAO,KAAKpB,WAAW,CAACE,KAAK,EAAE;MACpC,IAAI,CAACvC,WAAW,GAAG,EAAE;MACrB,IAAI,CAAC0B,SAAS,GAAI,aAAY,IAAI,CAACsC,MAAM,GAAG,IAAI,CAACvE,IAAI,CAACE,KAAM,OAAM;IACtE,CAAC,MACI;MACD,IAAI,CAAC+B,SAAS,GAAI,aAAY,IAAI,CAACsC,MAAO,OAAM;IACpD;IACA,IAAI,IAAI,CAACsiC,cAAc,KAAKngC,SAAS,EAAE;MACnC,IAAI,CAAC9G,aAAa,GAAG,CAAC,IAAI,CAACinC,cAAc,CAAC;IAC9C;EACJ;EACA/iC,cAAcA,CAAC;IAAE5D;EAAM,CAAC,EAAE;IACtB,IAAIA,KAAK,KAAK,IAAI,CAACK,WAAW,IAAI,IAAI,CAACyD,OAAO,KAAKpB,WAAW,CAACE,KAAK,EAAE;MAClE,IAAI,CAACvC,WAAW,GAAGL,KAAK,GAAG,IAAI,CAACK,WAAW;MAC3C8rB,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACpmC,IAAI,CAAC;UAAE2F;QAAM,CAAC,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC;IACT,CAAC,MACI,IAAIA,KAAK,KAAK,IAAI,CAACK,WAAW,EAAE;MACjC,IAAI,CAACA,WAAW,GAAGL,KAAK;MACxBmsB,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACpmC,IAAI,CAAC;UAAE2F;QAAM,CAAC,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC;IACT;EACJ;AACJ;AACAwmC,cAAc,CAACxW,IAAI,YAAA4W,uBAAA1W,CAAA;EAAA,YAAAA,CAAA,IAAwFsW,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAAClW,IAAI,kBA78DuFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA68Db0gC,cAAc;EAAAhW,SAAA;EAAAC,SAAA,WAAAoW,qBAAA3uC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA78DH7D,EAAE,CAAAs8B,WAAA,CA68DklBuU,mBAAmB;IAAA;IAAA,IAAAhtC,EAAA;MAAA,IAAA04B,EAAA;MA78DvmBv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAmsC,cAAA,GAAA1T,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAztB,MAAA;IAAA/D,IAAA;IAAAR,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAQ,KAAA;IAAAhB,aAAA;IAAAslC,SAAA;IAAAnkC,SAAA;IAAAumC,cAAA;IAAA7iC,OAAA;IAAAC,cAAA;IAAAP,YAAA;IAAAF,aAAA;IAAAmjC,WAAA;IAAAvmC,SAAA;EAAA;EAAA8zB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAv7B,GAAA;EAAA8tB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA+tC,wBAAA5uC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA88DvC,CAAC;MA98DoC9G,EAAE,CAAAmE,cAAA,OA88DvC,CAAC;MA98DoCnE,EAAE,CAAAoE,UAAA,IAAAiL,gCAAA,eAk+DrG,CAAC;MAl+DkGrP,EAAE,CAAAoE,UAAA,IAAAuL,gCAAA,cA4+D9F,CAAC;MA5+D2F3P,EAAE,CAAAqE,YAAA,CA6+DjG,CAAC;IAAA;IAAA,IAAAR,EAAA;MA7+D8F7D,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAAuuC,cA88DrE,CAAC,cAAAvuC,GAAA,CAAA4J,SAAD,CAAC;MA98DkE1N,EAAE,CAAAwE,SAAA,EAi9DxF,CAAC;MAj9DqFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA0L,MAi9DxF,CAAC;MAj9DqFxP,EAAE,CAAAwE,SAAA,EAs+DrF,CAAC;MAt+DkFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAosC,SAs+DrF,CAAC;IAAA;EAAA;EAAA3S,YAAA,GAQkBsT,mBAAmB,EAA0TtG,kBAAkB,EAA0HvpC,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACloB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/+D0G79B,EAAE,CAAA89B,iBAAA,CA++DjBqU,cAAc,EAAc,CAAC;IAC5G1gC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEv0B,MAAM,EAAE,CAAC;MACvBiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoL,IAAI,EAAE,CAAC;MACPgG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4K,SAAS,EAAE,CAAC;MACZwG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8K,aAAa,EAAE,CAAC;MAChBsG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+K,cAAc,EAAE,CAAC;MACjBqG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuL,KAAK,EAAE,CAAC;MACR6F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuK,aAAa,EAAE,CAAC;MAChB6G,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6vC,SAAS,EAAE,CAAC;MACZz+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0L,SAAS,EAAE,CAAC;MACZ0F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEiyC,cAAc,EAAE,CAAC;MACjB7gC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoP,OAAO,EAAE,CAAC;MACVgC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqP,cAAc,EAAE,CAAC;MACjB+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8O,YAAY,EAAE,CAAC;MACfsC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4O,aAAa,EAAE,CAAC;MAChBwC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+xC,WAAW,EAAE,CAAC;MACd3gC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwL,SAAS,EAAE,CAAC;MACZ4F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+rC,iBAAiB,EAAE,CAAC;MACpB36B,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEqvC,cAAc,EAAE,CAAC;MACjBx+B,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAAC4Z,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6B,UAAU,CAAC;AAEjBA,UAAU,CAAC/W,IAAI,YAAAgX,mBAAA9W,CAAA;EAAA,YAAAA,CAAA,IAAwF6W,UAAU;AAAA,CAAkD;AACnKA,UAAU,CAACE,IAAI,kBAjkE2F5yC,EAAE,CAAA6yC,gBAAA;EAAAphC,IAAA,EAikEJihC;AAAU,EAAmP;AACrWA,UAAU,CAACI,IAAI,kBAlkE2F9yC,EAAE,CAAA+yC,gBAAA;EAAAC,OAAA,GAkkEkB,CAAC7xC,YAAY,CAAC;AAAA,EAAI;AAChJ;EAAA,QAAA08B,SAAA,oBAAAA,SAAA,KAnkE0G79B,EAAE,CAAA89B,iBAAA,CAmkEjB4U,UAAU,EAAc,CAAC;IACxGjhC,IAAI,EAAE3Q,QAAQ;IACdm2B,IAAI,EAAE,CAAC;MACC+b,OAAO,EAAE,CAAC7xC,YAAY,CAAC;MACvB8xC,YAAY,EAAE,CAAC1I,kBAAkB,EAAEkF,cAAc,EAAEtD,mBAAmB,EAAEgG,cAAc,EAAEtB,mBAAmB,CAAC;MAC5GqC,OAAO,EAAE,CAAC3I,kBAAkB,EAAEkF,cAAc,EAAEtD,mBAAmB,EAAEgG,cAAc,EAAEtB,mBAAmB;IAC1G,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,IAAIsC,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;EACjCA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;AACrC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAACA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK;EAC3CA,SAAS,CAACA,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO;EACjDA,SAAS,CAACA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,WAAW;AACjE,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,MAAMC,gBAAgB,CAAC;EACnB7Y,WAAWA,CAAC8Y,cAAc,EAAEC,gBAAgB,EAAE7Y,QAAQ,EAAE;IACpD,IAAI,CAAC4Y,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAAC7Y,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC8Y,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC7hC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC8hC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACz3B,gBAAgB,GAAGwc,cAAc,CAAC3mB,GAAG;IAC1C,IAAI,CAAC6hC,gBAAgB,GAAGlb,cAAc,CAACO,MAAM;IAC7C,IAAI,CAAC9c,WAAW,GAAGg3B,UAAU,CAACU,OAAO;IACrC,IAAI,CAACC,0BAA0B,GAAG,IAAI;IACtC,IAAI,CAACC,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACC,kBAAkB,GAAG,GAAG;IAC7B,IAAI,CAACC,kBAAkB,GAAG,GAAG;IAC7B,IAAI,CAACC,gBAAgB,GAAGd,SAAS,CAACe,GAAG;IACrC,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,IAAI,GAAG,IAAI1zC,YAAY,CAAC,CAAC;IAC9B,IAAI,CAAC2zC,IAAI,GAAG,IAAI3zC,YAAY,CAAC,CAAC;EAClC;EACA,IAAI4zC,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACL,gBAAgB,KAAKd,SAAS,CAACe,GAAG,IAAI,IAAI,CAACD,gBAAgB,KAAKd,SAAS,CAACoB,KAAK;EAC/F;EACA,IAAIC,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACP,gBAAgB,KAAKd,SAAS,CAACe,GAAG,IAAI,IAAI,CAACD,gBAAgB,KAAKd,SAAS,CAACsB,SAAS;EACnG;EACA1L,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC2L,WAAW,CAAC,IAAI,CAAC;EAC1B;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACL,eAAe,EAAE;MACtB,IAAI,CAACM,WAAW,CAAC,CAAC;IACtB;EACJ;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACP,eAAe,EAAE;MACtB,IAAI,CAACI,WAAW,CAAC,IAAI,CAAC;IAC1B;EACJ;EACAnQ,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACiQ,eAAe,EAAE;MACtB,IAAI,CAACI,WAAW,CAAC,CAAC;IACtB;EACJ;EACApQ,YAAYA,CAACzO,MAAM,EAAE;IACjB,IAAI,IAAI,CAACye,eAAe,IAAI,IAAI,CAACV,wBAAwB,EAAE;MACvDnc,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;MAC1B,IAAI,IAAI,CAACyH,SAAS,EAAE;QAChB,MAAMmW,UAAU,GAAG,IAAI,CAACnW,SAAS,CAACI,QAAQ,CAACvE,OAAO,CAACS,aAAa;QAChE,MAAM8Z,QAAQ,GAAGD,UAAU,CAACC,QAAQ,CAAChf,MAAM,CAAC;QAC5C,IAAIgf,QAAQ,EACR;MACR;MACA,IAAI,CAACL,WAAW,CAAC,IAAI,CAACP,oBAAoB,CAAC;IAC/C;EACJ;EACAa,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACR,eAAe,EAAE;MACtB,IAAI,CAACE,WAAW,CAAC,IAAI,CAAC;IAC1B;EACJ;EACAE,WAAWA,CAACK,SAAS,EAAE;IACnB,IAAI,IAAI,CAACtW,SAAS,IAAI,IAAI,CAAC/sB,eAAe,EACtC;IACJ,MAAMsjC,IAAI,GAAGD,SAAS,GAChB,CAAC,GACD,IAAI,CAACjB,kBAAkB,IAAImB,SAAS,CAACC,SAAS,CAACjR,KAAK,CAAC,+BAA+B,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACtGxM,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGW,UAAU,CAAC,MAAM;MAC5B,IAAI,CAACwb,cAAc,CAAChU,UAAU,CAAC,CAAC;MAChC,MAAMtI,OAAO,GAAG,IAAI,CAACse,kBAAkB,CAAC,CAAC;MACzC,IAAI,CAAC1W,SAAS,GAAG,IAAI,CAAC0U,cAAc,CAAC9U,MAAM,CAACxH,OAAO,CAAC;MACpD;MACAc,UAAU,CAAC,MAAM;QACb,IAAI,IAAI,CAAC8G,SAAS,EAAE;UAChB,IAAI,CAAC2W,gBAAgB,CAAC,IAAI,CAAC3W,SAAS,CAACI,QAAQ,CAACvE,OAAO,CAACS,aAAa,CAAC;QACxE;MACJ,CAAC,EAAE,EAAE,CAAC;MACN,IAAI,CAACmZ,IAAI,CAACruC,IAAI,CAAC,IAAI,CAAC;IACxB,CAAC,EAAEmvC,IAAI,CAAC;EACZ;EACAI,gBAAgBA,CAACtjC,OAAO,EAAE;IACtB;IACA,IAAI,CAACujC,sBAAsB,GAAG,IAAI,CAAC9a,QAAQ,CAAC+a,MAAM,CAACxjC,OAAO,EAAE,YAAY,EAAE,MAAM;MAC5E2lB,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC9B,CAAC,CAAC;IACF;IACA,IAAI,IAAI,CAAC4c,wBAAwB,EAAE;MAC/B,IAAI,CAAC2B,sBAAsB,GAAG,IAAI,CAAChb,QAAQ,CAAC+a,MAAM,CAACxjC,OAAO,EAAE,YAAY,EAAE,MAAM;QAC5E,IAAI,CAAC0iC,WAAW,CAAC,IAAI,CAACP,oBAAoB,CAAC;MAC/C,CAAC,CAAC;IACN;IACA;IACA,IAAI,IAAI,CAACN,0BAA0B,EAAE;MACjC,IAAI,CAAC6B,kBAAkB,GAAG,IAAI,CAACjb,QAAQ,CAAC+a,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAEG,KAAK,IAAI;QACvE,MAAMZ,QAAQ,GAAG/iC,OAAO,CAAC+iC,QAAQ,CAACY,KAAK,CAAC5f,MAAM,CAAC;QAC/C,IAAI,CAACgf,QAAQ,EACT,IAAI,CAACL,WAAW,CAAC,CAAC;MAC1B,CAAC,CAAC;IACN;EACJ;EACAA,WAAWA,CAACO,SAAS,GAAG,KAAK,EAAE;IAC3B,IAAI,CAAC,IAAI,CAACtW,SAAS,EACf;IACJ,MAAMiX,SAAS,GAAGA,CAAA,KAAM;MACpB;MACA,IAAI,IAAI,CAACH,sBAAsB,EAC3B,IAAI,CAACA,sBAAsB,CAAC,CAAC;MACjC,IAAI,IAAI,CAACF,sBAAsB,EAC3B,IAAI,CAACA,sBAAsB,CAAC,CAAC;MACjC,IAAI,IAAI,CAACG,kBAAkB,EACvB,IAAI,CAACA,kBAAkB,CAAC,CAAC;MAC7B;MACA,IAAI,CAACrB,IAAI,CAACtuC,IAAI,CAAC,IAAI,CAAC;MACpB;MACA,IAAI,CAACstC,cAAc,CAACvU,OAAO,CAAC,IAAI,CAACH,SAAS,CAAC;MAC3C,IAAI,CAACA,SAAS,GAAGzsB,SAAS;IAC9B,CAAC;IACDylB,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC1B,IAAI,CAAC+d,SAAS,EAAE;MACZ,IAAI,CAAC/d,OAAO,GAAGW,UAAU,CAAC+d,SAAS,EAAE,IAAI,CAAC7B,kBAAkB,CAAC;IACjE,CAAC,MACI;MACD6B,SAAS,CAAC,CAAC;IACf;EACJ;EACAP,kBAAkBA,CAAA,EAAG;IACjB,OAAO;MACHtwC,KAAK,EAAE,IAAI,CAAC8wC,YAAY;MACxBpxC,QAAQ,EAAE,IAAI,CAACwN,eAAe;MAC9BipB,IAAI,EAAE,IAAI,CAACoY,gBAAgB,CAAC9Y,OAAO;MACnCV,SAAS,EAAE,IAAI,CAAC7d,gBAAgB;MAChC6c,SAAS,EAAE,IAAI,CAAC6a,gBAAgB;MAChCniC,IAAI,EAAE,IAAI,CAAC0K,WAAW;MACtBmf,SAAS,EAAE,IAAI,CAACqY,gBAAgB;MAChC7Y,QAAQ,EAAE,IAAI,CAAC0Y,eAAe;MAC9BxZ,OAAO,EAAE,IAAI,CAAC0Z,cAAc;MAC5B9uC,OAAO,EAAE,IAAI,CAACmxC;IAClB,CAAC;EACL;AACJ;AACA1C,gBAAgB,CAAC1X,IAAI,YAAAqa,yBAAAna,CAAA;EAAA,YAAAA,CAAA,IAAwFwX,gBAAgB,EAxuEnBrzC,EAAE,CAAA87B,iBAAA,CAwuEmCwG,cAAc,GAxuEnDtiC,EAAE,CAAA87B,iBAAA,CAwuE8D97B,EAAE,CAACi2C,gBAAgB,GAxuEnFj2C,EAAE,CAAA87B,iBAAA,CAwuE8F97B,EAAE,CAACg8B,SAAS;AAAA,CAA4C;AAClQqX,gBAAgB,CAACnL,IAAI,kBAzuEqFloC,EAAE,CAAAmoC,iBAAA;EAAA12B,IAAA,EAyuEX4hC,gBAAgB;EAAAlX,SAAA;EAAAS,YAAA,WAAAsZ,8BAAAryC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAzuEP7D,EAAE,CAAAyF,UAAA,qBAAA0wC,4CAAA;QAAA,OAyuEXryC,GAAA,CAAA8wC,OAAA,CAAQ,CAAC;MAAA,oBAAAwB,yCAAA;QAAA,OAATtyC,GAAA,CAAAgxC,MAAA,CAAO,CAAC;MAAA,0BAAAuB,+CAAA;QAAA,OAARvyC,GAAA,CAAA0gC,YAAA,CAAa,CAAC;MAAA,0BAAA8R,+CAAA3wC,MAAA;QAAA,OAAd7B,GAAA,CAAA2gC,YAAA,CAAA9+B,MAAA,CAAAqwB,MAA0B,CAAC;MAAA,qBAAAugB,0CAAA;QAAA,OAA3BzyC,GAAA,CAAAmxC,YAAA,CAAa,CAAC;MAAA;IAAA;EAAA;EAAAhY,MAAA;IAAAuW,eAAA;IAAAsC,YAAA;IAAArC,mBAAA;IAAAC,cAAA;IAAA7hC,eAAA;IAAA8hC,gBAAA;IAAAz3B,gBAAA;IAAA03B,gBAAA;IAAAz3B,WAAA;IAAA23B,0BAAA;IAAAC,wBAAA;IAAAC,kBAAA;IAAAC,kBAAA;IAAA/hC,eAAA;IAAAgiC,gBAAA;IAAA6B,cAAA;IAAA3B,oBAAA;EAAA;EAAAzU,OAAA;IAAA0U,IAAA;IAAAC,IAAA;EAAA;AAAA,EAAg7B;AAC/hC;EAAA,QAAAzW,SAAA,oBAAAA,SAAA,KA1uE0G79B,EAAE,CAAA89B,iBAAA,CA0uEjBuV,gBAAgB,EAAc,CAAC;IAC9G5hC,IAAI,EAAE5Q,SAAS;IACfo2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE;IAAgB,CAAC;EACxC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtsB,IAAI,EAAE6wB;IAAe,CAAC,EAAE;MAAE7wB,IAAI,EAAEzR,EAAE,CAACi2C;IAAiB,CAAC,EAAE;MAAExkC,IAAI,EAAEzR,EAAE,CAACg8B;IAAU,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEwX,eAAe,EAAE,CAAC;MAC3J/hC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEy1C,YAAY,EAAE,CAAC;MACfrkC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEozC,mBAAmB,EAAE,CAAC;MACtBhiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqzC,cAAc,EAAE,CAAC;MACjBjiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwR,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEszC,gBAAgB,EAAE,CAAC;MACnBliC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6b,gBAAgB,EAAE,CAAC;MACnBzK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuzC,gBAAgB,EAAE,CAAC;MACnBniC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8b,WAAW,EAAE,CAAC;MACd1K,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyzC,0BAA0B,EAAE,CAAC;MAC7BriC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0zC,wBAAwB,EAAE,CAAC;MAC3BtiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2zC,kBAAkB,EAAE,CAAC;MACrBviC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4zC,kBAAkB,EAAE,CAAC;MACrBxiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6R,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6zC,gBAAgB,EAAE,CAAC;MACnBziC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE01C,cAAc,EAAE,CAAC;MACjBtkC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+zC,oBAAoB,EAAE,CAAC;MACvB3iC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEg0C,IAAI,EAAE,CAAC;MACP5iC,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0zC,IAAI,EAAE,CAAC;MACP7iC,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEg0C,OAAO,EAAE,CAAC;MACVnjC,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC,CAAC;IAAE6d,MAAM,EAAE,CAAC;MACTrjC,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,MAAM;IACjB,CAAC,CAAC;IAAEuN,YAAY,EAAE,CAAC;MACf/yB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfhzB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC;IAC1C,CAAC,CAAC;IAAEge,YAAY,EAAE,CAAC;MACfxjC,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMuf,aAAa,CAAC;AAEpBA,aAAa,CAAC7a,IAAI,YAAA8a,sBAAA5a,CAAA;EAAA,YAAAA,CAAA,IAAwF2a,aAAa;AAAA,CAAkD;AACzKA,aAAa,CAAC5D,IAAI,kBAvyEwF5yC,EAAE,CAAA6yC,gBAAA;EAAAphC,IAAA,EAuyED+kC;AAAa,EAA6I;AACrQA,aAAa,CAAC1D,IAAI,kBAxyEwF9yC,EAAE,CAAA+yC,gBAAA;EAAA3L,SAAA,EAwyEyB,CAACnH,gBAAgB,EAAEqC,cAAc,CAAC;EAAA0Q,OAAA,GAAY,CAAC7xC,YAAY,CAAC;AAAA,EAAI;AACrM;EAAA,QAAA08B,SAAA,oBAAAA,SAAA,KAzyE0G79B,EAAE,CAAA89B,iBAAA,CAyyEjB0Y,aAAa,EAAc,CAAC;IAC3G/kC,IAAI,EAAE3Q,QAAQ;IACdm2B,IAAI,EAAE,CAAC;MACCgc,YAAY,EAAE,CAAC1Y,uBAAuB,EAAE8Y,gBAAgB,CAAC;MACzDjM,SAAS,EAAE,CAACnH,gBAAgB,EAAEqC,cAAc,CAAC;MAC7C4Q,OAAO,EAAE,CAAC3Y,uBAAuB,EAAE8Y,gBAAgB,CAAC;MACpDL,OAAO,EAAE,CAAC7xC,YAAY,CAAC;MACvBu1C,eAAe,EAAE,CAACnc,uBAAuB;IAC7C,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMoc,KAAK,GAAG,CAAC,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS7gB,EAAEA,CAAA,EAAG;EACV,IAAI8gB,KAAK,GAAG,CAAC,MAAM,GAAG,CAAEtT,IAAI,CAACuT,MAAM,CAAC,CAAC,GAAGvT,IAAI,CAACwT,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,IAAK,CAAC,EAAEzO,QAAQ,CAAC,EAAE,CAAC,EAAE2C,KAAK,CAAC,CAAC,CAAC,CAAC;EACtF;EACA4L,KAAK,GAAI,IAAGA,KAAM,EAAC;EACnB;EACA,IAAI,CAACD,KAAK,CAACC,KAAK,CAAC,EAAE;IACfD,KAAK,CAACC,KAAK,CAAC,GAAG,IAAI;IACnB,OAAOA,KAAK;EAChB;EACA,OAAO9gB,EAAE,CAAC,CAAC;AACf;AAEA,IAAIzP,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,UAAU,CAAC,GAAG,UAAU;EACvCA,cAAc,CAAC,YAAY,CAAC,GAAG,YAAY;AAC/C,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAM0wB,0BAA0B,CAAC;EAC7Bvc,WAAWA,CAAA,EAAG;IACV,IAAI,CAACvuB,WAAW,GAAGoa,cAAc,CAACjV,QAAQ;EAC9C;EACAwxB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACt1B,EAAE,GAAG,IAAI;IACd,IAAI,CAACikC,EAAE,GAAG,IAAI;IACd,IAAI,CAAChkC,EAAE,GAAG,IAAI;IACd,IAAI,CAAC+jC,EAAE,GAAG,IAAI;IACd,IAAI,IAAI,CAACtlC,WAAW,KAAKoa,cAAc,CAACtK,UAAU,EAAE;MAChD,IAAI,CAACy1B,EAAE,GAAG,MAAM;IACpB,CAAC,MACI,IAAI,IAAI,CAACvlC,WAAW,KAAKoa,cAAc,CAACjV,QAAQ,EAAE;MACnD,IAAI,CAAC5D,EAAE,GAAG,MAAM;IACpB;EACJ;AACJ;AACAupC,0BAA0B,CAACpb,IAAI,YAAAqb,mCAAAnb,CAAA;EAAA,YAAAA,CAAA,IAAwFkb,0BAA0B;AAAA,CAAmD;AACpMA,0BAA0B,CAAC9a,IAAI,kBAn2E2Ej8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAm2EDslC,0BAA0B;EAAA5a,SAAA;EAAAc,MAAA;IAAAhxB,WAAA;IAAA6C,IAAA;IAAAmoC,KAAA;EAAA;EAAAtT,QAAA,GAn2E3B3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA/6B,GAAA;EAAAstB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAwyC,oCAAArzC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CAo2Eb,CAAC;MAp2EU9G,EAAE,CAAAmE,cAAA,uBAo2Eb,CAAC;MAp2EUnE,EAAE,CAAAoE,UAAA,IAAAyL,+CAAA,iBA02ErG,CAAC;MA12EkG7P,EAAE,CAAAqE,YAAA,CA22EpF,CAAC;IAAA;IAAA,IAAAR,EAAA;MA32EiF7D,EAAE,CAAAyE,UAAA,OAAAX,GAAA,CAAAgL,IAo2E1E,CAAC;MAp2EuE9O,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAAyJ,EAo2E3D,CAAC,OAAAzJ,GAAA,CAAA0J,EAAD,CAAC,OAAA1J,GAAA,CAAA0tC,EAAD,CAAC,OAAA1tC,GAAA,CAAAytC,EAAD,CAAC;MAp2EwDvxC,EAAE,CAAAwE,SAAA,EAs2E5E,CAAC;MAt2EyExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAmzC,KAs2E5E,CAAC;IAAA;EAAA;EAAA1Z,YAAA,GAMSv8B,EAAE,CAACklC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAClM;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA72E0G79B,EAAE,CAAA89B,iBAAA,CA62EjBiZ,0BAA0B,EAAc,CAAC;IACxHtlC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,mCAAmC;MAC7Cr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE93B,WAAW,EAAE,CAAC;MAC5BwF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyO,IAAI,EAAE,CAAC;MACP2C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE42C,KAAK,EAAE,CAAC;MACRxlC,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM82C,eAAe,CAAC;EAClB3c,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC34B,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACwF,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;EACxC;EACAkQ,OAAOA,CAAA,EAAG;IACN,IAAI,CAAChP,MAAM,CAACmE,IAAI,CAAC,IAAI,CAAC8K,IAAI,CAAC;EAC/B;EACA0zB,YAAYA,CAAA,EAAG;IACX,IAAI,CAACr+B,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC8K,IAAI,CAAC;EACjC;EACA2zB,YAAYA,CAAA,EAAG;IACX,IAAI,CAACn+B,UAAU,CAACN,IAAI,CAAC,IAAI,CAAC8K,IAAI,CAAC;EACnC;EACA8xB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACjxB,UAAU,GAAGwlC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACzlC,UAAU,CAAC,GAAG,IAAI,CAACA,UAAU,CAAC4xB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;IACjF,IAAI,CAAC5xB,UAAU,IAAI,QAAQ;EAC/B;AACJ;AACAulC,eAAe,CAACxb,IAAI,YAAA2b,wBAAAzb,CAAA;EAAA,YAAAA,CAAA,IAAwFsb,eAAe;AAAA,CAAmD;AAC9KA,eAAe,CAAClb,IAAI,kBA15EsFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA05EZ0lC,eAAe;EAAAhb,SAAA;EAAAS,YAAA,WAAA2a,6BAAA1zC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA15EL7D,EAAE,CAAAyF,UAAA,mBAAA+xC,yCAAA;QAAA,OA05EZ1zC,GAAA,CAAA+M,OAAA,CAAQ,CAAC;MAAA,0BAAA4mC,8CAAA;QAAA,OAAT3zC,GAAA,CAAA0gC,YAAA,CAAa,CAAC;MAAA,0BAAAkT,8CAAA;QAAA,OAAd5zC,GAAA,CAAA2gC,YAAA,CAAa,CAAC;MAAA;IAAA;EAAA;EAAAxH,MAAA;IAAA5sB,EAAA;IAAAE,EAAA;IAAAggC,CAAA;IAAArmB,IAAA;IAAAY,MAAA;IAAAha,IAAA;IAAAc,UAAA;IAAA+lC,aAAA;IAAAtmB,aAAA;EAAA;EAAAsO,OAAA;IAAA99B,MAAA;IAAAsE,QAAA;IAAAG,UAAA;EAAA;EAAAq9B,QAAA,GA15EJ3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA16B,IAAA;EAAAitB,KAAA;EAAAC,IAAA;EAAAz4B,QAAA,WAAAkzC,yBAAA/zC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CAo6EvG,CAAC;MAp6EoG9G,EAAE,CAAA8E,SAAA,YAo6EvG,CAAC;IAAA;IAAA,IAAAjB,EAAA;MAp6EoG7D,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAAuM,EA45EzF,CAAC,OAAAvM,GAAA,CAAAyM,EAAD,CAAC,MAAAzM,GAAA,CAAAysC,CAAD,CAAC,SAAAzsC,GAAA,CAAAomB,IAAD,CAAC,WAAApmB,GAAA,CAAAgnB,MAAD,CAAC,YAAAhnB,GAAA,CAAA6zC,aAAD,CAAC,UAAA7zC,GAAA,CAAA8N,UAAD,CAAC,mBAAA9N,GAAA,CAAAutB,aAAD,CAAC;IAAA;EAAA;EAAAsM,aAAA;EAAAmG,eAAA;AAAA,EASsD;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAt6E0G79B,EAAE,CAAA89B,iBAAA,CAs6EjBqZ,eAAe,EAAc,CAAC;IAC7G1lC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE1zB,EAAE,EAAE,CAAC;MACnBoB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkQ,EAAE,EAAE,CAAC;MACLkB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkwC,CAAC,EAAE,CAAC;MACJ9+B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6pB,IAAI,EAAE,CAAC;MACPzY,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyqB,MAAM,EAAE,CAAC;MACTrZ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyQ,IAAI,EAAE,CAAC;MACPW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuR,UAAU,EAAE,CAAC;MACbH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEs3C,aAAa,EAAE,CAAC;MAChBlmC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgxB,aAAa,EAAE,CAAC;MAChB5f,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEuF,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACbmL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEiQ,OAAO,EAAE,CAAC;MACVY,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEuN,YAAY,EAAE,CAAC;MACf/yB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfhzB,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAI4gB,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU;EACnCA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;AACrC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC,MAAMC,qBAAqB,CAAC;EACxBtd,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAClpB,IAAI,GAAGomC,UAAU,CAACE,QAAQ;IAC/B,IAAI,CAAClmC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAChQ,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACwF,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC6Q,UAAU,GAAG,KAAK;IACvB,IAAI,CAACL,cAAc,GAAGkV,cAAc;IACpC,IAAI,CAACvU,cAAc,GAAG4mB,cAAc;IACpC,IAAI,CAAC1mB,UAAU,GAAGmhC,UAAU;IAC5B,IAAI,CAAC5hC,KAAK,GAAG,KAAK;EACtB;EACAq3B,QAAQA,CAAA,EAAG;IACP,IAAI,CAACv3B,UAAU,GAAG,MAAM,GAAGykB,EAAE,CAAC,CAAC,CAACuS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAAC73B,YAAY,GAAI,QAAO,IAAI,CAACa,UAAW,GAAE;IAC9C,IAAInQ,gBAAgB,CAAC,IAAI,CAACy5B,UAAU,CAAC,EAAE;MACnC,IAAI,CAACppB,KAAK,GAAG,IAAI;IACrB;EACJ;EACAqxB,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC0C,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACl1B,MAAM,GAAG,IAAI,CAAC4nC,eAAe,CAAC,CAAC;EACxC;EACAA,eAAeA,CAAA,EAAG;IACd,MAAMC,oBAAoB,GAAG,IAAI,CAACnnC,IAAI,CAAC6N,MAAM,CAAC+mB,SAAS,CAACI,CAAC,IAAI;MACzD,MAAMr/B,KAAK,GAAGq/B,CAAC,CAACh3B,IAAI;MACpB,OAAOrI,KAAK,IAAI,IAAI,CAACyxC,YAAY,IAAIzxC,KAAK,CAAC4hC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC6P,YAAY,CAAC7P,QAAQ,CAAC,CAAC,IAAIvC,CAAC,CAACj3B,KAAK,KAAKsD,SAAS;IACnH,CAAC,CAAC;IACF,IAAI8lC,oBAAoB,KAAK,CAAC,CAAC,EAAE;MAC7B;MACA,OAAO9lC,SAAS;IACpB;IACA,OAAO,IAAI,CAACgmC,oBAAoB,CAAC,IAAI,CAACrnC,IAAI,CAAC6N,MAAM,CAACs5B,oBAAoB,CAAC,EAAEA,oBAAoB,CAAC;EAClG;EACAE,oBAAoBA,CAACrS,CAAC,EAAErG,CAAC,EAAE;IACvB,MAAM9tB,UAAU,GAAG,IAAI,CAACb,IAAI,CAAChC,IAAI;IACjC,MAAMD,KAAK,GAAGi3B,CAAC,CAACj3B,KAAK;IACrB,MAAMpI,KAAK,GAAGq/B,CAAC,CAACh3B,IAAI;IACpB,MAAMspC,YAAY,GAAGpU,WAAW,CAACv9B,KAAK,CAAC;IACvC,IAAI4J,EAAE;IACN,IAAI,IAAI,CAACuG,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnChoC,EAAE,GAAG,IAAI,CAAC9E,MAAM,CAAC9E,KAAK,CAAC;IAC3B,CAAC,MACI,IAAI,IAAI,CAACmQ,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1Cv2B,EAAE,GAAG,IAAI,CAAC9E,MAAM,CAAC+sC,MAAM,CAAC7xC,KAAK,CAAC,CAAC;IACnC,CAAC,MACI;MACD4J,EAAE,GAAG,IAAI,CAAC9E,MAAM,CAAC9E,KAAK,CAAC;IAC3B;IACA,MAAM8J,EAAE,GAAG,IAAI,CAACf,MAAM,CAAC,IAAI,CAACiC,IAAI,KAAKomC,UAAU,CAACE,QAAQ,GAAGlpC,KAAK,GAAGi3B,CAAC,CAACyS,EAAE,CAAC;IACxE,MAAMjoC,MAAM,GAAG,CAAC;IAChB,MAAM5E,MAAM,GAAG,IAAI,CAAC8D,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG2N,EAAE;IAC1C,MAAMR,OAAO,GAAG,CAAC;IACjB,IAAIpJ,KAAK;IACT,IAAI,IAAI,CAACU,MAAM,CAACuP,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC5C,IAAI,IAAI,CAACn1B,IAAI,KAAKomC,UAAU,CAACE,QAAQ,EAAE;QACnCpxC,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC1c,KAAK,CAAC;MACvC,CAAC,MACI;QACDlI,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAACua,CAAC,CAACyS,EAAE,CAAC;MACtC;IACJ,CAAC,MACI;MACD5xC,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC5Z,UAAU,CAAC;IAC5C;IACA,MAAMb,IAAI,GAAG0nB,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAEnE,CAAC,EAAE;MAC9BnnB,MAAM,EAAEhN,UAAU;MAClB9C,KAAK;MACLC,IAAI,EAAErI;IACV,CAAC,CAAC;IACF,OAAO;MACHmL,UAAU,EAAE,CAAE,eAAc6tB,CAAE,EAAC,CAAC;MAChC5wB,KAAK;MACLpI,KAAK;MACLqK,IAAI;MACJT,EAAE;MACFE,EAAE;MACFD,MAAM;MACN5E,MAAM;MACN0sC,YAAY;MACZzxC,KAAK;MACLoJ,OAAO;MACP4B,UAAU;MACVL,aAAa,EAAE,IAAI,CAACknC,gBAAgB,CAAC7xC,KAAK,CAAC;MAC3C9D,GAAG,EAAEijC,CAAC,CAACjjC,GAAG;MACVC,GAAG,EAAEgjC,CAAC,CAAChjC;IACX,CAAC;EACL;EACAsP,cAAcA,CAAC;IAAEgmC,YAAY;IAAEvpC,KAAK;IAAE8C,UAAU;IAAE9O,GAAG;IAAEC;EAAI,CAAC,EAAE;IAC1D,OAAQ;AAChB,oCAAoCohC,WAAW,CAACvyB,UAAU,CAAE,MAAKuyB,WAAW,CAACkU,YAAY,CAAE;AAC3F,kCAAkCvpC,KAAK,CAACwF,cAAc,CAAC,CAAE,GAAE,IAAI,CAACokC,oBAAoB,CAAC51C,GAAG,EAAEC,GAAG,CAAE;AAC/F,KAAK;EACD;EACA21C,oBAAoBA,CAAC51C,GAAG,EAAEC,GAAG,EAAE;IAC3B,IAAID,GAAG,KAAKsP,SAAS,IAAIrP,GAAG,KAAKqP,SAAS,EAAE;MACxC,IAAI+kB,MAAM,GAAG,IAAI;MACjB,IAAIr0B,GAAG,KAAKsP,SAAS,EAAE;QACnB,IAAIrP,GAAG,KAAKqP,SAAS,EAAE;UACnB+kB,MAAM,IAAI,GAAG;QACjB;QACAA,MAAM,IAAIr0B,GAAG,CAACwR,cAAc,CAAC,CAAC;QAC9B,IAAIvR,GAAG,KAAKqP,SAAS,EAAE;UACnB+kB,MAAM,IAAI,KAAK;QACnB;MACJ,CAAC,MACI,IAAIp0B,GAAG,KAAKqP,SAAS,EAAE;QACxB+kB,MAAM,IAAI,GAAG;MACjB;MACA,IAAIp0B,GAAG,KAAKqP,SAAS,EAAE;QACnB+kB,MAAM,IAAIp0B,GAAG,CAACuR,cAAc,CAAC,CAAC;MAClC;MACA6iB,MAAM,IAAI,GAAG;MACb,OAAOA,MAAM;IACjB,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ;EACAshB,gBAAgBA,CAAC7xC,KAAK,EAAE;IACpB,OAAO,CACH;MACIqJ,MAAM,EAAE,CAAC;MACTrJ,KAAK;MACLoJ,OAAO,EAAE;IACb,CAAC,EACD;MACIC,MAAM,EAAE,GAAG;MACXrJ,KAAK;MACLoJ,OAAO,EAAE;IACb,CAAC,CACJ;EACL;EACAc,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACjP,MAAM,CAACmE,IAAI,CAAC8K,IAAI,CAAC;EAC1B;EACAlK,QAAQA,CAAC++B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAAC19B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAM29B,IAAI,GAAG,IAAI,CAAC39B,aAAa,CAAC49B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC72B,IAAI,KAAKg3B,CAAC,CAACh3B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO82B,IAAI,KAAKzzB,SAAS;EAC7B;EACAnB,cAAcA,CAAA,EAAG;IACb,IAAI,CAACQ,UAAU,GAAG,IAAI;IACtB,IAAI,CAACrL,QAAQ,CAACH,IAAI,CAAC;MAAE8I,IAAI,EAAE,IAAI,CAACgC,IAAI,CAAChC;IAAK,CAAC,CAAC;EAChD;EACAoC,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACM,UAAU,GAAG,KAAK;IACvB,IAAI,CAACpB,MAAM,CAACL,OAAO,GAAG,CAAC;IACvB,IAAI,CAACzJ,UAAU,CAACN,IAAI,CAAC;MAAE8I,IAAI,EAAE,IAAI,CAACgC,IAAI,CAAChC;IAAK,CAAC,CAAC;EAClD;AACJ;AACAgpC,qBAAqB,CAACnc,IAAI,YAAA+c,8BAAA7c,CAAA;EAAA,YAAAA,CAAA,IAAwFic,qBAAqB,EA9nF7B93C,EAAE,CAAA87B,iBAAA,CA8nF6C77B,WAAW;AAAA,CAA4C;AAChN63C,qBAAqB,CAAC7b,IAAI,kBA/nFgFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA+nFNqmC,qBAAqB;EAAA3b,SAAA;EAAAc,MAAA;IAAAnsB,IAAA;IAAAW,IAAA;IAAAlG,MAAA;IAAAiE,MAAA;IAAAnI,MAAA;IAAAuP,SAAA;IAAAshC,YAAA;IAAAjwC,aAAA;IAAA4J,eAAA;IAAAK,eAAA;EAAA;EAAAytB,OAAA;IAAA99B,MAAA;IAAAsE,QAAA;IAAAG,UAAA;EAAA;EAAAq9B,QAAA,GA/nFjB3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAz6B,IAAA;EAAAgtB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAi0C,+BAAA90C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAoE,UAAA,IAAAuM,uCAAA,eAkrFjG,CAAC;IAAA;IAAA,IAAA9M,EAAA;MAlrF8F7D,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAsM,MAgoFrF,CAAC;IAAA;EAAA;EAAAmtB,YAAA,GAmDkBwZ,0BAA0B,EAAqGI,eAAe,EAAgNn2C,EAAE,CAACw8B,IAAI,EAA0E6V,gBAAgB;EAAA1V,aAAA;EAAA7sB,IAAA;IAAA8nC,SAAA,EAAkb,CACn5Bn3C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoO,OAAO,EAAE;IACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoO,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;EACL;EAAA+zB,eAAA;AAAA,EAAuD;AAC5D;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA7rF0G79B,EAAE,CAAA89B,iBAAA,CA6rFjBga,qBAAqB,EAAc,CAAC;IACnHrmC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,6BAA6B;MACvCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAC/CjvB,UAAU,EAAE,CACRrT,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoO,OAAO,EAAE;MACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoO,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE0B,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC9DxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE6Q,IAAI,EAAE,CAAC;MACnCW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoR,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkL,MAAM,EAAE,CAAC;MACTkG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmP,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuW,SAAS,EAAE,CAAC;MACZnF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE63C,YAAY,EAAE,CAAC;MACfzmC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4H,aAAa,EAAE,CAAC;MAChBwJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwR,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6R,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEuF,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACbmL,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMi4C,kBAAkB,CAAC;AAEzBA,kBAAkB,CAACld,IAAI,YAAAmd,2BAAAjd,CAAA;EAAA,YAAAA,CAAA,IAAwFgd,kBAAkB;AAAA,CAAmD;AACpLA,kBAAkB,CAAC5c,IAAI,kBApyFmFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAoyFTonC,kBAAkB;EAAA1c,SAAA;EAAAc,MAAA;IAAAtxB,KAAA;IAAAD,MAAA;IAAAgH,CAAA;IAAAC,CAAA;EAAA;EAAAg4B,KAAA,EAAAt4B,IAAA;EAAA6qB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAq0C,4BAAAl1C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApyFX7D,EAAE,CAAA8G,cAAA,CAqyFS,CAAC;MAryFZ9G,EAAE,CAAA8E,SAAA,aAqyFS,CAAC;IAAA;IAAA,IAAAjB,EAAA;MAryFZ7D,EAAE,CAAA4I,WAAA,WAAA9E,GAAA,CAAA4H,MAqyFzE,CAAC,UAAA5H,GAAA,CAAA6H,KAAD,CAAC,MAAA7H,GAAA,CAAA4O,CAAD,CAAC,MAAA5O,GAAA,CAAA6O,CAAD,CAAC;IAAA;EAAA;EAAAgrB,aAAA;EAAAmG,eAAA;AAAA,EACsC;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAvyF0G79B,EAAE,CAAA89B,iBAAA,CAuyFjB+a,kBAAkB,EAAc,CAAC;IAChHpnC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,0BAA0B;MACpCr5B,QAAQ,EAAG;AAC/B;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEp4B,KAAK,EAAE,CAAC;MACtB8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqS,CAAC,EAAE,CAAC;MACJjB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsS,CAAC,EAAE,CAAC;MACJlB,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAI24C,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK;EACxBA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;AAC9B,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,MAAMC,wBAAwB,CAAC;EAC3BrW,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC4T,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;EAC1C;EACAA,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACroC,IAAI,CAAC6gC,GAAG,CAAC7L,CAAC,IAAI;MACtB,IAAI91B,MAAM;MACV,IAAIrE,KAAK;MACT,IAAID,MAAM;MACV,IAAIgH,CAAC;MACL,IAAIC,CAAC;MACL,IAAIymC,SAAS,GAAGJ,SAAS,CAACK,GAAG;MAC7B,IAAI,IAAI,CAACjrC,MAAM,KAAKiY,cAAc,CAACjV,QAAQ,EAAE;QACzC,MAAMnK,QAAQ,GAAG,IAAI,CAACsE,MAAM,CAACu6B,CAAC,CAACh3B,IAAI,CAAC;QACpC,MAAMwqC,aAAa,GAAGhB,MAAM,CAACpL,QAAQ,CAAC,CAACjmC,QAAQ,GAAG,IAAI,CAACsE,MAAM,CAACyhC,IAAI,CAAC,CAAC,EAAE3E,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACrF,IAAIiR,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE;UACzBF,SAAS,GAAGJ,SAAS,CAACO,IAAI;QAC9B;QACAvpC,MAAM,GAAG,IAAI,CAACzE,MAAM,CAACiiC,SAAS,CAAC,CAAC,GAAG,IAAI,CAACjiC,MAAM,CAACiuC,YAAY,CAAC,CAAC;QAC7D7tC,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACiiC,SAAS,CAAC,CAAC,GAAGx9B,MAAM;QACxCtE,MAAM,GAAG,IAAI,CAACD,IAAI,CAACC,MAAM;QACzBgH,CAAC,GAAG,IAAI,CAACnH,MAAM,CAACu6B,CAAC,CAACh3B,IAAI,CAAC,GAAGkB,MAAM,GAAG,CAAC;QACpC2C,CAAC,GAAG,CAAC;MACT,CAAC,MACI,IAAI,IAAI,CAACvE,MAAM,KAAKiY,cAAc,CAACtK,UAAU,EAAE;QAChD,MAAM9U,QAAQ,GAAG,IAAI,CAACuI,MAAM,CAACs2B,CAAC,CAACh3B,IAAI,CAAC;QACpC,MAAMwqC,aAAa,GAAGhB,MAAM,CAACpL,QAAQ,CAAC,CAACjmC,QAAQ,GAAG,IAAI,CAACuI,MAAM,CAACw9B,IAAI,CAAC,CAAC,EAAE3E,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACrF,IAAIiR,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE;UACzBF,SAAS,GAAGJ,SAAS,CAACO,IAAI;QAC9B;QACAvpC,MAAM,GAAG,IAAI,CAACR,MAAM,CAACg+B,SAAS,CAAC,CAAC,GAAG,IAAI,CAACh+B,MAAM,CAACgqC,YAAY,CAAC,CAAC;QAC7D7tC,KAAK,GAAG,IAAI,CAACF,IAAI,CAACE,KAAK;QACvBD,MAAM,GAAG,IAAI,CAAC8D,MAAM,CAACg+B,SAAS,CAAC,CAAC,GAAGx9B,MAAM;QACzC0C,CAAC,GAAG,CAAC;QACLC,CAAC,GAAG,IAAI,CAACnD,MAAM,CAACs2B,CAAC,CAACh3B,IAAI,CAAC,GAAGkB,MAAM,GAAG,CAAC;MACxC;MACA,OAAO;QACHlB,IAAI,EAAEg3B,CAAC,CAACh3B,IAAI;QACZ2D,KAAK,EAAE2mC,SAAS;QAChB1tC,MAAM;QACNC,KAAK;QACL+G,CAAC;QACDC;MACJ,CAAC;IACL,CAAC,CAAC;EACN;AACJ;AACAsmC,wBAAwB,CAACtd,IAAI,YAAA8d,iCAAA5d,CAAA;EAAA,YAAAA,CAAA,IAAwFod,wBAAwB;AAAA,CAAmD;AAChMA,wBAAwB,CAAChd,IAAI,kBAl3F6Ej8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAk3FHwnC,wBAAwB;EAAA9c,SAAA;EAAAc,MAAA;IAAAnsB,IAAA;IAAArF,IAAA;IAAAF,MAAA;IAAAiE,MAAA;IAAApB,MAAA;EAAA;EAAAu1B,QAAA,GAl3FvB3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAr4B,IAAA;EAAA4qB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAg1C,kCAAA71C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAoE,UAAA,IAAAmO,0CAAA,eA63FhG,CAAC;IAAA;IAAA,IAAA1O,EAAA;MA73F6F7D,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAo1C,UAq3FpE,CAAC;IAAA;EAAA;EAAA3b,YAAA,GASCsb,kBAAkB,EAAuG73C,EAAE,CAACklC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAC3T;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/3F0G79B,EAAE,CAAA89B,iBAAA,CA+3FjBmb,wBAAwB,EAAc,CAAC;IACtHxnC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,iCAAiC;MAC3Cr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEjzB,IAAI,EAAE,CAAC;MACrBW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoL,IAAI,EAAE,CAAC;MACPgG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkL,MAAM,EAAE,CAAC;MACTkG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmP,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+N,MAAM,EAAE,CAAC;MACTqD,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMs5C,0BAA0B,CAAC;EAC7Bnf,WAAWA,CAAA,EAAG;IACV,IAAI,CAACof,UAAU,GAAG,CAAC;IACnB,IAAI,CAACvpC,EAAE,GAAG,CAAC;IACX,IAAI,CAACE,EAAE,GAAG,CAAC;EACf;EACA,IAAI0mC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC4C,UAAU,IAAI,IAAI,CAACC,YAAY;EAC/C;EACA,IAAI7C,KAAKA,CAACpoC,KAAK,EAAE;IACb,IAAI,CAACgrC,UAAU,GAAGhrC,KAAK;EAC3B;EACA+zB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC0N,CAAC,GAAG,KAAK;IACd,IAAI,OAAO,IAAI1N,OAAO,IAAI,cAAc,IAAIA,OAAO,IAAI,YAAY,IAAIA,OAAO,EAAE;MAC5E,IAAI,CAACiX,YAAY,GAAG,CAChB;QACI9pC,MAAM,EAAE,CAAC;QACTrJ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBoJ,OAAO,EAAE,IAAI,CAAC8f;MAClB,CAAC,EACD;QACI7f,MAAM,EAAE,GAAG;QACXrJ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBoJ,OAAO,EAAE,IAAI,CAAC6pC;MAClB,CAAC,CACJ;IACL;EACJ;AACJ;AACAD,0BAA0B,CAAChe,IAAI,YAAAoe,mCAAAle,CAAA;EAAA,YAAAA,CAAA,IAAwF8d,0BAA0B;AAAA,CAAmD;AACpMA,0BAA0B,CAAC1d,IAAI,kBA77F2Ej8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA67FDkoC,0BAA0B;EAAAxd,SAAA;EAAAc,MAAA;IAAAt2B,KAAA;IAAAmI,IAAA;IAAA+gB,YAAA;IAAA+pB,UAAA;IAAAvpC,EAAA;IAAAE,EAAA;IAAA0mC,KAAA;EAAA;EAAAtT,QAAA,GA77F3B3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA/3B,IAAA;EAAAsqB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAs1C,oCAAAn2C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA87FC,CAAC;MA97FJ9G,EAAE,CAAAmE,cAAA,uBA87FC,CAAC;MA97FJnE,EAAE,CAAAoE,UAAA,IAAAyO,+CAAA,iBAo8FrG,CAAC;MAp8FkG7S,EAAE,CAAAqE,YAAA,CAq8FpF,CAAC;IAAA;IAAA,IAAAR,EAAA;MAr8FiF7D,EAAE,CAAAyE,UAAA,OAAAX,GAAA,CAAAgL,IA87F1E,CAAC;MA97FuE9O,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAAuM,EA87F3D,CAAC,OAAAvM,GAAA,CAAAyM,EAAD,CAAC,MAAAzM,GAAA,CAAAysC,CAAD,CAAC;MA97FwDvwC,EAAE,CAAAwE,SAAA,EAg8F5E,CAAC;MAh8FyExE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAmzC,KAg8F5E,CAAC;IAAA;EAAA;EAAA1Z,YAAA,GAMSv8B,EAAE,CAACklC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAClM;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAv8F0G79B,EAAE,CAAA89B,iBAAA,CAu8FjB6b,0BAA0B,EAAc,CAAC;IACxHloC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,mCAAmC;MAC7Cr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEp9B,KAAK,EAAE,CAAC;MACtB8K,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyO,IAAI,EAAE,CAAC;MACP2C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwvB,YAAY,EAAE,CAAC;MACfpe,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEu5C,UAAU,EAAE,CAAC;MACbnoC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgQ,EAAE,EAAE,CAAC;MACLoB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkQ,EAAE,EAAE,CAAC;MACLkB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE42C,KAAK,EAAE,CAAC;MACRxlC,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM45C,aAAa,CAAC;EAChBzf,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC1qB,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC8f,YAAY,GAAG,GAAG;IACvB,IAAI,CAAC+pB,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC/iC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC/B,UAAU,GAAG,IAAI;IACtB,IAAI,CAACjT,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACu5C,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAAC7uB,WAAW,GAAG,KAAK;IACxB,IAAI,CAACla,cAAc,GAAGkV,cAAc;IACpC,IAAI,CAACoU,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC0C,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,CAAC4U,gBAAgB,EAAE;MACxB,IAAI,CAACC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACD,gBAAgB,GAAG,IAAI;IAChC;EACJ;EACA5U,MAAMA,CAAA,EAAG;IACL,IAAI,CAACj0B,UAAU,GAAG,MAAM,GAAGykB,EAAE,CAAC,CAAC,CAACuS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAAC73B,YAAY,GAAI,QAAO,IAAI,CAACa,UAAW,GAAE;IAC9C,IAAI,IAAI,CAACwF,QAAQ,IAAI,IAAI,CAACogC,KAAK,EAAE;MAC7B,IAAI,CAAC3lC,aAAa,GAAG,IAAI,CAAC8oC,WAAW,CAAC,CAAC;MACvC,IAAI,CAAC/uB,WAAW,GAAG,IAAI;IAC3B,CAAC,MACI;MACD,IAAI,CAACA,WAAW,GAAG,KAAK;IAC5B;IACA,IAAI,CAACgvB,YAAY,CAAC,CAAC;EACvB;EACAF,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,YAAY;IACjCziB,UAAU,CAAC,IAAI,CAACuiB,YAAY,CAACrf,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;EACjD;EACAqf,YAAYA,CAAA,EAAG;IACX,MAAMG,IAAI,GAAG34C,MAAM,CAAC,IAAI,CAAC44B,OAAO,CAAC,CAAC54B,MAAM,CAAC,OAAO,CAAC;IACjD,IAAI,IAAI,CAACiT,UAAU,EAAE;MACjB0lC,IAAI,CAAC94C,UAAU,CAAC,CAAC,CAACs2B,QAAQ,CAAC,GAAG,CAAC,CAACyiB,IAAI,CAAC,GAAG,EAAE,IAAI,CAACrkB,IAAI,CAAC;IACxD,CAAC,MACI;MACDokB,IAAI,CAACC,IAAI,CAAC,GAAG,EAAE,IAAI,CAACrkB,IAAI,CAAC;IAC7B;EACJ;EACAgkB,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACnD,KAAK,EAAE;MACZ,OAAO,IAAI,CAACA,KAAK;IACrB;IACA,OAAO,CACH;MACIjnC,MAAM,EAAE,CAAC;MACTrJ,KAAK,EAAE,IAAI,CAACujB,IAAI;MAChBna,OAAO,EAAE,IAAI,CAAC8f;IAClB,CAAC,EACD;MACI7f,MAAM,EAAE,GAAG;MACXrJ,KAAK,EAAE,IAAI,CAACujB,IAAI;MAChBna,OAAO,EAAE,IAAI,CAAC6pC;IAClB,CAAC,CACJ;EACL;AACJ;AACAK,aAAa,CAACte,IAAI,YAAA+e,sBAAA7e,CAAA;EAAA,YAAAA,CAAA,IAAwFoe,aAAa,EAtiGbj6C,EAAE,CAAA87B,iBAAA,CAsiG6B97B,EAAE,CAAC+7B,UAAU;AAAA,CAA4C;AAClMke,aAAa,CAAChe,IAAI,kBAviGwFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAuiGdwoC,aAAa;EAAA9d,SAAA;EAAAc,MAAA;IAAAnsB,IAAA;IAAAslB,IAAA;IAAAmkB,YAAA;IAAArwB,IAAA;IAAAna,OAAA;IAAA8f,YAAA;IAAA+pB,UAAA;IAAA/iC,QAAA;IAAAogC,KAAA;IAAAniC,UAAA;EAAA;EAAA6qB,OAAA;IAAA99B,MAAA;EAAA;EAAA8hC,QAAA,GAviGD3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA73B,IAAA;EAAAoqB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAi2C,uBAAA92C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAoE,UAAA,IAAA2O,kCAAA,iBA+iG9F,CAAC;MA/iG2F/S,EAAE,CAAA8G,cAAA,CAgjGW,CAAC;MAhjGd9G,EAAE,CAAA8E,SAAA,aAgjGW,CAAC;IAAA;IAAA,IAAAjB,EAAA;MAhjGd7D,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA+S,QAwiGhF,CAAC;MAxiG6E7W,EAAE,CAAAwE,SAAA,EAgjGQ,CAAC;MAhjGXxE,EAAE,CAAAqN,WAAA,YAAAvJ,GAAA,CAAAiM,OAgjGQ,CAAC;MAhjGX/P,EAAE,CAAA4I,WAAA,MAAA9E,GAAA,CAAAw2C,QAgjG/D,CAAC,SAAAx2C,GAAA,CAAA+S,QAAA,GAAA/S,GAAA,CAAA0M,YAAA,GAAA1M,GAAA,CAAAomB,IAAD,CAAC;IAAA;EAAA;EAAAqT,YAAA,GACJwZ,0BAA0B,EAAmH/1C,EAAE,CAACw8B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACtT;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAljG0G79B,EAAE,CAAA89B,iBAAA,CAkjGjBmc,aAAa,EAAc,CAAC;IAC3GxoC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,oBAAoB;MAC9Br5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEtyB,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEjrB,IAAI,EAAE,CAAC;MACxFW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+1B,IAAI,EAAE,CAAC;MACP3kB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEk6C,YAAY,EAAE,CAAC;MACf9oC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6pB,IAAI,EAAE,CAAC;MACPzY,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0P,OAAO,EAAE,CAAC;MACV0B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwvB,YAAY,EAAE,CAAC;MACfpe,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEu5C,UAAU,EAAE,CAAC;MACbnoC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwW,QAAQ,EAAE,CAAC;MACXpF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE42C,KAAK,EAAE,CAAC;MACRxlC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyU,UAAU,EAAE,CAAC;MACbrD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA,SAASg6C,WAAWA,CAAC/e,CAAC,EAAEgf,CAAC,EAAExX,CAAC,EAAEyC,CAAC,EAAE;EAC7B,OAAQzC,CAAC,IAAI,CAACC,IAAI,CAACwT,GAAG,CAAC,CAAC,EAAG,CAAC,EAAE,GAAGjb,CAAC,GAAIiK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI,GAAG+U,CAAC;AACpE;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,SAAS,EAAEC,OAAO,EAAEC,aAAa,EAAEC,aAAa,EAAEC,QAAQ,EAAE;EACvE,MAAMC,QAAQ,GAAG9C,MAAM,CAACyC,SAAS,CAAC;EAClC,MAAMM,MAAM,GAAG/C,MAAM,CAAC0C,OAAO,CAAC;EAC9B,MAAMM,SAAS,GAAGF,QAAQ,GAAGC,MAAM;EACnC,MAAME,QAAQ,GAAGjY,IAAI,CAACxgC,GAAG,CAAC,CAAC,EAAEm4C,aAAa,CAAC;EAC3C,MAAMO,GAAG,GAAGlY,IAAI,CAACwT,GAAG,CAAC,EAAE,EAAEyE,QAAQ,CAAC;EAClC,MAAMvjB,QAAQ,GAAGsgB,MAAM,CAAC4C,aAAa,CAAC,GAAG,IAAI;EAC7C,IAAIO,SAAS;EACb,SAASC,QAAQA,CAACC,SAAS,EAAE;IACzB,IAAIC,QAAQ;IACZ,MAAMC,QAAQ,GAAGF,SAAS,GAAGF,SAAS;IACtC,IAAIH,SAAS,EAAE;MACXM,QAAQ,GAAGR,QAAQ,GAAGR,WAAW,CAACiB,QAAQ,EAAE,CAAC,EAAET,QAAQ,GAAGC,MAAM,EAAErjB,QAAQ,CAAC;IAC/E,CAAC,MACI;MACD4jB,QAAQ,GAAGhB,WAAW,CAACiB,QAAQ,EAAET,QAAQ,EAAEC,MAAM,GAAGD,QAAQ,EAAEpjB,QAAQ,CAAC;IAC3E;IACA,IAAIsjB,SAAS,EAAE;MACXM,QAAQ,GAAGA,QAAQ,GAAGP,MAAM,GAAGA,MAAM,GAAGO,QAAQ;IACpD,CAAC,MACI;MACDA,QAAQ,GAAGA,QAAQ,GAAGP,MAAM,GAAGA,MAAM,GAAGO,QAAQ;IACpD;IACAA,QAAQ,GAAGtY,IAAI,CAACC,KAAK,CAACqY,QAAQ,GAAGJ,GAAG,CAAC,GAAGA,GAAG;IAC3C,MAAM9N,IAAI,GAAGmO,QAAQ,GAAG7jB,QAAQ;IAChCmjB,QAAQ,CAAC;MACLtsC,KAAK,EAAE+sC,QAAQ;MACfC,QAAQ;MACRF,SAAS;MACTG,QAAQ,EAAE,CAACpO;IACf,CAAC,CAAC;IACF,IAAIA,IAAI,EAAE;MACN,OAAOqO,qBAAqB,CAACC,GAAG,IAAIN,QAAQ,CAACM,GAAG,CAAC,CAAC;IACtD;EACJ;EACA,OAAOD,qBAAqB,CAACJ,SAAS,IAAI;IACtCF,SAAS,GAAGE,SAAS;IACrB,OAAOD,QAAQ,CAACC,SAAS,CAAC;EAC9B,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,cAAcA,CAACjB,OAAO,EAAE;EAC7B,MAAMK,MAAM,GAAG/C,MAAM,CAAC0C,OAAO,CAAC;EAC9B,IAAIK,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI/X,IAAI,CAACoL,GAAG,CAAC2M,MAAM,CAAC,IAAI,EAAE,EAAE;IAC5C,OAAO,CAAC;EACZ;EACA,OAAO,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,gBAAgB,CAAC;EACnB1hB,WAAWA,CAAC0K,EAAE,EAAEzK,OAAO,EAAE;IACrB,IAAI,CAACyK,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACgW,aAAa,GAAG,CAAC;IACtB,IAAI,CAACiB,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI17C,YAAY,CAAC,CAAC;IACrC,IAAI,CAAC27C,WAAW,GAAG,IAAI37C,YAAY,CAAC,CAAC;IACrC,IAAI,CAACkO,KAAK,GAAG,EAAE;IACf,IAAI,CAAC0tC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACvhB,aAAa,GAAGT,OAAO,CAACS,aAAa;EAC9C;EACA,IAAI+f,aAAaA,CAACe,GAAG,EAAE;IACnB,IAAI,CAACO,cAAc,GAAGP,GAAG;EAC7B;EACA,IAAIf,aAAaA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACsB,cAAc,EACnB,OAAO,IAAI,CAACA,cAAc;IAC9B,OAAON,cAAc,CAAC,IAAI,CAACjB,OAAO,CAAC;EACvC;EACA,IAAIA,OAAOA,CAACgB,GAAG,EAAE;IACb,IAAI,CAACQ,QAAQ,GAAGE,UAAU,CAACV,GAAG,CAAC;IAC/B,IAAI,CAACW,KAAK,CAAC,CAAC;EAChB;EACA,IAAI3B,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACwB,QAAQ;EACxB;EACA,IAAIzB,SAASA,CAACiB,GAAG,EAAE;IACf,IAAI,CAACS,UAAU,GAAGC,UAAU,CAACV,GAAG,CAAC;IACjC,IAAI,CAACW,KAAK,CAAC,CAAC;EAChB;EACA,IAAI5B,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC0B,UAAU;EAC1B;EACAzT,WAAWA,CAAA,EAAG;IACV4T,oBAAoB,CAAC,IAAI,CAACC,YAAY,CAAC;EAC3C;EACAF,KAAKA,CAAA,EAAG;IACJC,oBAAoB,CAAC,IAAI,CAACC,YAAY,CAAC;IACvC,MAAMlpC,eAAe,GAAG,IAAI,CAACA,eAAe,KAAK9E,KAAK,IAAK,GAAE,IAAI,CAACstC,WAAY,GAAEttC,KAAK,CAACwF,cAAc,CAAC,CAAE,GAAE,IAAI,CAAC+nC,WAAY,EAAC,CAAC;IAC5H,MAAMjB,QAAQ,GAAGA,CAAC;MAAEtsC,KAAK;MAAEgtC,QAAQ;MAAEC;IAAS,CAAC,KAAK;MAChD,IAAI,CAACjtC,KAAK,GAAG8E,eAAe,CAAC9E,KAAK,CAAC;MACnC,IAAI,CAACq2B,EAAE,CAACK,YAAY,CAAC,CAAC;MACtB,IAAI,CAACuW,QAAQ,EACT,IAAI,CAACO,WAAW,CAACr2C,IAAI,CAAC;QAAE6I,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEgtC;MAAS,CAAC,CAAC;MAC1D,IAAIC,QAAQ,EACR,IAAI,CAACQ,WAAW,CAACt2C,IAAI,CAAC;QAAE6I,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEgtC;MAAS,CAAC,CAAC;IAC9D,CAAC;IACD,IAAI,CAACgB,YAAY,GAAG/B,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,aAAa,EAAEC,QAAQ,CAAC;EAC7G;AACJ;AACAe,gBAAgB,CAACvgB,IAAI,YAAAmhB,yBAAAjhB,CAAA;EAAA,YAAAA,CAAA,IAAwFqgB,gBAAgB,EArtGnBl8C,EAAE,CAAA87B,iBAAA,CAqtGmC97B,EAAE,CAACgmC,iBAAiB,GArtGzDhmC,EAAE,CAAA87B,iBAAA,CAqtGoE97B,EAAE,CAAC+7B,UAAU;AAAA,CAA4C;AACzOmgB,gBAAgB,CAACjgB,IAAI,kBAttGqFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAstGXyqC,gBAAgB;EAAA/f,SAAA;EAAAc,MAAA;IAAAie,aAAA;IAAAiB,WAAA;IAAAC,WAAA;IAAAzoC,eAAA;IAAAsnC,aAAA;IAAAD,OAAA;IAAAD,SAAA;EAAA;EAAApb,OAAA;IAAA0c,WAAA;IAAAC,WAAA;EAAA;EAAA3R,KAAA,EAAA33B,IAAA;EAAAkqB,KAAA;EAAAC,IAAA;EAAAz4B,QAAA,WAAAq4C,0BAAAl5C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAttGP7D,EAAE,CAAAmF,MAAA,EAstGwW,CAAC;IAAA;IAAA,IAAAtB,EAAA;MAttG3W7D,EAAE,CAAA6I,kBAAA,MAAA/E,GAAA,CAAA+K,KAAA,KAstGwW,CAAC;IAAA;EAAA;EAAA8uB,aAAA;AAAA,EAAoB;AACze;EAAA,QAAAE,SAAA,oBAAAA,SAAA,KAvtG0G79B,EAAE,CAAA89B,iBAAA,CAutGjBoe,gBAAgB,EAAc,CAAC;IAC9GzqC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,uBAAuB;MACjCr5B,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE+M,IAAI,EAAEzR,EAAE,CAACgmC;IAAkB,CAAC,EAAE;MAAEv0B,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEmf,aAAa,EAAE,CAAC;MACjIzpC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE87C,WAAW,EAAE,CAAC;MACd1qC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+7C,WAAW,EAAE,CAAC;MACd3qC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsT,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE46C,aAAa,EAAE,CAAC;MAChBxpC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE26C,OAAO,EAAE,CAAC;MACVvpC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE06C,SAAS,EAAE,CAAC;MACZtpC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEg8C,WAAW,EAAE,CAAC;MACd5qC,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE07C,WAAW,EAAE,CAAC;MACd7qC,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA,IAAIo8C,IAAI;AACR,IAAI,OAAO1jB,MAAM,KAAK,WAAW,EAAE;EAC/B0jB,IAAI,GAAG1jB,MAAM;AACjB,CAAC,MACI,IAAI,OAAO2jB,MAAM,KAAK,WAAW,EAAE;EACpCD,IAAI,GAAGC,MAAM;AACjB;AACA;AACA,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAU;AAClC,SAASC,gBAAgBA,CAACruC,IAAI,EAAEsuC,OAAO,GAAG,KAAK,EAAEC,UAAU,GAAG,IAAI,EAAE;EAChE;EACA;EACA,IAAI,OAAOH,UAAU,KAAK,UAAU,EAAE;IAClC;IACA,OAAO,IAAIA,UAAU,CAACpuC,IAAI,EAAE;MAAEsuC,OAAO;MAAEC;IAAW,CAAC,CAAC;EACxD,CAAC,MACI;IACD;IACA,MAAMzH,KAAK,GAAG0H,QAAQ,CAACC,WAAW,CAAC,YAAY,CAAC;IAChD3H,KAAK,CAAC4H,SAAS,CAAC1uC,IAAI,EAAEsuC,OAAO,EAAEC,UAAU,CAAC;IAC1C,OAAOzH,KAAK;EAChB;AACJ;AAEA,MAAM6H,WAAW,CAAC;EACdjjB,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC+iB,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAAC9rC,cAAc,GAAG4mB,cAAc;IACpC,IAAI,CAAC1mB,UAAU,GAAGmhC,UAAU;IAC5B,IAAI,CAAC0K,cAAc,GAAG,KAAK;IAC3B,IAAI,CAAChsC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACisC,KAAK,GAAG,IAAIn9C,YAAY,CAAC,CAAC;EACnC;EACAo9C,SAASA,CAACC,IAAI,EAAE;IACZ,MAAMjmC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAMkmC,KAAK,IAAI,IAAI,CAAClmC,OAAO,EAAE;MAC9B,MAAM6tB,IAAI,GAAGqY,KAAK,CAACt/B,MAAM,CAACknB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACh3B,IAAI,CAACu5B,QAAQ,CAAC,CAAC,KAAK2V,IAAI,CAAC3V,QAAQ,CAAC,CAAC,CAAC;MAC1E,IAAI6V,SAAS,GAAGD,KAAK,CAACnvC,IAAI;MAC1B,IAAIovC,SAAS,YAAY3mB,IAAI,EAAE;QAC3B2mB,SAAS,GAAGA,SAAS,CAACja,kBAAkB,CAAC,CAAC;MAC9C;MACA,IAAI2B,IAAI,EAAE;QACN,MAAMn/B,KAAK,GAAGm/B,IAAI,CAAC92B,IAAI;QACvB,IAAIktC,GAAG,GAAGpW,IAAI,CAAC/2B,KAAK;QACpB,IAAI,IAAI,CAACgvC,cAAc,EAAE;UACrB7B,GAAG,GAAG,CAACpW,IAAI,CAAC2S,EAAE,GAAG3S,IAAI,CAACuY,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;QAC9C;QACA,IAAIz3C,KAAK;QACT,IAAI,IAAI,CAACU,MAAM,CAACuP,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;UAC5C,IAAIyX,CAAC,GAAGrC,GAAG;UACX,IAAIpW,IAAI,CAAC2S,EAAE,EAAE;YACT8F,CAAC,GAAGzY,IAAI,CAAC2S,EAAE;UACf;UACA5xC,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC8yB,CAAC,CAAC;QACnC,CAAC,MACI;UACD13C,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC0yB,KAAK,CAACnvC,IAAI,CAAC;QAC5C;QACA,MAAMgC,IAAI,GAAG0nB,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAErE,IAAI,EAAE;UACjC/2B,KAAK,EAAEmtC,GAAG;UACVltC,IAAI,EAAErI,KAAK;UACXkY,MAAM,EAAEu/B,SAAS;UACjBr7C,GAAG,EAAE+iC,IAAI,CAAC/iC,GAAG;UACbC,GAAG,EAAE8iC,IAAI,CAAC9iC,GAAG;UACb6D;QACJ,CAAC,CAAC;QACFoR,OAAO,CAACgoB,IAAI,CAACjvB,IAAI,CAAC;MACtB;IACJ;IACA,OAAOiH,OAAO;EAClB;EACAumC,SAASA,CAAC1I,KAAK,EAAE;IACb,IAAI,CAAC30C,iBAAiB,CAAC,IAAI,CAAC05B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAM4jB,IAAI,GAAG3I,KAAK,CAAC4I,KAAK,GAAG5I,KAAK,CAAC5f,MAAM,CAACoF,qBAAqB,CAAC,CAAC,CAACjC,IAAI;IACpE,MAAMslB,YAAY,GAAG,IAAI,CAACC,qBAAqB,CAACH,IAAI,CAAC;IACrD,MAAMI,YAAY,GAAG,IAAI,CAAC7mC,IAAI,CAAC2mC,YAAY,CAAC;IAC5C,IAAI,CAACd,SAAS,GAAG,IAAI,CAACpyC,MAAM,CAACozC,YAAY,CAAC;IAC1C,IAAI,CAAChB,SAAS,GAAGra,IAAI,CAACxgC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC66C,SAAS,CAAC;IAC5C,IAAI,CAACA,SAAS,GAAGra,IAAI,CAACzgC,GAAG,CAAC,IAAI,CAAC4I,IAAI,CAACE,KAAK,EAAE,IAAI,CAACgyC,SAAS,CAAC;IAC1D,IAAI,CAACC,YAAY,GAAG,IAAI,CAACG,SAAS,CAACY,YAAY,CAAC;IAChD,IAAI,IAAI,CAAChB,SAAS,KAAK,IAAI,CAACiB,aAAa,EAAE;MACvC,MAAMC,EAAE,GAAG1B,gBAAgB,CAAC,YAAY,CAAC;MACzC,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACF,EAAE,CAAC;MAClD,IAAI,CAACnB,aAAa,GAAG,GAAG;MACxB,IAAI,CAACI,KAAK,CAAC93C,IAAI,CAAC;QACZ6I,KAAK,EAAE8vC;MACX,CAAC,CAAC;MACF,IAAI,CAAC9J,WAAW,CAAC,CAAC;MAClB,IAAI,CAAC+J,aAAa,GAAG,IAAI,CAACjB,SAAS;IACvC;EACJ;EACAe,qBAAqBA,CAACH,IAAI,EAAE;IACxB,IAAIS,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,IAAI,CAACnnC,IAAI,CAAChL,MAAM,GAAG,CAAC;IACnC,IAAIoyC,OAAO,GAAG5G,MAAM,CAAC6G,SAAS;IAC9B,IAAIV,YAAY,GAAG,CAAC;IACpB,OAAOO,QAAQ,IAAIC,QAAQ,EAAE;MACzB,MAAMG,YAAY,GAAI,CAACJ,QAAQ,GAAGC,QAAQ,IAAI,CAAC,GAAI,CAAC;MACpD,MAAMI,cAAc,GAAG,IAAI,CAAC9zC,MAAM,CAAC,IAAI,CAACuM,IAAI,CAACsnC,YAAY,CAAC,CAAC;MAC3D,MAAME,OAAO,GAAGhc,IAAI,CAACoL,GAAG,CAAC2Q,cAAc,GAAGd,IAAI,CAAC;MAC/C,IAAIe,OAAO,GAAGJ,OAAO,EAAE;QACnBA,OAAO,GAAGI,OAAO;QACjBb,YAAY,GAAGW,YAAY;MAC/B;MACA,IAAIC,cAAc,GAAGd,IAAI,EAAE;QACvBS,QAAQ,GAAGI,YAAY,GAAG,CAAC;MAC/B,CAAC,MACI,IAAIC,cAAc,GAAGd,IAAI,EAAE;QAC5BU,QAAQ,GAAGG,YAAY,GAAG,CAAC;MAC/B,CAAC,MACI;QACDF,OAAO,GAAG,CAAC;QACXT,YAAY,GAAGW,YAAY;QAC3B;MACJ;IACJ;IACA,OAAOX,YAAY;EACvB;EACA5J,WAAWA,CAAA,EAAG;IACV,MAAMe,KAAK,GAAGuH,gBAAgB,CAAC,YAAY,CAAC;IAC5C,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACnJ,KAAK,CAAC;EACzD;EACAjB,WAAWA,CAAA,EAAG;IACV,MAAMiB,KAAK,GAAGuH,gBAAgB,CAAC,YAAY,CAAC;IAC5C,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACnJ,KAAK,CAAC;IACrD,IAAI,CAAC8H,aAAa,GAAG,CAAC;IACtB,IAAI,CAACkB,aAAa,GAAG,CAAC,CAAC;EAC3B;EACAvrC,cAAcA,CAACksC,WAAW,EAAE;IACxB,IAAIroB,MAAM,GAAG,EAAE;IACf,IAAIqoB,WAAW,CAAC5gC,MAAM,KAAKxM,SAAS,EAAE;MAClC+kB,MAAM,IAAIqoB,WAAW,CAAC5gC,MAAM;IAChC,CAAC,MACI;MACDuY,MAAM,IAAI,KAAK;IACnB;IACAA,MAAM,IAAI,IAAI;IACd,IAAIqoB,WAAW,CAAC1wC,KAAK,KAAKsD,SAAS,EAAE;MACjC+kB,MAAM,IAAIqoB,WAAW,CAAC1wC,KAAK,CAACwF,cAAc,CAAC,CAAC;IAChD;IACA,IAAIkrC,WAAW,CAAC18C,GAAG,KAAKsP,SAAS,IAAIotC,WAAW,CAACz8C,GAAG,KAAKqP,SAAS,EAAE;MAChE+kB,MAAM,IAAI,IAAI;MACd,IAAIqoB,WAAW,CAAC18C,GAAG,KAAKsP,SAAS,EAAE;QAC/B,IAAIotC,WAAW,CAACz8C,GAAG,KAAKqP,SAAS,EAAE;UAC/B+kB,MAAM,IAAI,GAAG;QACjB;QACAA,MAAM,IAAIqoB,WAAW,CAAC18C,GAAG,CAACwR,cAAc,CAAC,CAAC;QAC1C,IAAIkrC,WAAW,CAACz8C,GAAG,KAAKqP,SAAS,EAAE;UAC/B+kB,MAAM,IAAI,KAAK;QACnB;MACJ,CAAC,MACI,IAAIqoB,WAAW,CAACz8C,GAAG,KAAKqP,SAAS,EAAE;QACpC+kB,MAAM,IAAI,GAAG;MACjB;MACA,IAAIqoB,WAAW,CAACz8C,GAAG,KAAKqP,SAAS,EAAE;QAC/B+kB,MAAM,IAAIqoB,WAAW,CAACz8C,GAAG,CAACuR,cAAc,CAAC,CAAC;MAC9C;MACA6iB,MAAM,IAAI,GAAG;IACjB;IACA,OAAOA,MAAM;EACjB;AACJ;AACAumB,WAAW,CAAC9hB,IAAI,YAAA6jB,oBAAA3jB,CAAA;EAAA,YAAAA,CAAA,IAAwF4hB,WAAW,EA15GTz9C,EAAE,CAAA87B,iBAAA,CA05GyB77B,WAAW;AAAA,CAA4C;AAC5Lw9C,WAAW,CAACxhB,IAAI,kBA35G0Fj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA25GhBgsC,WAAW;EAAAthB,SAAA;EAAAC,SAAA,WAAAqjB,kBAAA57C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA35GG7D,EAAE,CAAAs8B,WAAA,CAAArpB,IAAA;IAAA;IAAA,IAAApP,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAg7C,aAAA,GAAAviB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAxxB,IAAA;IAAAqM,IAAA;IAAAvM,MAAA;IAAAiE,MAAA;IAAAuI,OAAA;IAAA1Q,MAAA;IAAAw2C,cAAA;IAAAhsC,eAAA;IAAAK,eAAA;EAAA;EAAAytB,OAAA;IAAAme,KAAA;EAAA;EAAAnT,KAAA,EAAAz3B,IAAA;EAAAgqB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAg7C,qBAAA77C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA45GlG,CAAC;MA55G+F9G,EAAE,CAAAmE,cAAA,OA45GlG,CAAC,aAAD,CAAC;MA55G+FnE,EAAE,CAAAyF,UAAA,uBAAAk6C,oDAAAh6C,MAAA;QAAA,OAo6GvF7B,GAAA,CAAAw6C,SAAA,CAAA34C,MAAgB,CAAC;MAAA,EAAC,wBAAAi6C,qDAAA;QAAA,OACjB97C,GAAA,CAAA6wC,WAAA,CAAY,CAAC;MAAA,CADG,CAAC;MAp6GmE30C,EAAE,CAAAqE,YAAA,CAs6GrG,CAAC;MAt6GkGrE,EAAE,CAAAoE,UAAA,IAAAkP,uCAAA,gCAAFtT,EAAE,CAAA4J,sBA86GzF,CAAC;MA96GsF5J,EAAE,CAAA8E,SAAA,gBAi8GrG,CAAC;MAj8GkG9E,EAAE,CAAAqE,YAAA,CAk8GjG,CAAC;IAAA;IAAA,IAAAR,EAAA;MAAA,MAAAg8C,GAAA,GAl8G8F7/C,EAAE,CAAA8J,WAAA;MAAF9J,EAAE,CAAAwE,SAAA,EA+5GzF,CAAC;MA/5GsFxE,EAAE,CAAA4I,WAAA,OA+5GzF,CAAC,UAAA9E,GAAA,CAAA2H,IAAA,CAAAE,KAAD,CAAC,WAAA7H,GAAA,CAAA2H,IAAA,CAAAC,MAAD,CAAC;MA/5GsF1L,EAAE,CAAAwE,SAAA,EAu7GtE,CAAC;MAv7GmExE,EAAE,CAAAqN,WAAA,YAAAvJ,GAAA,CAAA45C,aAu7GtE,CAAC,yBAAD,CAAC;MAv7GmE19C,EAAE,CAAAyE,UAAA,oBAAAX,GAAA,CAAA45C,aAAA,8BAi7GtC,CAAC,oBAAA55C,GAAA,CAAA+N,eAAD,CAAC,qBAAA/N,GAAA,CAAAgO,cAAA,CAAAvD,KAAD,CAAC,gBAAAzK,GAAA,CAAAkO,UAAA,CAAAC,OAAD,CAAC,qBAAD,CAAC,oBAAAnO,GAAA,CAAAoO,eAAA,GAAApO,GAAA,CAAAoO,eAAA,GAAA2tC,GAAD,CAAC,mBAAA/7C,GAAA,CAAA85C,YAAD,CAAC,6BAAD,CAAC;MAj7GmC59C,EAAE,CAAA4I,WAAA,MAAA9E,GAAA,CAAA65C,SAm7GjF,CAAC,WAAD,CAAC,WAAA75C,GAAA,CAAA2H,IAAA,CAAAC,MAAD,CAAC;IAAA;EAAA;EAAA6xB,YAAA,GAgBcv8B,EAAE,CAACklC,OAAO,EAAgGmN,gBAAgB;EAAA1V,aAAA;EAAA7sB,IAAA;IAAA8nC,SAAA,EAAkb,CAC9kBn3C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;MACFoO,OAAO,EAAE;IACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoO,OAAO,EAAE;IAAI,CAAC,CAAC,CAAC,CACxC,CAAC,EACFrO,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;MACFoO,OAAO,EAAE;IACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoO,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;EACL;EAAA+zB,eAAA;AAAA,EAAuD;AAC5D;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAn9G0G79B,EAAE,CAAA89B,iBAAA,CAm9GjB2f,WAAW,EAAc,CAAC;IACzGhsC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAC/CjvB,UAAU,EAAE,CACRrT,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;QACFoO,OAAO,EAAE;MACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoO,OAAO,EAAE;MAAI,CAAC,CAAC,CAAC,CACxC,CAAC,EACFrO,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;QACFoO,OAAO,EAAE;MACb,CAAC,CAAC,EACFnO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoO,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE0B,IAAI,EAAEU,SAAS;MAAE8rB,UAAU,EAAE,CAAC;QAC9DxsB,IAAI,EAAErR,MAAM;QACZ62B,IAAI,EAAE,CAACh3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEwL,IAAI,EAAE,CAAC;MACnCgG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyX,IAAI,EAAE,CAAC;MACPrG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkL,MAAM,EAAE,CAAC;MACTkG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmP,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0X,OAAO,EAAE,CAAC;MACVtG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEw9C,cAAc,EAAE,CAAC;MACjBpsC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwR,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE6R,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEy9C,KAAK,EAAE,CAAC;MACRrsC,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEk+C,aAAa,EAAE,CAAC;MAChBrtC,IAAI,EAAEnR,SAAS;MACf22B,IAAI,EAAE,CAAC,eAAe,EAAE;QAAE6oB,MAAM,EAAE;MAAM,CAAC;IAC7C,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMC,QAAQ,CAAC;EACXvlB,WAAWA,CAACC,OAAO,EAAEyK,EAAE,EAAE;IACrB,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACx5B,MAAM,GAAG,EAAE;IAChB,IAAI,CAAC7J,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACq/C,cAAc,GAAG,IAAIr/C,YAAY,CAAC,CAAC;IACxC,IAAI,CAACs/C,WAAW,GAAG,KAAK;IACxB,IAAI,CAACxlB,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,CAAC2a,WAAW,EAAE;MACnB,IAAI,CAACC,QAAQ,CAAC,CAAC;MACf,IAAI,CAACD,WAAW,GAAG,IAAI;IAC3B;EACJ;EACA3a,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC75B,IAAI,GAAG,IAAI,CAAC00C,OAAO,CAAC,CAAC;IAC1B,IAAI,CAACz0C,MAAM,GAAG,IAAI,CAACD,IAAI,CAACC,MAAM;IAC9B,MAAM00C,OAAO,GAAG,IAAI,CAAC94C,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAACoE,MAAM;IAC1C,IAAI,CAAC20C,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,CAAC/0C,MAAM,GAAG,IAAI,CAACg1C,SAAS,CAAC,CAAC;IAC9B,IAAI,IAAI,CAACC,KAAK,EAAE;MACZ,IAAI,CAACC,WAAW,CAAC,CAAC;IACtB;IACA,IAAI,CAAC/yC,SAAS,GAAI,iBAAgB0yC,OAAQ,GAAE;IAC5C,IAAI,CAACM,QAAQ,GAAG,QAAQ,GAAG5qB,EAAE,CAAC,CAAC,CAACuS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACsY,MAAM,GAAI,QAAO,IAAI,CAACD,QAAS,GAAE;IACtC,IAAI,CAACxb,EAAE,CAACK,YAAY,CAAC,CAAC;EAC1B;EACA+a,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAG,EAAE;IACf,KAAK,MAAM7oC,OAAO,IAAI,IAAI,CAACA,OAAO,EAAE;MAChC,KAAK,MAAM+tB,CAAC,IAAI/tB,OAAO,CAAC4G,MAAM,EAAE;QAC5B,IAAI,CAACiiC,MAAM,CAACC,QAAQ,CAAC/a,CAAC,CAACh3B,IAAI,CAAC,EAAE;UAC1B8xC,MAAM,CAAC7gB,IAAI,CAAC+F,CAAC,CAACh3B,IAAI,CAAC;QACvB;MACJ;IACJ;IACA,IAAI1H,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAACwP,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnC,MAAMx1C,GAAG,GAAGygC,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;MAC/B,MAAM99C,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;MAC/Bx5C,MAAM,GAAG,CAACvE,GAAG,EAAEC,GAAG,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAAC8T,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1Cga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;MACnC,MAAMx7C,GAAG,GAAGygC,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;MAC/B,MAAM99C,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;MAC/Bx5C,MAAM,GAAG,CAACvE,GAAG,EAAEC,GAAG,CAAC;IACvB,CAAC,MACI;MACDsE,MAAM,GAAGw5C,MAAM;IACnB;IACA,OAAOx5C,MAAM;EACjB;EACAm5C,SAASA,CAAA,EAAG;IACR,IAAIxT,KAAK;IACT,IAAI,IAAI,CAACn2B,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGhrC,SAAS,CAAC,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC6I,IAAI,CAACE,KAAK,CAAC,CAAC,CAACvE,MAAM,CAAC,IAAI,CAACi5C,OAAO,CAAC;IACxE,CAAC,MACI,IAAI,IAAI,CAACzpC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAG/qC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC6I,IAAI,CAACE,KAAK,CAAC,CAAC,CAACvE,MAAM,CAAC,IAAI,CAACi5C,OAAO,CAAC;IAC1E,CAAC,MACI,IAAI,IAAI,CAACzpC,SAAS,KAAK6rB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG9qC,UAAU,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC6I,IAAI,CAACE,KAAK,CAAC,CAAC,CAACikC,OAAO,CAAC,GAAG,CAAC,CAACxoC,MAAM,CAAC,IAAI,CAACi5C,OAAO,CAAC;IACtF;IACA,OAAOtT,KAAK;EAChB;EACAmT,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACM,KAAK,EACV;IACJ,MAAM90C,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACrE,IAAI,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACk5C,KAAK,GAAG1+C,MAAM,CAAC,CAAC,CAChBg/C,MAAM,CAAC,CACR,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAACn1C,KAAK,EAAED,MAAM,CAAC,CAClB,CAAC,CACGq1C,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEC;IAAU,CAAC,KAAK;MACpC,MAAMC,YAAY,GAAGD,SAAS,IAAI,IAAI,CAACz1C,MAAM,CAAC3I,KAAK,CAAC,CAAC;MACrD,MAAMs+C,SAAS,GAAGD,YAAY,CAACtP,GAAG,CAAC,IAAI,CAACpmC,MAAM,CAAC41C,MAAM,CAAC;MACtD,IAAI,CAACnB,cAAc,CAACh6C,IAAI,CAACk7C,SAAS,CAAC;MACnC,IAAI,CAAChc,EAAE,CAACK,YAAY,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF1jC,MAAM,CAAC,IAAI,CAAC44B,OAAO,CAAC,CAAC54B,MAAM,CAAC,QAAQ,CAAC,CAACymC,IAAI,CAAC,IAAI,CAACkY,KAAK,CAAC;EAC1D;EACAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACD,KAAK,EACX;IACJ,MAAM90C,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACrE,IAAI,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACk5C,KAAK,CAACM,MAAM,CAAC,CACd,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAACn1C,KAAK,EAAED,MAAM,CAAC,CAClB,CAAC;IACF7J,MAAM,CAAC,IAAI,CAAC44B,OAAO,CAAC,CAAC54B,MAAM,CAAC,QAAQ,CAAC,CAACymC,IAAI,CAAC,IAAI,CAACkY,KAAK,CAAC;IACtD;IACA3+C,MAAM,CAAC,IAAI,CAAC44B,OAAO,CAAC,CACf54B,MAAM,CAAC,YAAY,CAAC,CACpB44C,IAAI,CAAC,MAAM,EAAEtoC,SAAS,CAAC,CACvBsoC,IAAI,CAAC,QAAQ,EAAEtoC,SAAS,CAAC,CACzBsoC,IAAI,CAAC,cAAc,EAAEtoC,SAAS,CAAC;IACpC,IAAI,CAAC+yB,EAAE,CAACK,YAAY,CAAC,CAAC;EAC1B;EACA4a,OAAOA,CAAA,EAAG;IACN,MAAMx0C,KAAK,GAAG,IAAI,CAACrE,IAAI,CAAC,CAAC,CAAC;IAC1B,MAAMmE,IAAI,GAAG;MACTE,KAAK;MACLD,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC;IACD,OAAOD,IAAI;EACf;AACJ;AACAs0C,QAAQ,CAACpkB,IAAI,YAAAylB,iBAAAvlB,CAAA;EAAA,YAAAA,CAAA,IAAwFkkB,QAAQ,EAhqHH//C,EAAE,CAAA87B,iBAAA,CAgqHmB97B,EAAE,CAAC+7B,UAAU,GAhqHlC/7B,EAAE,CAAA87B,iBAAA,CAgqH6C97B,EAAE,CAACgmC,iBAAiB;AAAA,CAA4C;AACzN+Z,QAAQ,CAAC9jB,IAAI,kBAjqH6Fj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAiqHnBsuC,QAAQ;EAAA5jB,SAAA;EAAAc,MAAA;IAAA31B,IAAA;IAAAyQ,OAAA;IAAAgB,MAAA;IAAAC,YAAA;IAAAC,MAAA;IAAAooC,SAAA;IAAAzqC,SAAA;IAAAlL,MAAA;EAAA;EAAAi0B,OAAA;IAAA99B,MAAA;IAAAm+C,cAAA;EAAA;EAAArc,QAAA,GAjqHS3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAAn3B,IAAA;EAAAwzB,kBAAA,EAAA9+B,GAAA;EAAAg1B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA48C,kBAAAz9C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAknC,eAAA;MAAFlnC,EAAE,CAAA8G,cAAA,CAkqHpD,CAAC;MAlqHiD9G,EAAE,CAAAmE,cAAA,UAkqHpD,CAAC,YAAD,CAAC;MAlqHiDnE,EAAE,CAAA8E,SAAA,sBAwqHnG,CAAC;MAxqHgG9E,EAAE,CAAAqE,YAAA,CAyqH1F,CAAC;MAzqHuFrE,EAAE,CAAAmE,cAAA,UA0qHzE,CAAC;MA1qHsEnE,EAAE,CAAAmnC,YAAA,EA2qH5E,CAAC;MA3qHyEnnC,EAAE,CAAAqE,YAAA,CA4qH/F,CAAC;MA5qH4FrE,EAAE,CAAA8E,SAAA,aA6qHR,CAAC,UAAD,CAAC;MA7qHK9E,EAAE,CAAAqE,YAAA,CA+qHjG,CAAC;IAAA;IAAA,IAAAR,EAAA;MA/qH8F7D,EAAE,CAAA4I,WAAA,cAAA9E,GAAA,CAAA4J,SAkqHrD,CAAC;MAlqHkD1N,EAAE,CAAAwE,SAAA,EAmqHvE,CAAC;MAnqHoExE,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAA48C,QAmqHvE,CAAC;MAnqHoE1gD,EAAE,CAAAwE,SAAA,EA6qHjE,CAAC;MA7qH8DxE,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAAwD,IAAA,GA6qHjE,CAAC,WAAAxD,GAAA,CAAA4H,MAAD,CAAC;IAAA;EAAA;EAAAgyB,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAGwR;AACpU;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAjrH0G79B,EAAE,CAAA89B,iBAAA,CAirHjBiiB,QAAQ,EAAc,CAAC;IACtGtuC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,wBAAwB;MAAEr5B,QAAQ,EAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEi5B,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAE8F,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAErG,MAAM,EAAE,CAAC,oMAAoM;IAAE,CAAC;EACrS,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjsB,IAAI,EAAEzR,EAAE,CAAC+7B;IAAW,CAAC,EAAE;MAAEtqB,IAAI,EAAEzR,EAAE,CAACgmC;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE1+B,IAAI,EAAE,CAAC;MACxHmK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0X,OAAO,EAAE,CAAC;MACVtG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE0Y,MAAM,EAAE,CAAC;MACTtH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE2Y,YAAY,EAAE,CAAC;MACfvH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4Y,MAAM,EAAE,CAAC;MACTxH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEghD,SAAS,EAAE,CAAC;MACZ5vC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuW,SAAS,EAAE,CAAC;MACZnF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqL,MAAM,EAAE,CAAC;MACT+F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEo/C,cAAc,EAAE,CAAC;MACjBvuC,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM2gD,uBAAuB,CAAC;EAC1B/mB,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC/zB,KAAK,GAAG,OAAO;IACpB,IAAI,CAACqO,UAAU,GAAG,IAAI;IACtB,IAAI,CAACjT,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACwF,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC6gD,WAAW,GAAG,EAAE;IACrB,IAAI,CAACvuB,eAAe,GAAGxsB,KAAK,IAAIA,KAAK;IACrC,IAAI,CAACg7C,oBAAoB,GAAGttC,UAAU,IAAIA,UAAU;IACpD,IAAI,CAACN,sBAAsB,GAAGhF,KAAK,IAAIA,KAAK,CAACwF,cAAc,CAAC,CAAC;EACjE;EACAuuB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAoc,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC5wC,IAAI,CAAC6gC,GAAG,CAAC7L,CAAC,IAAIwS,MAAM,CAACxS,CAAC,CAACj3B,KAAK,CAAC,CAAC,CAAC+8B,MAAM,CAAC,CAAC+V,GAAG,EAAE7b,CAAC,KAAK6b,GAAG,GAAG7b,CAAC,EAAE,CAAC,CAAC;EAC7E;EACAR,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC1oB,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAAChuC,YAAY,GAAG,IAAI,CAACkJ,KAAK;IAC9B,IAAI,CAAC4kC,WAAW,GAAG,IAAI,CAACI,cAAc,CAAC,CAAC;EAC5C;EACAA,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC9wC,IAAI,CAAC6gC,GAAG,CAAC7L,CAAC,IAAI;MACtB,MAAMr/B,KAAK,GAAGu9B,WAAW,CAAC8B,CAAC,CAACh3B,IAAI,CAAC;MACjC,MAAMD,KAAK,GAAGi3B,CAAC,CAACj3B,KAAK;MACrB,MAAMlI,KAAK,GAAG,IAAI,CAACU,MAAM,CAACkkB,QAAQ,CAAC9kB,KAAK,CAAC;MACzC,MAAM0N,UAAU,GAAG,IAAI,CAACyI,KAAK,GAAG,CAAC,GAAI/N,KAAK,GAAG,IAAI,CAAC+N,KAAK,GAAI,GAAG,GAAG,CAAC;MAClE,MAAMlW,cAAc,GAAG,OAAO,IAAI,CAACusB,eAAe,KAAK,UAAU,GAAG,IAAI,CAACA,eAAe,CAACxsB,KAAK,CAAC,GAAGA,KAAK;MACvG,OAAO;QACHuN,MAAM,EAAEnF,KAAK;QACbiC,IAAI,EAAEg1B,CAAC;QACPj3B,KAAK;QACLlI,KAAK;QACLF,KAAK,EAAEC,cAAc;QACrBqO,YAAY,EAAE81B,SAAS,CAACnkC,cAAc,EAAE,EAAE,CAAC;QAC3Cm7C,YAAY,EAAE/b,CAAC,CAACh3B,IAAI;QACpBqF,UAAU,EAAE,IAAI,CAACstC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACttC,UAAU,CAAC,GAAGA,UAAU,CAACE,cAAc,CAAC;MAC9G,CAAC;IACL,CAAC,CAAC;EACN;EACA8E,OAAOA,CAACxQ,KAAK,EAAEi9B,IAAI,EAAE;IACjB,OAAOA,IAAI,CAACn/B,KAAK;EACrB;AACJ;AACA86C,uBAAuB,CAAC5lB,IAAI,YAAAmmB,gCAAAjmB,CAAA;EAAA,YAAAA,CAAA,IAAwF0lB,uBAAuB;AAAA,CAAmD;AAC9LA,uBAAuB,CAACtlB,IAAI,kBAxwH8Ej8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAwwHJ8vC,uBAAuB;EAAAplB,SAAA;EAAAc,MAAA;IAAAtxB,KAAA;IAAAmF,IAAA;IAAAzJ,MAAA;IAAAZ,KAAA;IAAAqO,UAAA;IAAAnB,eAAA;IAAAsf,eAAA;IAAAwuB,oBAAA;EAAA;EAAA9hB,OAAA;IAAA99B,MAAA;IAAAsE,QAAA;IAAAG,UAAA;EAAA;EAAAq9B,QAAA,GAxwHrB3jC,EAAE,CAAA4jC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAq9C,iCAAAl+C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,YAywH/C,CAAC;MAzwH4CnE,EAAE,CAAAoE,UAAA,IAAAqP,sCAAA,gBAgxHhG,CAAC;MAhxH6FzT,EAAE,CAAAoE,UAAA,IAAAwP,sCAAA,gBAmxHjG,CAAC;MAnxH8F5T,EAAE,CAAAmE,cAAA,YAoxH9E,CAAC;MApxH2EnE,EAAE,CAAAmF,MAAA,EAsxHvG,CAAC;MAtxHoGnF,EAAE,CAAAqE,YAAA,CAsxHjG,CAAC;MAtxH8FrE,EAAE,CAAAmE,cAAA,YAuxHnE,CAAC,YAAD,CAAC;MAvxHgEnE,EAAE,CAAAoE,UAAA,IAAAkQ,sCAAA,gBAqzH7F,CAAC;MArzH0FtU,EAAE,CAAAqE,YAAA,CAszH/F,CAAC,CAAD,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAR,EAAA;MAtzH4F7D,EAAE,CAAAqN,WAAA,UAAAvJ,GAAA,CAAA6H,KAAA,MAywHhD,CAAC;MAzwH6C3L,EAAE,CAAAwE,SAAA,EA2wHpF,CAAC;MA3wHiFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAgR,UA2wHpF,CAAC;MA3wHiF9U,EAAE,CAAAwE,SAAA,EAixH5D,CAAC;MAjxHyDxE,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAAgR,UAixH5D,CAAC;MAjxHyD9U,EAAE,CAAAwE,SAAA,EAsxHvG,CAAC;MAtxHoGxE,EAAE,CAAA6I,kBAAA,MAAA/E,GAAA,CAAA2C,KAAA,KAsxHvG,CAAC;MAtxHoGzG,EAAE,CAAAwE,SAAA,EA0xH1D,CAAC;MA1xHuDxE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAA09C,WA0xH1D,CAAC,iBAAA19C,GAAA,CAAAqV,OAAD,CAAC;IAAA;EAAA;EAAAokB,YAAA,GA+BstC2e,gBAAgB,EAA2Nl7C,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACklC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACvwD;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1zH0G79B,EAAE,CAAA89B,iBAAA,CA0zHjByjB,uBAAuB,EAAc,CAAC;IACrH9vC,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,4BAA4B;MAAEr5B,QAAQ,EAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEi5B,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAE8F,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAErG,MAAM,EAAE,CAAC,mtCAAmtC;IAAE,CAAC;EACpzC,CAAC,CAAC,QAAkB;IAAE/xB,KAAK,EAAE,CAAC;MACtB8F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyQ,IAAI,EAAE,CAAC;MACPW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoG,KAAK,EAAE,CAAC;MACRgL,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyU,UAAU,EAAE,CAAC;MACbrD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEuF,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACbmL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE+S,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4yB,eAAe,EAAE,CAAC;MAClBxhB,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEohD,oBAAoB,EAAE,CAAC;MACvBhwC,IAAI,EAAEpR;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM2hD,UAAU,GAAG,CACf/H,aAAa,EACbzR,kBAAkB,EAClB0T,gBAAgB,EAChBuB,WAAW,EACXtX,cAAc,EACdlB,eAAe,EACfZ,oBAAoB,EACpB3B,oBAAoB,EACpByU,eAAe,EACfW,qBAAqB,EACrBe,kBAAkB,EAClBI,wBAAwB,EACxBlC,0BAA0B,EAC1B4C,0BAA0B,EAC1BoG,QAAQ,EACRwB,uBAAuB,CAC1B;AACD,MAAMU,iBAAiB,CAAC;AAExBA,iBAAiB,CAACtmB,IAAI,YAAAumB,0BAAArmB,CAAA;EAAA,YAAAA,CAAA,IAAwFomB,iBAAiB;AAAA,CAAkD;AACjLA,iBAAiB,CAACrP,IAAI,kBA35HoF5yC,EAAE,CAAA6yC,gBAAA;EAAAphC,IAAA,EA25HGwwC;AAAiB,EA8BzE;AACvDA,iBAAiB,CAACnP,IAAI,kBA17HoF9yC,EAAE,CAAA+yC,gBAAA;EAAAC,OAAA,GA07HgC,CAAC7xC,YAAY,EAAEuxC,UAAU,EAAE8D,aAAa,CAAC,EAAEr1C,YAAY,EAAEuxC,UAAU,EAAE8D,aAAa;AAAA,EAAI;AAClO;EAAA,QAAA3Y,SAAA,oBAAAA,SAAA,KA37H0G79B,EAAE,CAAA89B,iBAAA,CA27HjBmkB,iBAAiB,EAAc,CAAC;IAC/GxwC,IAAI,EAAE3Q,QAAQ;IACdm2B,IAAI,EAAE,CAAC;MACC+b,OAAO,EAAE,CAAC7xC,YAAY,EAAEuxC,UAAU,EAAE8D,aAAa,CAAC;MAClDvD,YAAY,EAAE,CAAC,GAAG+O,UAAU,EAAE3a,kBAAkB,CAAC;MACjD6L,OAAO,EAAE,CAAC/xC,YAAY,EAAEuxC,UAAU,EAAE8D,aAAa,EAAE,GAAGwL,UAAU,EAAE3a,kBAAkB;IACxF,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,SAAS8a,uBAAuBA,CAAC;EAAEx2C,KAAK;EAAED,MAAM;EAAE02C,OAAO;EAAEC,SAAS,GAAG,KAAK;EAAEC,SAAS,GAAG,KAAK;EAAEC,WAAW,GAAG,CAAC;EAAEC,UAAU,GAAG,CAAC;EAAEC,UAAU,GAAG,KAAK;EAAEC,UAAU,GAAG,KAAK;EAAEtc,UAAU,GAAG,KAAK;EAAEE,UAAU,GAAG7D,SAAS,CAACkG,OAAO;EAAEga,cAAc,GAAGz7C,cAAc,CAACqH,KAAK;EAAEq0C,OAAO,GAAG;AAAG,CAAC,EAAE;EACjR,IAAIC,OAAO,GAAGT,OAAO,CAAC,CAAC,CAAC;EACxB,IAAI1b,UAAU,GAAG/6B,KAAK;EACtB,IAAIm3C,WAAW,GAAGp3C,MAAM,GAAG02C,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;EAClD,IAAIhc,UAAU,IAAIuc,cAAc,KAAKz7C,cAAc,CAACqH,KAAK,EAAE;IACvD,IAAI+3B,UAAU,KAAK7D,SAAS,CAACkG,OAAO,EAAE;MAClCia,OAAO,IAAI,CAAC;IAChB,CAAC,MACI;MACDA,OAAO,IAAI,CAAC;IAChB;EACJ;EACAlc,UAAU,GAAIA,UAAU,GAAGkc,OAAO,GAAI,EAAE;EACxClc,UAAU,GAAGA,UAAU,GAAG0b,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;EACjD,IAAIC,SAAS,EAAE;IACXS,WAAW,IAAI,CAAC;IAChBA,WAAW,IAAIP,WAAW;IAC1B,IAAIE,UAAU,EAAE;MACZ;MACA,MAAMzyC,MAAM,GAAG,EAAE,GAAG,CAAC;MACrB8yC,WAAW,IAAI9yC,MAAM;IACzB;EACJ;EACA,IAAIsyC,SAAS,EAAE;IACX5b,UAAU,IAAI,CAAC;IACfA,UAAU,IAAI8b,UAAU;IACxBK,OAAO,IAAIL,UAAU;IACrBK,OAAO,IAAI,EAAE;IACb,IAAIH,UAAU,EAAE;MACZ;MACA,MAAM1yC,MAAM,GAAG,EAAE,GAAG,CAAC;MACrB02B,UAAU,IAAI12B,MAAM;MACpB6yC,OAAO,IAAI7yC,MAAM;IACrB;EACJ;EACA02B,UAAU,GAAGpD,IAAI,CAACxgC,GAAG,CAAC,CAAC,EAAE4jC,UAAU,CAAC;EACpCoc,WAAW,GAAGxf,IAAI,CAACxgC,GAAG,CAAC,CAAC,EAAEggD,WAAW,CAAC;EACtC,OAAO;IACHn3C,KAAK,EAAE23B,IAAI,CAACqD,KAAK,CAACD,UAAU,CAAC;IAC7Bh7B,MAAM,EAAE43B,IAAI,CAACqD,KAAK,CAACmc,WAAW,CAAC;IAC/BD,OAAO,EAAEvf,IAAI,CAACqD,KAAK,CAACkc,OAAO;EAC/B,CAAC;AACL;AAEA,MAAME,SAAS,GAAG,CACd;EACIj0C,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,SAAS;EACfk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,MAAM;EACZk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,MAAM;EACZk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AACnG,CAAC,EACD;EACI0H,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvBx/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,KAAK;EACXk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvBx/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,MAAM;EACZk0C,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvBx/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,QAAQ;EACdk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,SAAS;EACfk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,QAAQ;EACdk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,OAAO;EACbk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACI0H,IAAI,EAAE,aAAa;EACnBk0C,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxBvhC,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,CACJ;AAED,MAAM67C,WAAW,CAAC;EACdzoB,WAAWA,CAACzhB,MAAM,EAAEtH,IAAI,EAAErK,MAAM,EAAE4R,YAAY,EAAE;IAC5C,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC5BA,MAAM,GAAGgqC,SAAS,CAACld,IAAI,CAACqd,EAAE,IAAI;QAC1B,OAAOA,EAAE,CAACp0C,IAAI,KAAKiK,MAAM;MAC7B,CAAC,CAAC;IACN;IACA,IAAI,CAACoqC,WAAW,GAAGpqC,MAAM,CAAC3R,MAAM;IAChC,IAAI,CAACwP,SAAS,GAAGnF,IAAI;IACrB,IAAI,CAACrK,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC4R,YAAY,GAAGA,YAAY;IAChC,IAAI,CAAC+zB,KAAK,GAAG,IAAI,CAACqW,mBAAmB,CAACrqC,MAAM,EAAEtH,IAAI,EAAE,IAAI,CAACrK,MAAM,CAAC;EACpE;EACAg8C,mBAAmBA,CAACrqC,MAAM,EAAEtH,IAAI,EAAErK,MAAM,EAAE;IACtC,IAAI,OAAO2R,MAAM,KAAK,QAAQ,EAAE;MAC5BA,MAAM,GAAGgqC,SAAS,CAACld,IAAI,CAACqd,EAAE,IAAI;QAC1B,OAAOA,EAAE,CAACp0C,IAAI,KAAKiK,MAAM;MAC7B,CAAC,CAAC;IACN;IACA,IAAIsqC,UAAU;IACd,QAAQ5xC,IAAI;MACR,KAAKgxB,SAAS,CAAC6gB,QAAQ;QACnBD,UAAU,GAAGlhD,aAAa,CAAC,CAAC,CACvBS,KAAK,CAACmW,MAAM,CAAC3R,MAAM,CAAC,CACpBA,MAAM,CAACA,MAAM,CAAC;QACnB;MACJ,KAAKq7B,SAAS,CAACkG,OAAO;QAClB0a,UAAU,GAAGnhD,YAAY,CAAC,CAAC,CACtBU,KAAK,CAACmW,MAAM,CAAC3R,MAAM,CAAC,CACpBA,MAAM,CAACA,MAAM,CAAC;QACnB;MACJ,KAAKq7B,SAAS,CAACmE,MAAM;QACjB;UACI,MAAMuc,WAAW,GAAG,CAAC,GAAGpqC,MAAM,CAAC3R,MAAM,CAAC;UACtC,IAAI+7C,WAAW,CAACr2C,MAAM,KAAK,CAAC,EAAE;YAC1Bq2C,WAAW,CAACpjB,IAAI,CAACojB,WAAW,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAACA,WAAW,GAAGA,WAAW;UAClC;UACA,MAAMI,MAAM,GAAG3gD,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAGugD,WAAW,CAACr2C,MAAM,CAAC;UACpDu2C,UAAU,GAAGrhD,WAAW,CAAC,CAAC,CACrBY,KAAK,CAACugD,WAAW,CAAC,CAClB/7C,MAAM,CAACm8C,MAAM,CAAC;QACvB;QACA;MACJ;QACI;IACR;IACA,OAAOF,UAAU;EACrB;EACA93B,QAAQA,CAAC1c,KAAK,EAAE;IACZ,IAAIA,KAAK,KAAKsD,SAAS,IAAItD,KAAK,KAAK,IAAI,EAAE;MACvC,MAAM,IAAI6xB,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,IAAI,IAAI,CAAC9pB,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MACrC,MAAMlpB,UAAU,GAAG1b,WAAW,CAAC,CAAC,CAC3BoF,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC,CACnBxE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB,OAAO,IAAI,CAACmqC,KAAK,CAACrvB,UAAU,CAAC7O,KAAK,CAAC,CAAC;IACxC,CAAC,MACI;MACD,IAAI,OAAO,IAAI,CAACmK,YAAY,KAAK,UAAU,EAAE;QACzC,OAAO,IAAI,CAACA,YAAY,CAACnK,KAAK,CAAC;MACnC;MACA,MAAMykB,cAAc,GAAGzkB,KAAK,CAACw5B,QAAQ,CAAC,CAAC;MACvC,IAAImb,KAAK,CAAC,CAAC;MACX,IAAI,IAAI,CAACxqC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAClM,MAAM,GAAG,CAAC,EAAE;QACnD02C,KAAK,GAAG,IAAI,CAACxqC,YAAY,CAAC6sB,IAAI,CAAC4d,OAAO,IAAI;UACtC,OAAOA,OAAO,CAAC30C,IAAI,CAAC40C,WAAW,CAAC,CAAC,KAAKpwB,cAAc,CAACowB,WAAW,CAAC,CAAC;QACtE,CAAC,CAAC;MACN;MACA,IAAIF,KAAK,EAAE;QACP,OAAOA,KAAK,CAAC30C,KAAK;MACtB,CAAC,MACI;QACD,OAAO,IAAI,CAACk+B,KAAK,CAACl+B,KAAK,CAAC;MAC5B;IACJ;EACJ;EACA80C,sBAAsBA,CAAC90C,KAAK,EAAE8tC,KAAK,EAAE;IACjC,IAAIA,KAAK,KAAKxqC,SAAS,EAAE;MACrBwqC,KAAK,GAAG,IAAI,CAACv1C,MAAM,CAAC,CAAC,CAAC;IAC1B;IACA,MAAMsW,UAAU,GAAG1b,WAAW,CAAC,CAAC,CAC3BoF,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC,CACnBxE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAMghD,eAAe,GAAGxhD,SAAS,CAAC,CAAC,CAACgF,MAAM,CAAC,IAAI,CAAC+7C,WAAW,CAAC,CAACvgD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,MAAMuzB,QAAQ,GAAG,IAAI,CAAC5K,QAAQ,CAAC1c,KAAK,CAAC;IACrC;IACA,MAAMusC,QAAQ,GAAG19B,UAAU,CAACi/B,KAAK,CAAC;IAClC,MAAMzmB,UAAU,GAAG,IAAI,CAAC3K,QAAQ,CAACoxB,KAAK,CAAC;IACvC,MAAMtB,MAAM,GAAG39B,UAAU,CAAC7O,KAAK,CAAC;IAChC,IAAI4wB,CAAC,GAAG,CAAC;IACT,IAAIokB,UAAU,GAAGzI,QAAQ;IACzB,MAAMnE,KAAK,GAAG,EAAE;IAChBA,KAAK,CAAClX,IAAI,CAAC;MACPp5B,KAAK,EAAEuvB,UAAU;MACjBlmB,MAAM,EAAEorC,QAAQ;MAChB0I,cAAc,EAAE1I,QAAQ;MACxBrrC,OAAO,EAAE;IACb,CAAC,CAAC;IACF,OAAO8zC,UAAU,GAAGxI,MAAM,IAAI5b,CAAC,GAAG,IAAI,CAAC0jB,WAAW,CAACr2C,MAAM,EAAE;MACvD,MAAMnG,KAAK,GAAG,IAAI,CAACw8C,WAAW,CAAC1jB,CAAC,CAAC;MACjC,MAAMzvB,MAAM,GAAG4zC,eAAe,CAACj9C,KAAK,CAAC;MACrC,IAAIqJ,MAAM,IAAIorC,QAAQ,EAAE;QACpB3b,CAAC,EAAE;QACH;MACJ;MACA,IAAIzvB,MAAM,CAACouC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC/C,MAAM,GAAGuI,eAAe,CAACpW,SAAS,CAAC,CAAC,EAAE4Q,OAAO,CAAC,CAAC,CAAC,EAAE;QACxE;MACJ;MACAnH,KAAK,CAAClX,IAAI,CAAC;QACPp5B,KAAK;QACLqJ,MAAM;QACND,OAAO,EAAE;MACb,CAAC,CAAC;MACF8zC,UAAU,GAAG7zC,MAAM;MACnByvB,CAAC,EAAE;IACP;IACA,IAAIwX,KAAK,CAACA,KAAK,CAACnqC,MAAM,GAAG,CAAC,CAAC,CAACkD,MAAM,GAAG,GAAG,EAAE;MACtCinC,KAAK,CAAClX,IAAI,CAAC;QACPp5B,KAAK,EAAEwvB,QAAQ;QACfnmB,MAAM,EAAEqrC,MAAM;QACdtrC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;IACA,IAAIsrC,MAAM,KAAKD,QAAQ,EAAE;MACrBnE,KAAK,CAAC,CAAC,CAAC,CAACjnC,MAAM,GAAG,CAAC;MACnBinC,KAAK,CAAC,CAAC,CAAC,CAACjnC,MAAM,GAAG,GAAG;IACzB,CAAC,MACI;MACD;MACA,IAAIinC,KAAK,CAACA,KAAK,CAACnqC,MAAM,GAAG,CAAC,CAAC,CAACkD,MAAM,KAAK,GAAG,EAAE;QACxC,KAAK,MAAM86B,CAAC,IAAImM,KAAK,EAAE;UACnBnM,CAAC,CAAC96B,MAAM,GAAI,CAAC86B,CAAC,CAAC96B,MAAM,GAAGorC,QAAQ,KAAKC,MAAM,GAAGD,QAAQ,CAAC,GAAI,GAAG;QAClE;MACJ;IACJ;IACA,OAAOnE,KAAK;EAChB;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8M,sBAAsBA,CAAChsC,OAAO,EAAE;EACrC,MAAMisC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B,KAAK,MAAM/sB,MAAM,IAAInf,OAAO,EAAE;IAC1B,KAAK,MAAM+tB,CAAC,IAAI5O,MAAM,CAACvY,MAAM,EAAE;MAC3BqlC,QAAQ,CAACE,GAAG,CAACpe,CAAC,CAACh3B,IAAI,CAAC;IACxB;EACJ;EACA,OAAOsoC,KAAK,CAAC+M,IAAI,CAACH,QAAQ,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA,SAASI,YAAYA,CAACxD,MAAM,EAAEyD,aAAa,GAAG,IAAI,EAAE;EAChD,IAAIA,aAAa,EAAE;IACf,MAAMC,QAAQ,GAAG1D,MAAM,CAAC2D,KAAK,CAAC11C,KAAK,IAAIA,KAAK,YAAY0oB,IAAI,CAAC;IAC7D,IAAI+sB,QAAQ,EAAE;MACV,OAAO7hB,SAAS,CAAC4V,IAAI;IACzB;EACJ;EACA,MAAMmM,UAAU,GAAG5D,MAAM,CAAC2D,KAAK,CAAC11C,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,CAAC;EACnE,IAAI21C,UAAU,EAAE;IACZ,OAAO/hB,SAAS,CAACmE,MAAM;EAC3B;EACA,OAAOnE,SAAS,CAACkG,OAAO;AAC5B;AACA,SAAS8b,eAAeA,CAAC7D,MAAM,EAAE8D,SAAS,EAAEC,SAAS,EAAE;EACnD,MAAM/tC,SAAS,GAAGwtC,YAAY,CAACxD,MAAM,CAAC;EACtC,IAAI9oC,IAAI,GAAG,EAAE;EACb,IAAI1Q,MAAM,GAAG,EAAE;EACf,IAAIwP,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;IAChCga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;EACvC;EACA,IAAIx7C,GAAG;EACP,IAAIC,GAAG;EACP,IAAI8T,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,IAAIzhC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;IAChE,MAAMge,YAAY,GAAGhE,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;IAC/Cx7C,GAAG,GAAG6hD,SAAS,GAAGA,SAAS,GAAGphB,IAAI,CAACzgC,GAAG,CAAC,GAAG+hD,YAAY,CAAC;IACvD9hD,GAAG,GAAG6hD,SAAS,GAAGA,SAAS,GAAGrhB,IAAI,CAACxgC,GAAG,CAAC,GAAG8hD,YAAY,CAAC;EAC3D;EACA,IAAIhuC,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;IAC9BjxC,MAAM,GAAG,CAAC,IAAImwB,IAAI,CAAC10B,GAAG,CAAC,EAAE,IAAI00B,IAAI,CAACz0B,GAAG,CAAC,CAAC;IACvCgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;MAC9B,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;MACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;MACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;MACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;MACb,OAAO,CAAC;IACZ,CAAC,CAAC;EACN,CAAC,MACI,IAAInuC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;IACrCx/B,MAAM,GAAG,CAACvE,GAAG,EAAEC,GAAG,CAAC;IACnB;IACAgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;EAC5C,CAAC,MACI;IACDzzC,MAAM,GAAGw5C,MAAM;IACf9oC,IAAI,GAAG8oC,MAAM;EACjB;EACA,OAAO;IAAEx5C,MAAM;IAAE0Q,IAAI;IAAElB;EAAU,CAAC;AACtC;AAEA,SAASsuC,UAAUA,CAACp0C,IAAI,EAAEq0C,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAE;EACnD,OAAOlyB,IAAI,CAAC+zC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,IAAI7X,SAAS,KAAK,KAAK,EAAE;MACrB,OAAO8hB,CAAC,CAACK,QAAQ,CAAC,GAAGtK,CAAC,CAACsK,QAAQ,CAAC;IACpC,CAAC,MACI;MACD,OAAOtK,CAAC,CAACsK,QAAQ,CAAC,GAAGL,CAAC,CAACK,QAAQ,CAAC;IACpC;EACJ,CAAC,CAAC;AACN;AACA,SAASC,YAAYA,CAACt0C,IAAI,EAAEq0C,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAE57B,MAAM,EAAE;EAC7D,OAAO0J,IAAI,CAAC+zC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,MAAMwK,IAAI,GAAGP,CAAC,CAACK,QAAQ,CAAC;IACxB,MAAMG,IAAI,GAAGzK,CAAC,CAACsK,QAAQ,CAAC;IACxB,MAAMI,IAAI,GAAGn+C,MAAM,CAACg4B,OAAO,CAACimB,IAAI,CAAC;IACjC,MAAMG,IAAI,GAAGp+C,MAAM,CAACg4B,OAAO,CAACkmB,IAAI,CAAC;IACjC,IAAItiB,SAAS,KAAK,KAAK,EAAE;MACrB,OAAOuiB,IAAI,GAAGC,IAAI;IACtB,CAAC,MACI;MACD,OAAOA,IAAI,GAAGD,IAAI;IACtB;EACJ,CAAC,CAAC;AACN;AACA,SAASE,UAAUA,CAAC30C,IAAI,EAAEq0C,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAE;EACnD,OAAOlyB,IAAI,CAAC+zC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,MAAMkK,KAAK,GAAGD,CAAC,CAACK,QAAQ,CAAC,CAACH,OAAO,CAAC,CAAC;IACnC,MAAMC,KAAK,GAAGpK,CAAC,CAACsK,QAAQ,CAAC,CAACH,OAAO,CAAC,CAAC;IACnC,IAAIhiB,SAAS,KAAK,KAAK,EAAE;MACrB,IAAI+hB,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;MACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;MACb,OAAO,CAAC;IACZ,CAAC,MACI;MACD,IAAIA,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC,CAAC;MACb,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC;MACZ,OAAO,CAAC;IACZ;EACJ,CAAC,CAAC;AACN;AAEA,MAAMW,mBAAmB,CAAC;EACtBlrB,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC7jB,SAAS,GAAG,MAAM;IACvB,IAAI,CAACgvC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC9wC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACjT,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;EACpC;EACAiiC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACugB,cAAc,CAAC,CAAC;IACrB,IAAIC,WAAW;IACf,IAAIC,YAAY;IAChB,MAAMC,SAAS,GAAGlgB,CAAC,IAAI;MACnB,MAAMr/B,KAAK,GAAGq/B,CAAC,CAACh3B,IAAI;MACpB,OAAO,IAAI,CAACvD,MAAM,CAAC9E,KAAK,CAAC;IAC7B,CAAC;IACD,IAAI,IAAI,CAACk/C,OAAO,IAAI,IAAI,CAACC,UAAU,EAAE;MACjCE,WAAW,GAAGzjD,IAAI,CAAC,CAAC,CACfqQ,CAAC,CAACszC,SAAS,CAAC,CACZC,EAAE,CAAC,CAACngB,CAAC,EAAErG,CAAC,KAAK,IAAI,CAACjwB,MAAM,CAACs2B,CAAC,CAACqY,EAAE,CAAC,CAAC,CAC/B3wC,EAAE,CAAC,CAACs4B,CAAC,EAAErG,CAAC,KAAK,IAAI,CAACjwB,MAAM,CAACs2B,CAAC,CAACyS,EAAE,CAAC,CAAC;MACpCwN,YAAY,GAAG1jD,IAAI,CAAC,CAAC,CAChBqQ,CAAC,CAACszC,SAAS,CAAC,CACZC,EAAE,CAACngB,CAAC,IAAI,IAAI,CAACt2B,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/B4K,EAAE,CAACs4B,CAAC,IAAI,IAAI,CAACt2B,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MACI;MACDkjD,WAAW,GAAGzjD,IAAI,CAAC,CAAC,CACfqQ,CAAC,CAACszC,SAAS,CAAC,CACZC,EAAE,CAAC,MAAO,IAAI,CAACtvC,SAAS,KAAK,MAAM,GAAG,IAAI,CAACnH,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4M,MAAM,CAAC,IAAI,CAACmH,SAAS,CAAE,CAAC,CAC5FnJ,EAAE,CAACs4B,CAAC,IAAI,IAAI,CAACt2B,MAAM,CAACs2B,CAAC,CAACj3B,KAAK,CAAC,CAAC;MAClCk3C,YAAY,GAAG1jD,IAAI,CAAC,CAAC,CAChBqQ,CAAC,CAACszC,SAAS,CAAC,CACZC,EAAE,CAACngB,CAAC,IAAK,IAAI,CAACnvB,SAAS,KAAK,MAAM,GAAG,IAAI,CAACnH,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4M,MAAM,CAAC,IAAI,CAACmH,SAAS,CAAE,CAAC,CAC3FnJ,EAAE,CAACs4B,CAAC,IAAK,IAAI,CAACnvB,SAAS,KAAK,MAAM,GAAG,IAAI,CAACnH,MAAM,CAAC5M,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4M,MAAM,CAAC,IAAI,CAACmH,SAAS,CAAE,CAAC;IACpG;IACAmvC,WAAW,CAAChvC,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;IAC7BivC,YAAY,CAACjvC,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;IAC9B,IAAI,CAAC/G,OAAO,GAAG,GAAG;IAClB,IAAIe,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC6N,MAAM;IAC3B,IAAI,IAAI,CAAC/H,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MACrC91B,IAAI,GAAGo0C,UAAU,CAACp0C,IAAI,EAAE,MAAM,CAAC;IACnC,CAAC,MACI,IAAI,IAAI,CAAC8F,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACxCvnC,IAAI,GAAG20C,UAAU,CAAC30C,IAAI,EAAE,MAAM,CAAC;IACnC,CAAC,MACI;MACDA,IAAI,GAAGs0C,YAAY,CAACt0C,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAACvF,MAAM,CAACnE,MAAM,CAAC,CAAC,CAAC;IAClE;IACA,IAAI,CAACgvB,IAAI,GAAG0vB,WAAW,CAACh1C,IAAI,CAAC;IAC7B,IAAI,CAACypC,YAAY,GAAGwL,YAAY,CAACj1C,IAAI,CAAC;EAC1C;EACA+0C,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACx+C,MAAM,CAACuP,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC5C,IAAI,CAACvb,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACs6B,OAAO,IAAI,IAAI,CAACC,UAAU,EAAE;QACjC,MAAMM,QAAQ,GAAG,IAAI,CAACp1C,IAAI,CAAC6N,MAAM,CAACgzB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACqY,EAAE,CAAC;QAChD,MAAMgI,QAAQ,GAAG,IAAI,CAACr1C,IAAI,CAAC6N,MAAM,CAACgzB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACyS,EAAE,CAAC;QAChD,MAAMz1C,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAGqjD,QAAQ,CAAC;QACjC,MAAMtjD,GAAG,GAAGygC,IAAI,CAACzgC,GAAG,CAAC,GAAGqjD,QAAQ,CAAC;QACjC,IAAI,CAAC50C,aAAa,GAAG,IAAI,CAACjK,MAAM,CAACs8C,sBAAsB,CAAC7gD,GAAG,EAAED,GAAG,CAAC;MACrE,CAAC,MACI;QACD,MAAM+9C,MAAM,GAAG,IAAI,CAAC9vC,IAAI,CAAC6N,MAAM,CAACgzB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj3B,KAAK,CAAC;QACjD,MAAM/L,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;QAC/B,IAAI,CAACtvC,aAAa,GAAG,IAAI,CAACjK,MAAM,CAACs8C,sBAAsB,CAAC7gD,GAAG,CAAC;MAChE;IACJ,CAAC,MACI;MACD,IAAI,CAACuoB,WAAW,GAAG,KAAK;MACxB,IAAI,CAAC/Z,aAAa,GAAGa,SAAS;IAClC;EACJ;EACAvL,QAAQA,CAAC++B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAAC19B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAM29B,IAAI,GAAG,IAAI,CAAC39B,aAAa,CAAC49B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC72B,IAAI,KAAKg3B,CAAC,CAACh3B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO82B,IAAI,KAAKzzB,SAAS;EAC7B;EACAgZ,UAAUA,CAACwa,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAAC19B,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC6E,MAAM,KAAK,CAAC,EACtD,OAAO,KAAK;IAChB,MAAM84B,IAAI,GAAG,IAAI,CAAC39B,aAAa,CAAC49B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC72B,IAAI,KAAKg3B,CAAC,CAACh3B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO82B,IAAI,KAAKzzB,SAAS;EAC7B;AACJ;AACAuzC,mBAAmB,CAAC/pB,IAAI,YAAAyqB,4BAAAvqB,CAAA;EAAA,YAAAA,CAAA,IAAwF6pB,mBAAmB;AAAA,CAAmD;AACtLA,mBAAmB,CAACzpB,IAAI,kBA/kJkFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EA+kJRi0C,mBAAmB;EAAAvpB,SAAA;EAAAc,MAAA;IAAAnsB,IAAA;IAAAvF,MAAA;IAAAiE,MAAA;IAAAmH,SAAA;IAAAtP,MAAA;IAAAuP,SAAA;IAAA+uC,OAAA;IAAAC,UAAA;IAAA/uC,QAAA;IAAAC,KAAA;IAAA7O,aAAA;IAAA6M,UAAA;EAAA;EAAA6qB,OAAA;IAAA99B,MAAA;EAAA;EAAA8hC,QAAA,GA/kJb3jC,EAAE,CAAA4jC,oBAAA;EAAA+G,KAAA,EAAA31B,IAAA;EAAAkoB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA2hD,6BAAAxiD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAA8G,cAAA,CA6lJvG,CAAC;MA7lJoG9G,EAAE,CAAA8E,SAAA,UA6lJvG,CAAC;IAAA;IAAA,IAAAjB,EAAA;MA7lJoG7D,EAAE,CAAA0R,WAAA,WAAA5N,GAAA,CAAA8C,QAAA,CAAA9C,GAAA,CAAAgN,IAAA,CA2lJxE,CAAC,aAAAhN,GAAA,CAAAqnB,UAAA,CAAArnB,GAAA,CAAAgN,IAAA,CAAD,CAAC;MA3lJqE9Q,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAAgN,IAmlJ1F,CAAC,SAAAhN,GAAA,CAAAsyB,IAAD,CAAC,SAAAtyB,GAAA,CAAAuD,MAAA,CAAAkkB,QAAA,CAAAznB,GAAA,CAAAgN,IAAA,CAAAhC,IAAA,CAAD,CAAC,UAAAhL,GAAA,CAAAwN,aAAD,CAAC,iBAAAxN,GAAA,CAAAy2C,YAAD,CAAC,YAAAz2C,GAAA,CAAAiM,OAAD,CAAC,aAAAjM,GAAA,CAAA+S,QAAA,IAAA/S,GAAA,CAAAunB,WAAD,CAAC,eAAAvnB,GAAA,CAAAgR,UAAD,CAAC;IAAA;EAAA;EAAAyoB,YAAA,GAWuB0c,aAAa;EAAAtc,aAAA;EAAAmG,eAAA;AAAA,EAA6O;AACpS;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/lJ0G79B,EAAE,CAAA89B,iBAAA,CA+lJjB4nB,mBAAmB,EAAc,CAAC;IACjHj0C,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,2BAA2B;MACrCr5B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEjzB,IAAI,EAAE,CAAC;MACrBW,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkL,MAAM,EAAE,CAAC;MACTkG,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmP,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsW,SAAS,EAAE,CAAC;MACZlF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgH,MAAM,EAAE,CAAC;MACToK,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuW,SAAS,EAAE,CAAC;MACZnF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEslD,OAAO,EAAE,CAAC;MACVl0C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEulD,UAAU,EAAE,CAAC;MACbn0C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwW,QAAQ,EAAE,CAAC;MACXpF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyW,KAAK,EAAE,CAAC;MACRrF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4H,aAAa,EAAE,CAAC;MAChBwJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyU,UAAU,EAAE,CAAC;MACbrD,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4P,IAAI,EAAE7Q;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM0lD,kBAAkB,SAAS9d,kBAAkB,CAAC;EAChDhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAAC1e,MAAM,GAAG,KAAK;IACnB,IAAI,CAACstC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGz7C,cAAc,CAACqH,KAAK;IAC1C,IAAI,CAACi4C,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAAC9vC,SAAS,GAAG,MAAM;IACvB,IAAI,CAAC0qC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACqF,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC97C,aAAa,GAAG,IAAI;IACzB,IAAI,CAACkM,KAAK,GAAGxU,WAAW;IACxB,IAAI,CAAC2F,aAAa,GAAG,EAAE;IACvB,IAAI,CAACwN,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACY,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACX,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACW,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACqwC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC90C,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAChG,SAAS,GAAG,KAAK;IACtB,IAAI,CAAC1F,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC8pC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC1pC,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC8tC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACztC,OAAO,GAAG,CAACxQ,KAAK,EAAEi9B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC92B,IAAI;IACpB,CAAC;EACL;EACAw2B,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAAC75B,IAAI,GAAG02C,uBAAuB,CAAC;MAChCx2C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB02C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACltC,cAAc;MAC/BmtC,UAAU,EAAE,IAAI,CAACvsC,cAAc;MAC/BiwB,UAAU,EAAE,IAAI,CAACntB,MAAM;MACvBqtB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,IAAI,CAAC+D,QAAQ,EAAE;MACf,IAAI,CAACj7C,IAAI,CAACC,MAAM,IAAI,IAAI,CAACoN,cAAc,GAAG,IAAI,CAAC2xB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmc,eAAe;IACnF;IACA,IAAI,CAACvG,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,IAAI,CAACuG,cAAc,EAAE;MACrB,IAAI,CAACxG,OAAO,GAAG,IAAI,CAACwG,cAAc;IACtC;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAAC17C,MAAM,GAAG,IAAI,CAACg1C,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC50C,IAAI,CAACE,KAAK,CAAC;IAC3D,IAAI,CAAC6D,MAAM,GAAG,IAAI,CAAC03C,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACr7C,IAAI,CAACC,MAAM,CAAC;IAC5D,IAAI,CAACy7C,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACpgD,aAAa,GAAG,IAAI,CAACqgD,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAAC35C,SAAS,GAAI,aAAY,IAAI,CAACjC,IAAI,CAACo3C,OAAQ,KAAI,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IACrE,IAAI,CAAC6c,UAAU,GAAG,MAAM,GAAGxxB,EAAE,CAAC,CAAC,CAACuS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACrf,QAAQ,GAAI,QAAO,IAAI,CAACs+B,UAAW,GAAE;EAC9C;EACAH,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACT,QAAQ,EAAE;MACf,IAAI,CAAC7tC,aAAa,GAAG,IAAI,CAACpN,IAAI,CAACE,KAAK;MACpC,IAAI,CAAC47C,eAAe,GAAG,IAAI,CAACjH,UAAU,CAAC,CAAC;MACxC,IAAI,CAACnoC,cAAc,GAAG,IAAI,CAACooC,SAAS,CAAC,IAAI,CAACgH,eAAe,EAAE,IAAI,CAAC1uC,aAAa,CAAC;MAC9E,IAAI,CAACT,cAAc,GAAG,IAAI,CAAC8uC,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAChuC,cAAc,CAAC;MACvE,IAAI,CAACI,iBAAiB,GAAI,aAAY,IAAI,CAACzN,IAAI,CAACo3C,OAAQ,KAAI,CAAC,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IAClF;EACJ;EACA6V,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAGmD,sBAAsB,CAAC,IAAI,CAAChsC,OAAO,CAAC;IACjD,IAAI,CAACnB,SAAS,GAAGwtC,YAAY,CAACxD,MAAM,CAAC;IACrC,IAAIx5C,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAACwP,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MACrCga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;IACvC;IACA,IAAIx7C,GAAG;IACP,IAAIC,GAAG;IACP,IAAI,IAAI,CAAC8T,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,IAAI,IAAI,CAACzhC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1E/jC,GAAG,GAAG,IAAI,CAAC6hD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGphB,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;MAC3D99C,GAAG,GAAG,IAAI,CAAC6hD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGrhB,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;IAC/D;IACA,IAAI,IAAI,CAAChqC,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnCjxC,MAAM,GAAG,CAAC,IAAImwB,IAAI,CAAC10B,GAAG,CAAC,EAAE,IAAI00B,IAAI,CAACz0B,GAAG,CAAC,CAAC;MACvC,IAAI,CAACgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;QACnC,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;QACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;QACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;QACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;QACb,OAAO,CAAC;MACZ,CAAC,CAAC;IACN,CAAC,MACI,IAAI,IAAI,CAACnuC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1Cx/B,MAAM,GAAG,CAACvE,GAAG,EAAEC,GAAG,CAAC;MACnB;MACA,IAAI,CAACgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;IACjD,CAAC,MACI;MACDzzC,MAAM,GAAGw5C,MAAM;MACf,IAAI,CAAC9oC,IAAI,GAAG8oC,MAAM;IACtB;IACA,OAAOx5C,MAAM;EACjB;EACA2/C,UAAUA,CAAA,EAAG;IACT,MAAM3/C,MAAM,GAAG,EAAE;IACjB,KAAK,MAAM2Q,OAAO,IAAI,IAAI,CAACA,OAAO,EAAE;MAChC,KAAK,MAAM+tB,CAAC,IAAI/tB,OAAO,CAAC4G,MAAM,EAAE;QAC5B,IAAI,CAACvX,MAAM,CAACy5C,QAAQ,CAAC/a,CAAC,CAACj3B,KAAK,CAAC,EAAE;UAC3BzH,MAAM,CAAC24B,IAAI,CAAC+F,CAAC,CAACj3B,KAAK,CAAC;QACxB;MACJ;IACJ;IACA,MAAM+xC,MAAM,GAAG,CAAC,GAAGx5C,MAAM,CAAC;IAC1B,IAAI,CAAC,IAAI,CAACi6C,SAAS,EAAE;MACjBT,MAAM,CAAC7gB,IAAI,CAAC,CAAC,CAAC;IAClB;IACA,IAAI,IAAI,CAACppB,SAAS,KAAK,MAAM,EAAE;MAC3BiqC,MAAM,CAAC7gB,IAAI,CAAC,IAAI,CAACppB,SAAS,CAAC;IAC/B;IACA,MAAM9T,GAAG,GAAG,IAAI,CAAC2kD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGlkB,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;IACjE,MAAM99C,GAAG,GAAG,IAAI,CAAC2kD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGnkB,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;IACjE,OAAO,CAAC/9C,GAAG,EAAEC,GAAG,CAAC;EACrB;EACAmkD,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAAClvC,OAAO,CAAC45B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACh3B,IAAI,CAAC;EACxC;EACAyxC,SAASA,CAACn5C,MAAM,EAAEuE,KAAK,EAAE;IACrB,IAAIohC,KAAK;IACT,IAAI,IAAI,CAACn2B,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGhrC,SAAS,CAAC,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAAC6U,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAG/qC,WAAW,CAAC,CAAC;IACzB,CAAC,MACI,IAAI,IAAI,CAAC4U,SAAS,KAAK6rB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG9qC,UAAU,CAAC,CAAC,CAAC2tC,OAAO,CAAC,GAAG,CAAC;IACrC;IACA7C,KAAK,CAACnqC,KAAK,CAAC,CAAC,CAAC,EAAE+I,KAAK,CAAC,CAAC,CAACvE,MAAM,CAACA,MAAM,CAAC;IACtC,OAAO,IAAI,CAACu/C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAAC9/C,MAAM,EAAEsE,MAAM,EAAE;IACtB,MAAMqhC,KAAK,GAAG/qC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC8I,MAAM,EAAE,CAAC,CAAC,CAAC,CAACtE,MAAM,CAACA,MAAM,CAAC;IAC7D,OAAO,IAAI,CAACu/C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAqX,YAAYA,CAACxD,MAAM,EAAE;IACjB,IAAI+G,IAAI,GAAG,IAAI;IACf,IAAIC,GAAG,GAAG,IAAI;IACd,KAAK,MAAM/4C,KAAK,IAAI+xC,MAAM,EAAE;MACxB,IAAIxY,MAAM,CAACv5B,KAAK,CAAC,EAAE;QACf84C,IAAI,GAAG,KAAK;MAChB;MACA,IAAIpf,QAAQ,CAAC15B,KAAK,CAAC,EAAE;QACjB+4C,GAAG,GAAG,KAAK;MACf;IACJ;IACA,IAAID,IAAI,EAAE;MACN,OAAOllB,SAAS,CAAC4V,IAAI;IACzB;IACA,IAAIuP,GAAG,EAAE;MACL,OAAOnlB,SAAS,CAACmE,MAAM;IAC3B;IACA,OAAOnE,SAAS,CAACkG,OAAO;EAC5B;EACAhwB,YAAYA,CAACvR,MAAM,EAAE;IACjB,IAAI,CAACy/C,cAAc,GAAGz/C,MAAM;IAC5B,IAAI,CAACi5C,OAAO,GAAG,IAAI,CAACwG,cAAc;IAClC,IAAI,CAACt7C,MAAM,GAAG,IAAI,CAACg1C,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC50C,IAAI,CAACE,KAAK,CAAC;EAC/D;EACAkM,qBAAqBA,CAAC+tB,IAAI,EAAE;IACxB,IAAI,CAACtuB,eAAe,GAAGsuB,IAAI,CAAC/2B,KAAK;IACjC,IAAI,CAACg5C,aAAa,CAAC,CAAC;EACxB;EACAnwC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACuwC,aAAa,CAAC,CAAC;EACxB;EACAh3C,OAAOA,CAACC,IAAI,EAAE6N,MAAM,EAAE;IAClB,IAAIA,MAAM,EAAE;MACR7N,IAAI,CAAC6N,MAAM,GAAGA,MAAM,CAAC7P,IAAI;IAC7B;IACA,IAAI,CAACjN,MAAM,CAACmE,IAAI,CAAC8K,IAAI,CAAC;EAC1B;EACAs2C,SAASA,CAAA,EAAG;IACR,IAAIhgD,MAAM;IACV,IAAI,IAAI,CAACshC,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvCvhC,MAAM,GAAG,IAAI,CAAC4/C,YAAY;IAC9B,CAAC,MACI;MACD5/C,MAAM,GAAG,IAAI,CAAC0/C,OAAO;IACzB;IACA,IAAI,CAACz/C,MAAM,GAAG,IAAI47C,WAAW,CAAC,IAAI,CAAClqC,MAAM,EAAE,IAAI,CAAC2vB,UAAU,EAAEthC,MAAM,EAAE,IAAI,CAAC4R,YAAY,CAAC;EAC1F;EACAquC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTlxC,SAAS,EAAE,IAAI,CAAC8xB,UAAU;MAC1BrhC,MAAM,EAAE8K,SAAS;MACjB/K,MAAM,EAAE,EAAE;MACVpC,KAAK,EAAEmN,SAAS;MAChBlL,QAAQ,EAAE,IAAI,CAAC07C;IACnB,CAAC;IACD,IAAImF,IAAI,CAAClxC,SAAS,KAAK6rB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAAC1gD,MAAM,GAAG,IAAI,CAAC4/C,YAAY;MAC/Bc,IAAI,CAACzgD,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBygD,IAAI,CAAC9iD,KAAK,GAAG,IAAI,CAACuhD,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAAC1gD,MAAM,GAAG,IAAI,CAAC0/C,OAAO;MAC1BgB,IAAI,CAACzgD,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC0lC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACA5xC,gBAAgBA,CAAC;IAAEvK;EAAM,CAAC,EAAE;IACxB,IAAI,CAAC62C,UAAU,GAAG72C,KAAK;IACvB,IAAI,CAAC25B,MAAM,CAAC,CAAC;EACjB;EACAhwB,iBAAiBA,CAAC;IAAE5J;EAAO,CAAC,EAAE;IAC1B,IAAI,CAAC62C,WAAW,GAAG72C,MAAM;IACzB,IAAI,CAAC45B,MAAM,CAAC,CAAC;EACjB;EACAnuB,UAAUA,CAACyuB,IAAI,EAAE;IACb,MAAMzG,GAAG,GAAG,IAAI,CAACl3B,aAAa,CAACy9B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh3B,IAAI,KAAK82B,IAAI,CAAC92B,IAAI,IAAIg3B,CAAC,CAACj3B,KAAK,KAAK+2B,IAAI,CAAC/2B,KAAK;IACzD,CAAC,CAAC;IACF,IAAIswB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAACl3B,aAAa,GAAG,CAAC29B,IAAI,EAAE,GAAG,IAAI,CAAC39B,aAAa,CAAC;IAClD,IAAI,CAAC9B,QAAQ,CAACH,IAAI,CAAC;MAAE6I,KAAK,EAAE+2B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAAC9/C;IAAc,CAAC,CAAC;EACpE;EACAoP,YAAYA,CAACuuB,IAAI,EAAE;IACf,MAAMzG,GAAG,GAAG,IAAI,CAACl3B,aAAa,CAACy9B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh3B,IAAI,KAAK82B,IAAI,CAAC92B,IAAI,IAAIg3B,CAAC,CAACj3B,KAAK,KAAK+2B,IAAI,CAAC/2B,KAAK;IACzD,CAAC,CAAC;IACF,IAAI,CAAC5G,aAAa,CAACo3B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAACl3B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAAC3B,UAAU,CAACN,IAAI,CAAC;MAAE6I,KAAK,EAAE+2B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAAC9/C;IAAc,CAAC,CAAC;EACtE;EACA4/C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAAC5/C,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,KAAK,MAAM09B,KAAK,IAAI,IAAI,CAAC19B,aAAa,EAAE;MACpC,IAAI,CAAC3B,UAAU,CAACN,IAAI,CAAC;QAAE6I,KAAK,EAAE82B,KAAK;QAAEoiB,OAAO,EAAE;MAAG,CAAC,CAAC;IACvD;IACA,IAAI,CAAC9/C,aAAa,GAAG,EAAE;EAC3B;AACJ;AACAq+C,kBAAkB,CAAC3qB,IAAI;EAAA,IAAAqsB,+BAAA;EAAA,gBAAAC,2BAAApsB,CAAA;IAAA,QAAAmsB,+BAAA,KAAAA,+BAAA,GA/4JmFhoD,EAAE,CAAAkoD,qBAAA,CA+4JG5B,kBAAkB,IAAAzqB,CAAA,IAAlByqB,kBAAkB;EAAA;AAAA,GAAqD;AACtLA,kBAAkB,CAACrqB,IAAI,kBAh5JmFj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAg5JT60C,kBAAkB;EAAAnqB,SAAA;EAAAgsB,cAAA,WAAAC,kCAAAvkD,EAAA,EAAAC,GAAA,EAAAukD,QAAA;IAAA,IAAAxkD,EAAA;MAh5JX7D,EAAE,CAAAsoD,cAAA,CAAAD,QAAA,EAAApzC,IAAA;MAAFjV,EAAE,CAAAsoD,cAAA,CAAAD,QAAA,EAAAnzC,IAAA;IAAA;IAAA,IAAArR,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAoO,eAAA,GAAAqqB,EAAA,CAAAG,KAAA;MAAF18B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAkU,qBAAA,GAAAukB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAE,YAAA,WAAA2rB,gCAAA1kD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAyF,UAAA,wBAAA+iD,iDAAA;QAAA,OAg5JT1kD,GAAA,CAAA4T,WAAA,CAAY,CAAC;MAAA;IAAA;EAAA;EAAAulB,MAAA;IAAAhkB,MAAA;IAAAstC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAA9vC,SAAA;IAAA0qC,SAAA;IAAA9rC,cAAA;IAAAY,cAAA;IAAAX,UAAA;IAAAY,UAAA;IAAAswC,QAAA;IAAA7vC,QAAA;IAAAjM,aAAA;IAAAkM,KAAA;IAAA7O,aAAA;IAAAygC,UAAA;IAAAjzB,cAAA;IAAAY,cAAA;IAAAX,gBAAA;IAAAC,kBAAA;IAAAW,kBAAA;IAAAV,mBAAA;IAAAW,mBAAA;IAAAV,UAAA;IAAAW,UAAA;IAAAmwC,YAAA;IAAA90C,eAAA;IAAA6yC,SAAA;IAAAC,SAAA;IAAA6C,SAAA;IAAAC,SAAA;IAAA57C,SAAA;EAAA;EAAA8zB,OAAA;IAAAx5B,QAAA;IAAAG,UAAA;EAAA;EAAAq9B,QAAA,GAh5JN3jC,EAAE,CAAAyoD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAAgkD,4BAAA7kD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,yBA05JxG,CAAC;MA15JqGnE,EAAE,CAAAyF,UAAA,8BAAAkjD,yEAAAhjD,MAAA;QAAA,OAu5JlF7B,GAAA,CAAA+M,OAAA,CAAAlL,MAAc,CAAC;MAAA,EAAC,iCAAAijD,4EAAAjjD,MAAA;QAAA,OACb7B,GAAA,CAAAqT,UAAA,CAAAxR,MAAiB,CAAC;MAAA,CADN,CAAC,mCAAAkjD,8EAAAljD,MAAA;QAAA,OAEX7B,GAAA,CAAAuT,YAAA,CAAA1R,MAAmB,CAAC;MAAA,CAFV,CAAC;MAv5JgE3F,EAAE,CAAA8G,cAAA,CA25J7F,CAAC;MA35J0F9G,EAAE,CAAAmE,cAAA,UA25J7F,CAAC,cAAD,CAAC;MA35J0FnE,EAAE,CAAA8E,SAAA,UAi6JjG,CAAC;MAj6J8F9E,EAAE,CAAAqE,YAAA,CAk6JtF,CAAC,CAAD,CAAC;MAl6JmFrE,EAAE,CAAAmE,cAAA,UAo6J1C,CAAC;MAp6JuCnE,EAAE,CAAAoE,UAAA,IAAA+Q,oCAAA,eAo7J5F,CAAC;MAp7JyFnV,EAAE,CAAAoE,UAAA,IAAA0R,oCAAA,eAm8J5F,CAAC;MAn8JyF9V,EAAE,CAAAmE,cAAA,OAo8JlE,CAAC;MAp8J+DnE,EAAE,CAAAoE,UAAA,IAAAqS,oCAAA,eAm9J3F,CAAC;MAn9JwFzW,EAAE,CAAAoE,UAAA,IAAAmT,oCAAA,cAo/J3F,CAAC;MAp/JwFvX,EAAE,CAAAqE,YAAA,CAq/J7F,CAAC,CAAD,CAAC;MAr/J0FrE,EAAE,CAAAoE,UAAA,KAAAmU,qCAAA,eAkhK/F,CAAC;MAlhK4FvY,EAAE,CAAAqE,YAAA,CAmhKtF,CAAC;IAAA;IAAA,IAAAR,EAAA;MAnhKmF7D,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAvU,GAAA,CAAA6H,KAAA,EAAA7H,GAAA,CAAA4H,MAAA,CAk5J/E,CAAC,eAAA5H,GAAA,CAAAmV,MAAD,CAAC,kBAAAnV,GAAA,CAAAkD,aAAD,CAAC,kBAAAlD,GAAA,CAAAmE,aAAD,CAAC,eAAAnE,GAAA,CAAAgR,UAAD,CAAC;MAl5J4E9U,EAAE,CAAAwE,SAAA,EA45JjE,CAAC;MA55J8DxE,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAAwjD,UA45JjE,CAAC;MA55J8DtnD,EAAE,CAAAwE,SAAA,EA85JnE,CAAC;MA95JgExE,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAA2H,IAAA,CAAAE,KAAA,KA85JnE,CAAC,WAAA7H,GAAA,CAAA2H,IAAA,CAAAC,MAAA,KAAD,CAAC,iCAAD,CAAC;MA95JgE1L,EAAE,CAAAwE,SAAA,EAo6JpE,CAAC;MAp6JiExE,EAAE,CAAA4I,WAAA,cAAA9E,GAAA,CAAA4J,SAo6JpE,CAAC;MAp6JiE1N,EAAE,CAAAwE,SAAA,EAu6JvF,CAAC;MAv6JoFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA0iD,KAu6JvF,CAAC;MAv6JoFxmD,EAAE,CAAAwE,SAAA,EAu7JvF,CAAC;MAv7JoFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA2iD,KAu7JvF,CAAC;MAv7JoFzmD,EAAE,CAAAwE,SAAA,EAo8JnE,CAAC;MAp8JgExE,EAAE,CAAA4I,WAAA,cAAA9E,GAAA,CAAAklB,QAo8JnE,CAAC;MAp8JgEhpB,EAAE,CAAAwE,SAAA,EAq8J7D,CAAC;MAr8J0DxE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAiU,OAq8J7D,CAAC,iBAAAjU,GAAA,CAAAqV,OAAD,CAAC;MAr8J0DnZ,EAAE,CAAAwE,SAAA,EAq9JrE,CAAC;MAr9JkExE,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAA+N,eAq9JrE,CAAC;MAr9JkE7R,EAAE,CAAAwE,SAAA,EAy/J5D,CAAC;MAz/JyDxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA4iD,QAAA,IAAA5iD,GAAA,CAAA8S,SAAA,aAy/J5D,CAAC;IAAA;EAAA;EAAA2mB,YAAA,GA2Bq3D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0TuT,mBAAmB,EAA+NjI,WAAW,EAAmM3F,qBAAqB,EAAgPiI,QAAQ,EAA0M/+C,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACklC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACj6H;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KArhK0G79B,EAAE,CAAA89B,iBAAA,CAqhKjBwoB,kBAAkB,EAAc,CAAC;IAChH70C,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,uBAAuB;MAAEr5B,QAAQ,EAAG;AACno/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAEpG,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEzkB,MAAM,EAAE,CAAC;MACvBxH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkmD,WAAW,EAAE,CAAC;MACd90C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsiD,cAAc,EAAE,CAAC;MACjBlxC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmmD,KAAK,EAAE,CAAC;MACR/0C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEomD,KAAK,EAAE,CAAC;MACRh1C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsW,SAAS,EAAE,CAAC;MACZlF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEghD,SAAS,EAAE,CAAC;MACZ5vC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkV,cAAc,EAAE,CAAC;MACjB9D,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8V,cAAc,EAAE,CAAC;MACjB1E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmV,UAAU,EAAE,CAAC;MACb/D,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE+V,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqmD,QAAQ,EAAE,CAAC;MACXj1C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwW,QAAQ,EAAE,CAAC;MACXpF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuK,aAAa,EAAE,CAAC;MAChB6G,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEyW,KAAK,EAAE,CAAC;MACRrF,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE4H,aAAa,EAAE,CAAC;MAChBwJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqoC,UAAU,EAAE,CAAC;MACbj3B,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEoV,cAAc,EAAE,CAAC;MACjBhE,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEgW,cAAc,EAAE,CAAC;MACjB5E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqV,gBAAgB,EAAE,CAAC;MACnBjE,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsV,kBAAkB,EAAE,CAAC;MACrBlE,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEiW,kBAAkB,EAAE,CAAC;MACrB7E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEuV,mBAAmB,EAAE,CAAC;MACtBnE,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkW,mBAAmB,EAAE,CAAC;MACtB9E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwV,UAAU,EAAE,CAAC;MACbpE,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmW,UAAU,EAAE,CAAC;MACb/E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsmD,YAAY,EAAE,CAAC;MACfl1C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwR,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEqkD,SAAS,EAAE,CAAC;MACZjzC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEskD,SAAS,EAAE,CAAC;MACZlzC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmnD,SAAS,EAAE,CAAC;MACZ/1C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEonD,SAAS,EAAE,CAAC;MACZh2C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEwL,SAAS,EAAE,CAAC;MACZ4F,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8F,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAE0F,UAAU,EAAE,CAAC;MACbmL,IAAI,EAAE7Q;IACV,CAAC,CAAC;IAAEsR,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1Q,YAAY;MAClBk2B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEjf,qBAAqB,EAAE,CAAC;MACxBvG,IAAI,EAAE1Q,YAAY;MAClBk2B,IAAI,EAAE,CAAC,uBAAuB;IAClC,CAAC,CAAC;IAAEvf,WAAW,EAAE,CAAC;MACdjG,IAAI,EAAEjR,YAAY;MAClBy2B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6xB,4BAA4B,SAAStgB,kBAAkB,CAAC;EAC1DhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAAC1e,MAAM,GAAG,KAAK;IACnB,IAAI,CAACstC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGz7C,cAAc,CAACqH,KAAK;IAC1C,IAAI,CAACgH,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACY,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACvL,aAAa,GAAG,IAAI;IACzB,IAAI,CAACkM,KAAK,GAAGxU,WAAW;IACxB,IAAI,CAAC2F,aAAa,GAAG,EAAE;IACvB,IAAI,CAACwN,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACY,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACX,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACW,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACqwC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC90C,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAChG,SAAS,GAAG,KAAK;IACtB,IAAI,CAAC1F,QAAQ,GAAG,IAAIxF,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC2F,UAAU,GAAG,IAAI3F,YAAY,CAAC,CAAC;IACpC,IAAI,CAACmmD,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACvB,IAAI,CAACrc,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC3oC,UAAU,GAAGg+B,UAAU;IAC5B,IAAI,CAAC/+B,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC8tC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACztC,OAAO,GAAG,CAACxQ,KAAK,EAAEi9B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC92B,IAAI;IACpB,CAAC;EACL;EACAw2B,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAAC75B,IAAI,GAAG02C,uBAAuB,CAAC;MAChCx2C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB02C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACltC,cAAc;MAC/BmtC,UAAU,EAAE,IAAI,CAACvsC,cAAc;MAC/BiwB,UAAU,EAAE,IAAI,CAACntB,MAAM;MACvBqtB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,IAAI,CAAC+D,QAAQ,EAAE;MACf,IAAI,CAACj7C,IAAI,CAACC,MAAM,IAAI,IAAI,CAACoN,cAAc,GAAG,IAAI,CAAC2xB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmc,eAAe;IACnF;IACA,IAAI,CAACvG,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,IAAI,CAACuG,cAAc,EAAE;MACrB,IAAI,CAACxG,OAAO,GAAG,IAAI,CAACwG,cAAc;IACtC;IACA,IAAI,CAACG,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAAC17C,MAAM,GAAG,IAAI,CAACg1C,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC50C,IAAI,CAACE,KAAK,CAAC;IAC3D,IAAI,CAAC6D,MAAM,GAAG,IAAI,CAAC03C,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACr7C,IAAI,CAACC,MAAM,CAAC;IAC5D,KAAK,IAAI+zB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC3nB,IAAI,CAAChL,MAAM,EAAE2yB,CAAC,EAAE,EAAE;MACvC,MAAMuc,GAAG,GAAG,IAAI,CAAClkC,IAAI,CAAC2nB,CAAC,CAAC;MACxB,IAAI0e,EAAE,GAAG,CAAC;MACV,IAAIvhC,KAAK,GAAG,CAAC;MACb,KAAK,MAAMqhC,KAAK,IAAI,IAAI,CAAClmC,OAAO,EAAE;QAC9B,MAAM+tB,CAAC,GAAGmY,KAAK,CAACt/B,MAAM,CAACknB,IAAI,CAACD,IAAI,IAAI;UAChC,IAAIkf,CAAC,GAAGlf,IAAI,CAAC92B,IAAI;UACjB,IAAI+rC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACplC,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACHlpB,KAAK,IAAIkpB,CAAC,CAACj3B,KAAK;QACpB;MACJ;MACA,KAAK,MAAMovC,KAAK,IAAI,IAAI,CAAClmC,OAAO,EAAE;QAC9B,IAAI+tB,CAAC,GAAGmY,KAAK,CAACt/B,MAAM,CAACknB,IAAI,CAACD,IAAI,IAAI;UAC9B,IAAIkf,CAAC,GAAGlf,IAAI,CAAC92B,IAAI;UACjB,IAAI+rC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACplC,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACHA,CAAC,CAACqY,EAAE,GAAGA,EAAE;UACTrY,CAAC,CAACyS,EAAE,GAAG4F,EAAE,GAAGrY,CAAC,CAACj3B,KAAK;UACnBsvC,EAAE,IAAIrY,CAAC,CAACj3B,KAAK;QACjB,CAAC,MACI;UACDi3B,CAAC,GAAG;YACAh3B,IAAI,EAAEktC,GAAG;YACTntC,KAAK,EAAE,CAAC;YACRsvC,EAAE;YACF5F,EAAE,EAAE4F;UACR,CAAC;UACDF,KAAK,CAACt/B,MAAM,CAACohB,IAAI,CAAC+F,CAAC,CAAC;QACxB;QACA,IAAIlpB,KAAK,GAAG,CAAC,EAAE;UACXkpB,CAAC,CAACqY,EAAE,GAAIrY,CAAC,CAACqY,EAAE,GAAG,GAAG,GAAIvhC,KAAK;UAC3BkpB,CAAC,CAACyS,EAAE,GAAIzS,CAAC,CAACyS,EAAE,GAAG,GAAG,GAAI37B,KAAK;QAC/B,CAAC,MACI;UACDkpB,CAAC,CAACqY,EAAE,GAAG,CAAC;UACRrY,CAAC,CAACyS,EAAE,GAAG,CAAC;QACZ;MACJ;IACJ;IACA,IAAI,CAAC4O,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACpgD,aAAa,GAAG,IAAI,CAACqgD,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAAC35C,SAAS,GAAI,aAAY,IAAI,CAACjC,IAAI,CAACo3C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IACtE,IAAI,CAAC6c,UAAU,GAAG,MAAM,GAAGxxB,EAAE,CAAC,CAAC,CAACuS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACrf,QAAQ,GAAI,QAAO,IAAI,CAACs+B,UAAW,GAAE;EAC9C;EACAH,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACT,QAAQ,EAAE;MACf,IAAI,CAAC7tC,aAAa,GAAG,IAAI,CAACpN,IAAI,CAACE,KAAK;MACpC,IAAI,CAAC47C,eAAe,GAAG,IAAI,CAACjH,UAAU,CAAC,CAAC;MACxC,IAAI,CAACnoC,cAAc,GAAG,IAAI,CAACooC,SAAS,CAAC,IAAI,CAACgH,eAAe,EAAE,IAAI,CAAC1uC,aAAa,CAAC;MAC9E,IAAI,CAACT,cAAc,GAAG,IAAI,CAAC8uC,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAChuC,cAAc,CAAC;MACvE,IAAI,CAACI,iBAAiB,GAAI,aAAY,IAAI,CAACzN,IAAI,CAACo3C,OAAQ,KAAI,CAAC,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IAClF;EACJ;EACA6V,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAGmD,sBAAsB,CAAC,IAAI,CAAChsC,OAAO,CAAC;IACjD,IAAI,CAACnB,SAAS,GAAGwtC,YAAY,CAACxD,MAAM,CAAC;IACrC,IAAIx5C,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAACwP,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnC,MAAMx1C,GAAG,GAAGygC,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;MAC/B,MAAM99C,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;MAC/Bx5C,MAAM,GAAG,CAAC,IAAImwB,IAAI,CAAC10B,GAAG,CAAC,EAAE,IAAI00B,IAAI,CAACz0B,GAAG,CAAC,CAAC;MACvC,IAAI,CAACgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;QACnC,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;QACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;QACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;QACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;QACb,OAAO,CAAC;MACZ,CAAC,CAAC;IACN,CAAC,MACI,IAAI,IAAI,CAACnuC,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1Cga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;MACnC,MAAMx7C,GAAG,GAAGygC,IAAI,CAACzgC,GAAG,CAAC,GAAG+9C,MAAM,CAAC;MAC/B,MAAM99C,GAAG,GAAGwgC,IAAI,CAACxgC,GAAG,CAAC,GAAG89C,MAAM,CAAC;MAC/Bx5C,MAAM,GAAG,CAACvE,GAAG,EAAEC,GAAG,CAAC;MACnB;MACA,IAAI,CAACgV,IAAI,GAAG,CAAC,GAAG8oC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;IACjD,CAAC,MACI;MACDzzC,MAAM,GAAGw5C,MAAM;MACf,IAAI,CAAC9oC,IAAI,GAAG8oC,MAAM;IACtB;IACA,OAAOx5C,MAAM;EACjB;EACA6/C,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAAClvC,OAAO,CAAC45B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACh3B,IAAI,CAAC;EACxC;EACAyxC,SAASA,CAACn5C,MAAM,EAAEuE,KAAK,EAAE;IACrB,IAAIohC,KAAK;IACT,IAAI,IAAI,CAACn2B,SAAS,KAAK6rB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGhrC,SAAS,CAAC,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAAC6U,SAAS,KAAK6rB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAG/qC,WAAW,CAAC,CAAC;IACzB,CAAC,MACI,IAAI,IAAI,CAAC4U,SAAS,KAAK6rB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG9qC,UAAU,CAAC,CAAC,CAAC2tC,OAAO,CAAC,GAAG,CAAC;IACrC;IACA7C,KAAK,CAACnqC,KAAK,CAAC,CAAC,CAAC,EAAE+I,KAAK,CAAC,CAAC,CAACvE,MAAM,CAACA,MAAM,CAAC;IACtC,OAAO,IAAI,CAACu/C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAAC9/C,MAAM,EAAEsE,MAAM,EAAE;IACtB,MAAMqhC,KAAK,GAAG/qC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC8I,MAAM,EAAE,CAAC,CAAC,CAAC,CAACtE,MAAM,CAACA,MAAM,CAAC;IAC7D,OAAO,IAAI,CAACu/C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAp0B,YAAYA,CAACvR,MAAM,EAAE;IACjB,IAAI,CAACy/C,cAAc,GAAGz/C,MAAM;IAC5B,IAAI,CAACi5C,OAAO,GAAG,IAAI,CAACwG,cAAc;IAClC,IAAI,CAACt7C,MAAM,GAAG,IAAI,CAACg1C,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC50C,IAAI,CAACE,KAAK,CAAC;EAC/D;EACAkM,qBAAqBA,CAAC+tB,IAAI,EAAE;IACxB,IAAI,CAACtuB,eAAe,GAAGsuB,IAAI,CAAC/2B,KAAK;IACjC,IAAI,CAACg5C,aAAa,CAAC,CAAC;EACxB;EACAnwC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACuwC,aAAa,CAAC,CAAC;EACxB;EACAh3C,OAAOA,CAACC,IAAI,EAAE6N,MAAM,EAAE;IAClB,IAAIA,MAAM,EAAE;MACR7N,IAAI,CAAC6N,MAAM,GAAGA,MAAM,CAAC7P,IAAI;IAC7B;IACA,IAAI,CAACjN,MAAM,CAACmE,IAAI,CAAC8K,IAAI,CAAC;EAC1B;EACAs2C,SAASA,CAAA,EAAG;IACR,IAAIhgD,MAAM;IACV,IAAI,IAAI,CAACshC,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvCvhC,MAAM,GAAG,IAAI,CAAC4/C,YAAY;IAC9B,CAAC,MACI;MACD5/C,MAAM,GAAG,IAAI,CAAC0/C,OAAO;IACzB;IACA,IAAI,CAACz/C,MAAM,GAAG,IAAI47C,WAAW,CAAC,IAAI,CAAClqC,MAAM,EAAE,IAAI,CAAC2vB,UAAU,EAAEthC,MAAM,EAAE,IAAI,CAAC4R,YAAY,CAAC;EAC1F;EACAquC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTlxC,SAAS,EAAE,IAAI,CAAC8xB,UAAU;MAC1BrhC,MAAM,EAAE8K,SAAS;MACjB/K,MAAM,EAAE,EAAE;MACVpC,KAAK,EAAEmN,SAAS;MAChBlL,QAAQ,EAAE,IAAI,CAAC07C;IACnB,CAAC;IACD,IAAImF,IAAI,CAAClxC,SAAS,KAAK6rB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAAC1gD,MAAM,GAAG,IAAI,CAAC4/C,YAAY;MAC/Bc,IAAI,CAACzgD,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBygD,IAAI,CAAC9iD,KAAK,GAAG,IAAI,CAACuhD,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAAC1gD,MAAM,GAAG,IAAI,CAAC0/C,OAAO;MAC1BgB,IAAI,CAACzgD,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC0lC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACA5xC,gBAAgBA,CAAC;IAAEvK;EAAM,CAAC,EAAE;IACxB,IAAI,CAAC62C,UAAU,GAAG72C,KAAK;IACvB,IAAI,CAAC25B,MAAM,CAAC,CAAC;EACjB;EACAhwB,iBAAiBA,CAAC;IAAE5J;EAAO,CAAC,EAAE;IAC1B,IAAI,CAAC62C,WAAW,GAAG72C,MAAM;IACzB,IAAI,CAAC45B,MAAM,CAAC,CAAC;EACjB;EACAnuB,UAAUA,CAACyuB,IAAI,EAAE;IACb,MAAMzG,GAAG,GAAG,IAAI,CAACl3B,aAAa,CAACy9B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh3B,IAAI,KAAK82B,IAAI,CAAC92B,IAAI,IAAIg3B,CAAC,CAACj3B,KAAK,KAAK+2B,IAAI,CAAC/2B,KAAK;IACzD,CAAC,CAAC;IACF,IAAIswB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAACl3B,aAAa,GAAG,CAAC29B,IAAI,EAAE,GAAG,IAAI,CAAC39B,aAAa,CAAC;IAClD,IAAI,CAAC9B,QAAQ,CAACH,IAAI,CAAC;MAAE6I,KAAK,EAAE+2B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAAC9/C;IAAc,CAAC,CAAC;EACpE;EACAoP,YAAYA,CAACuuB,IAAI,EAAE;IACf,MAAMzG,GAAG,GAAG,IAAI,CAACl3B,aAAa,CAACy9B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh3B,IAAI,KAAK82B,IAAI,CAAC92B,IAAI,IAAIg3B,CAAC,CAACj3B,KAAK,KAAK+2B,IAAI,CAAC/2B,KAAK;IACzD,CAAC,CAAC;IACF,IAAI,CAAC5G,aAAa,CAACo3B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAACl3B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAAC3B,UAAU,CAACN,IAAI,CAAC;MAAE6I,KAAK,EAAE+2B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAAC9/C;IAAc,CAAC,CAAC;EACtE;EACA4/C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAAC5/C,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,KAAK,MAAM09B,KAAK,IAAI,IAAI,CAAC19B,aAAa,EAAE;MACpC,IAAI,CAAC3B,UAAU,CAACN,IAAI,CAAC;QAAE6I,KAAK,EAAE82B,KAAK;QAAEoiB,OAAO,EAAE;MAAG,CAAC,CAAC;IACvD;IACA,IAAI,CAAC9/C,aAAa,GAAG,EAAE;EAC3B;AACJ;AACA6gD,4BAA4B,CAACntB,IAAI;EAAA,IAAAqtB,yCAAA;EAAA,gBAAAC,qCAAAptB,CAAA;IAAA,QAAAmtB,yCAAA,KAAAA,yCAAA,GAl/KyEhpD,EAAE,CAAAkoD,qBAAA,CAk/KaY,4BAA4B,IAAAjtB,CAAA,IAA5BitB,4BAA4B;EAAA;AAAA,GAAqD;AAC1MA,4BAA4B,CAAC7sB,IAAI,kBAn/KyEj8B,EAAE,CAAAk8B,iBAAA;EAAAzqB,IAAA,EAm/KCq3C,4BAA4B;EAAA3sB,SAAA;EAAAgsB,cAAA,WAAAe,4CAAArlD,EAAA,EAAAC,GAAA,EAAAukD,QAAA;IAAA,IAAAxkD,EAAA;MAn/K/B7D,EAAE,CAAAsoD,cAAA,CAAAD,QAAA,EAAApzC,IAAA;MAAFjV,EAAE,CAAAsoD,cAAA,CAAAD,QAAA,EAAAnzC,IAAA;IAAA;IAAA,IAAArR,EAAA;MAAA,IAAA04B,EAAA;MAAFv8B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAoO,eAAA,GAAAqqB,EAAA,CAAAG,KAAA;MAAF18B,EAAE,CAAAw8B,cAAA,CAAAD,EAAA,GAAFv8B,EAAE,CAAAy8B,WAAA,QAAA34B,GAAA,CAAAkU,qBAAA,GAAAukB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAE,YAAA,WAAAusB,0CAAAtlD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAyF,UAAA,wBAAA2jD,2DAAA;QAAA,OAm/KCtlD,GAAA,CAAA4T,WAAA,CAAY,CAAC;MAAA;IAAA;EAAA;EAAAulB,MAAA;IAAAhkB,MAAA;IAAAstC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAlxC,cAAA;IAAAY,cAAA;IAAAX,UAAA;IAAAY,UAAA;IAAAswC,QAAA;IAAA7vC,QAAA;IAAAjM,aAAA;IAAAkM,KAAA;IAAA7O,aAAA;IAAAygC,UAAA;IAAAjzB,cAAA;IAAAY,cAAA;IAAAX,gBAAA;IAAAC,kBAAA;IAAAW,kBAAA;IAAAV,mBAAA;IAAAW,mBAAA;IAAAV,UAAA;IAAAW,UAAA;IAAAmwC,YAAA;IAAA90C,eAAA;IAAAhG,SAAA;EAAA;EAAA8zB,OAAA;IAAAx5B,QAAA;IAAAG,UAAA;EAAA;EAAAq9B,QAAA,GAn/KhB3jC,EAAE,CAAAyoD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA14B,QAAA,WAAA2kD,sCAAAxlD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7D,EAAE,CAAAmE,cAAA,yBA6/KxG,CAAC;MA7/KqGnE,EAAE,CAAAyF,UAAA,8BAAA6jD,mFAAA3jD,MAAA;QAAA,OA0/KlF7B,GAAA,CAAA+M,OAAA,CAAAlL,MAAc,CAAC;MAAA,EAAC,iCAAA4jD,sFAAA5jD,MAAA;QAAA,OACb7B,GAAA,CAAAqT,UAAA,CAAAxR,MAAiB,CAAC;MAAA,CADN,CAAC,mCAAA6jD,wFAAA7jD,MAAA;QAAA,OAEX7B,GAAA,CAAAuT,YAAA,CAAA1R,MAAmB,CAAC;MAAA,CAFV,CAAC;MA1/KgE3F,EAAE,CAAA8G,cAAA,CA8/K7F,CAAC;MA9/K0F9G,EAAE,CAAAmE,cAAA,UA8/K7F,CAAC,cAAD,CAAC;MA9/K0FnE,EAAE,CAAA8E,SAAA,UAogLjG,CAAC;MApgL8F9E,EAAE,CAAAqE,YAAA,CAqgLtF,CAAC,CAAD,CAAC;MArgLmFrE,EAAE,CAAAmE,cAAA,UAugL1C,CAAC;MAvgLuCnE,EAAE,CAAAoE,UAAA,IAAAgV,8CAAA,eAuhL5F,CAAC;MAvhLyFpZ,EAAE,CAAAoE,UAAA,IAAAkV,8CAAA,eAsiL5F,CAAC;MAtiLyFtZ,EAAE,CAAAmE,cAAA,OAuiLlE,CAAC;MAviL+DnE,EAAE,CAAAoE,UAAA,IAAAoV,8CAAA,eAsjL3F,CAAC;MAtjLwFxZ,EAAE,CAAAoE,UAAA,IAAA2V,8CAAA,eAylL3F,CAAC;MAzlLwF/Z,EAAE,CAAAqE,YAAA,CA0lL7F,CAAC,CAAD,CAAC;MA1lL0FrE,EAAE,CAAAoE,UAAA,KAAA+V,+CAAA,eAunL/F,CAAC;MAvnL4Fna,EAAE,CAAAqE,YAAA,CAwnLtF,CAAC;IAAA;IAAA,IAAAR,EAAA;MAxnLmF7D,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAA4Y,eAAA,KAAAP,IAAA,EAAAvU,GAAA,CAAA6H,KAAA,EAAA7H,GAAA,CAAA4H,MAAA,CAq/K/E,CAAC,eAAA5H,GAAA,CAAAmV,MAAD,CAAC,kBAAAnV,GAAA,CAAAkD,aAAD,CAAC,kBAAAlD,GAAA,CAAAmE,aAAD,CAAC,eAAAnE,GAAA,CAAAgR,UAAD,CAAC;MAr/K4E9U,EAAE,CAAAwE,SAAA,EA+/KjE,CAAC;MA//K8DxE,EAAE,CAAA4I,WAAA,OAAA9E,GAAA,CAAAwjD,UA+/KjE,CAAC;MA//K8DtnD,EAAE,CAAAwE,SAAA,EAigLnE,CAAC;MAjgLgExE,EAAE,CAAA4I,WAAA,UAAA9E,GAAA,CAAA2H,IAAA,CAAAE,KAAA,KAigLnE,CAAC,WAAA7H,GAAA,CAAA2H,IAAA,CAAAC,MAAA,KAAD,CAAC,iCAAD,CAAC;MAjgLgE1L,EAAE,CAAAwE,SAAA,EAugLpE,CAAC;MAvgLiExE,EAAE,CAAA4I,WAAA,cAAA9E,GAAA,CAAA4J,SAugLpE,CAAC;MAvgLiE1N,EAAE,CAAAwE,SAAA,EA0gLvF,CAAC;MA1gLoFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA0iD,KA0gLvF,CAAC;MA1gLoFxmD,EAAE,CAAAwE,SAAA,EA0hLvF,CAAC;MA1hLoFxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA2iD,KA0hLvF,CAAC;MA1hLoFzmD,EAAE,CAAAwE,SAAA,EAuiLnE,CAAC;MAviLgExE,EAAE,CAAA4I,WAAA,cAAA9E,GAAA,CAAAklB,QAuiLnE,CAAC;MAviLgEhpB,EAAE,CAAAwE,SAAA,EAwiL7D,CAAC;MAxiL0DxE,EAAE,CAAAyE,UAAA,YAAAX,GAAA,CAAAiU,OAwiL7D,CAAC,iBAAAjU,GAAA,CAAAqV,OAAD,CAAC;MAxiL0DnZ,EAAE,CAAAwE,SAAA,EAwjLrE,CAAC;MAxjLkExE,EAAE,CAAAyE,UAAA,UAAAX,GAAA,CAAA+N,eAwjLrE,CAAC;MAxjLkE7R,EAAE,CAAAwE,SAAA,EA8lL5D,CAAC;MA9lLyDxE,EAAE,CAAAyE,UAAA,SAAAX,GAAA,CAAA4iD,QAAA,IAAA5iD,GAAA,CAAA8S,SAAA,aA8lL5D,CAAC;IAAA;EAAA;EAAA2mB,YAAA,GA2Bq3D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0TuT,mBAAmB,EAA+NjI,WAAW,EAAmM3F,qBAAqB,EAAgPiI,QAAQ,EAA0M/+C,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACklC,OAAO;EAAAxI,MAAA,GAAArjB,IAAA;EAAAsjB,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACj6H;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1nL0G79B,EAAE,CAAA89B,iBAAA,CA0nLjBgrB,4BAA4B,EAAc,CAAC;IAC1Hr3C,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,kCAAkC;MAAEr5B,QAAQ,EAAG;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAEpG,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEzkB,MAAM,EAAE,CAAC;MACvBxH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkmD,WAAW,EAAE,CAAC;MACd90C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEsiD,cAAc,EAAE,CAAC;MACjBlxC,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmmD,KAAK,EAAE,CAAC;MACR/0C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEomD,KAAK,EAAE,CAAC;MACRh1C,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkV,cAAc,EAAE,CAAC;MACjB9D,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAE8V,cAAc,EAAE,CAAC;MACjB1E,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEmV,UA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,EAAE,CAAA89B,iBAAA,CAgzPjBiwB,wBAAwB,EAAc,CAAC;IACtHt8C,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,8BAA8B;MAAEr5B,QAAQ,EAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAEpG,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAElpB,UAAU,EAAE,CACjFrT,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoO,OAAO,EAAE,CAAC;QACVrC,SAAS,EAAE;MACf,CAAC,CAAC,EACF9L,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoO,OAAO,EAAE,CAAC;QAAErC,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAEgwB,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EAC34D,CAAC,CAAC,QAAkB;IAAEzkB,MAAM,EAAE,CAAC;MACvBxH,IAAI,EAAEpR;IACV,CAAC,CAAC;IAAEkmD,WAAW,EAAE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BAAgB,EAAuX/qD,EAAE,CAACw8B,IAAI,EAA0Ex8B,EAAE,CAACklC,OAAO;EAAAxI,MAAA,GAAArjB,IAAA;EAAAsjB,aAAA;EAAA7sB,IAAA;IAAA8nC,SAAA,EAAqG,CACtzGn3C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoO,OAAO,EAAE,CAAC;MACVrC,SAAS,EAAE;IACf,CAAC,CAAC,EACF9L,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoO,OAAO,EAAE,CAAC;MAAErC,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAAo2B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1wQ0G79B,EAAE,CAAA89B,iBAAA,CA0wQjBsxB,gCAAgC,EAAc,CAAC;IAC9H39C,IAAI,EAAEvR,SAAS;IACf+2B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,sCAAsC;MAAEr5B,QAAQ,EAAG;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEo/B,eAAe,EAAEpjC,uBAAuB,CAACqjC,MAAM;MAAEpG,aAAa,EAAEx9B,iBAAiB,CAAC69B,IAAI;MAAElpB,UAAU,EAAE,CACjFrT,OAAO,CAAC,gBAAgB,EAAE,CACt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"},"metadata":{},"sourceType":"module","externalDependencies":[]}