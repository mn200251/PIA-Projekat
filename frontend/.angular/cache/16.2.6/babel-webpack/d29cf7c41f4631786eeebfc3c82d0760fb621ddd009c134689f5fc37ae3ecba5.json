{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let WaiterComponent = class WaiterComponent {\n  constructor(router, userService, restaurantService) {\n    this.router = router;\n    this.userService = userService;\n    this.restaurantService = restaurantService;\n    this.page = 1;\n    this.user = new User();\n    this.error = \"\";\n    this.reservations = [];\n  }\n  ngOnInit() {\n    let p = localStorage.getItem(\"page\");\n    if (p) this.page = parseInt(p);\n    let temp = localStorage.getItem(\"user\");\n    if (temp) {\n      this.user = JSON.parse(temp);\n      if (this.user.type != \"waiter\") {\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n      if (this.user.accountStatus != 1) {\n        this.error = \"This account is not active!\";\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n    } else {\n      this.router.navigate([\"\"]);\n    }\n    this.resta.getReservations().subscribe(data => {\n      this.reservations = data;\n    });\n  }\n  navigateTo(newPage) {\n    this.page = newPage;\n  }\n  updateInfo() {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone || !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, this.user.contactPhone, this.user.creditCardNumber).subscribe(data => {\n      if (data.msg === \"User information updated successfully!\") {\n        localStorage.setItem(\"user\", JSON.stringify(this.user));\n      }\n      alert(data.msg);\n      window.location.reload();\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"page\");\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"\"]);\n  }\n};\nWaiterComponent = __decorate([Component({\n  selector: 'app-waiter',\n  templateUrl: './waiter.component.html',\n  styleUrls: ['./waiter.component.css']\n})], WaiterComponent);","map":{"version":3,"names":["Component","User","WaiterComponent","constructor","router","userService","restaurantService","page","user","error","reservations","ngOnInit","p","localStorage","getItem","parseInt","temp","JSON","parse","type","removeItem","navigate","accountStatus","resta","getReservations","subscribe","data","navigateTo","newPage","updateInfo","forename","surname","address","contactPhone","email","creditCardNumber","username","msg","setItem","stringify","alert","window","location","reload","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\ETF\\Domaci i Projekti\\PIA Projekat\\frontend\\src\\app\\waiter\\waiter.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { Reservation } from '../models/Reservation';\n\n@Component({\n  selector: 'app-waiter',\n  templateUrl: './waiter.component.html',\n  styleUrls: ['./waiter.component.css']\n})\nexport class WaiterComponent {\n  constructor(private router:Router, private userService: UserService, private restaurantService: RestaurantService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    let p = localStorage.getItem(\"page\")\n    if (p)\n      this.page = parseInt(p)\n\n    let temp = localStorage.getItem(\"user\")\n    if(temp)\n    {\n      this.user = JSON.parse(temp);\n\n      if (this.user.type != \"waiter\")\n      {\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n\n      if (this.user.accountStatus != 1)\n      {\n        this.error = \"This account is not active!\"\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n\n    }\n    else\n    {\n      this.router.navigate([\"\"]);\n    }\n\n    this.resta.getReservations().subscribe((data:any) => {\n      this.reservations = data;\n    }\n  }\n\n  page: number = 1\n  user: User = new User()\n  error: string = \"\"\n\n  reservations: Reservation[] = []\n\n  navigateTo(newPage: number)\n  {\n    this.page = newPage\n  }\n\n  updateInfo()\n  {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone ||\n      !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, \n      this.user.contactPhone, this.user.creditCardNumber).subscribe((data:any) => {\n        if (data.msg === \"User information updated successfully!\")\n        {\n          localStorage.setItem(\"user\", JSON.stringify(this.user))\n        }\n\n        alert(data.msg)\n        window.location.reload();\n    })\n  }\n\n  logout()\n  {\n    localStorage.removeItem(\"page\")\n    localStorage.removeItem(\"user\")\n    this.router.navigate([\"\"])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}