{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let GuestComponent = class GuestComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.page = 1;\n    this.user = new User();\n    this.error = \"\";\n  }\n  ngOnInit() {\n    let p = localStorage.getItem(\"page\");\n    if (p) this.page = parseInt(p);\n    let temp = localStorage.getItem(\"user\");\n    if (temp) {\n      this.user = JSON.parse(temp);\n      if (this.user.type != \"guest\") {\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n      if (this.user.accountStatus != 1) {\n        alert(\"This account is not active!\");\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n    } else {\n      this.router.navigate([\"\"]);\n    }\n  }\n  navigateTo(newPage) {\n    this.page = newPage;\n    localStorage.setItem(\"page\", newPage.toString());\n  }\n  updateInfo() {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone || !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, this.user.contactPhone, this.user.creditCardNumber).subscribe(data => {\n      if (data.msg === \"User information updated successfully!\") {\n        localStorage.setItem(\"user\", JSON.stringify(this.user));\n      }\n      alert(data.msg);\n      window.location.reload();\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"page\");\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"\"]);\n  }\n};\nGuestComponent = __decorate([Component({\n  selector: 'app-guest',\n  templateUrl: './guest.component.html',\n  styleUrls: ['./guest.component.css']\n})], GuestComponent);","map":{"version":3,"names":["Component","User","GuestComponent","constructor","router","userService","page","user","error","ngOnInit","p","localStorage","getItem","parseInt","temp","JSON","parse","type","removeItem","navigate","accountStatus","alert","navigateTo","newPage","setItem","toString","updateInfo","forename","surname","address","contactPhone","email","creditCardNumber","username","subscribe","data","msg","stringify","window","location","reload","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\ETF\\Domaci i Projekti\\PIA Projekat\\frontend\\src\\app\\guest\\guest.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-guest',\n  templateUrl: './guest.component.html',\n  styleUrls: ['./guest.component.css']\n})\nexport class GuestComponent implements OnInit {\n\n  constructor(private router:Router, private userService: UserService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    let p = localStorage.getItem(\"page\")\n    if (p)\n      this.page = parseInt(p)\n\n    let temp = localStorage.getItem(\"user\")\n    if(temp)\n    {\n      this.user = JSON.parse(temp);\n\n      if (this.user.type != \"guest\")\n      {\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n      if (this.user.accountStatus != 1)\n      {\n        alert(\"This account is not active!\")\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n      \n\n    }\n    else\n    {\n      this.router.navigate([\"\"]);\n    }\n  }\n\n  page: number = 1\n  user: User = new User()\n  error: string = \"\"\n\n  navigateTo(newPage: number)\n  {\n    this.page = newPage\n    localStorage.setItem(\"page\", newPage.toString())\n  }\n\n  updateInfo()\n  {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone ||\n      !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, \n      this.user.contactPhone, this.user.creditCardNumber).subscribe((data:any) => {\n        if (data.msg === \"User information updated successfully!\")\n        {\n          localStorage.setItem(\"user\", JSON.stringify(this.user))\n        }\n\n        alert(data.msg)\n        window.location.reload();\n    })\n  }\n\n  logout()\n  {\n    localStorage.removeItem(\"page\")\n    localStorage.removeItem(\"user\")\n    this.router.navigate([\"\"])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}