{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post('http://localhost:4000/users/login', data);\n  }\n  register(username, password, forename, surname, sex, type, address, email, contactPhone, securityQuestion, securityAnswer,\n  // profilePicure: any,\n  creditCardNumber) {\n    const data = {\n      username: username,\n      password: password,\n      forename: forename,\n      surname: surname,\n      sex: sex,\n      type: type,\n      address: address,\n      email: email,\n      contactPhone: contactPhone,\n      securityQuestion: securityQuestion,\n      securityAnswer: securityAnswer,\n      // profilePicure: profilePicure,\n      creditCardNumber: creditCardNumber\n    };\n    return this.http.post('http://localhost:4000/users/register', data);\n  }\n  updateInfo(username, forename, surname, address, email, contactPhone,\n  // profilePicure: any,\n  creditCardNumber) {\n    const data = {\n      username: username,\n      forename: forename,\n      surname: surname,\n      address: address,\n      email: email,\n      contactPhone: contactPhone,\n      // profilePicure: profilePicure,\n      creditCardNumber: creditCardNumber\n    };\n    return this.http.post('http://localhost:4000/users/updateInfo', data);\n  }\n  getUsers() {\n    return this.http.get('http://localhost:4000/users/getUsers');\n  }\n  setBan(username) {\n    const data = {\n      username: username\n    };\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","login","username","password","data","post","register","forename","surname","sex","type","address","email","contactPhone","securityQuestion","securityAnswer","creditCardNumber","updateInfo","getUsers","get","setBan","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\ETF\\Domaci i Projekti\\PIA Projekat\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string)\n  {\n    const data= {\n      username: username,\n      password: password,\n    }\n\n    return this.http.post<User>('http://localhost:4000/users/login', data);\n  }\n\n  register(\n    username: string,\n    password: string,\n    forename: string,\n    surname: string,\n    sex: string,\n    type: string,\n    address: string,\n    email: string,\n    contactPhone: number,\n    securityQuestion: string,\n    securityAnswer: string,\n    // profilePicure: any,\n    creditCardNumber: number)\n  {\n    const data= {\n      username: username,\n      password: password,\n      forename: forename,\n      surname: surname,\n      sex: sex,\n      type: type,\n      address: address,\n      email: email,\n      contactPhone: contactPhone,\n      securityQuestion: securityQuestion,\n      securityAnswer: securityAnswer,\n      // profilePicure: profilePicure,\n      creditCardNumber: creditCardNumber,\n    }\n\n    return this.http.post<string>('http://localhost:4000/users/register', data);\n  }\n\n  updateInfo(\n    username: string,\n    forename: string,\n    surname: string,\n    address: string,\n    email: string,\n    contactPhone: number,\n    // profilePicure: any,\n    creditCardNumber: number)\n  {\n    const data= {\n      username: username,\n      forename: forename,\n      surname: surname,\n      address: address,\n      email: email,\n      contactPhone: contactPhone,\n      // profilePicure: profilePicure,\n      creditCardNumber: creditCardNumber,\n    }\n\n    return this.http.post<string>('http://localhost:4000/users/updateInfo', data);\n  }\n\n  getUsers()\n  {\n    return this.http.get<User[]>('http://localhost:4000/users/getUsers');\n  }\n\n  setBan(username: string)\n  {\n    const data= {\n      username: username\n    }\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IAEtC,MAAMC,IAAI,GAAE;MACVF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IAED,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAO,mCAAmC,EAAED,IAAI,CAAC;EACxE;EAEAE,QAAQA,CACNJ,QAAgB,EAChBC,QAAgB,EAChBI,QAAgB,EAChBC,OAAe,EACfC,GAAW,EACXC,IAAY,EACZC,OAAe,EACfC,KAAa,EACbC,YAAoB,EACpBC,gBAAwB,EACxBC,cAAsB;EACtB;EACAC,gBAAwB;IAExB,MAAMZ,IAAI,GAAE;MACVF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA,QAAQ;MAClBI,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEA,OAAO;MAChBC,GAAG,EAAEA,GAAG;MACRC,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK;MACZC,YAAY,EAAEA,YAAY;MAC1BC,gBAAgB,EAAEA,gBAAgB;MAClCC,cAAc,EAAEA,cAAc;MAC9B;MACAC,gBAAgB,EAAEA;KACnB;IAED,OAAO,IAAI,CAAChB,IAAI,CAACK,IAAI,CAAS,sCAAsC,EAAED,IAAI,CAAC;EAC7E;EAEAa,UAAUA,CACRf,QAAgB,EAChBK,QAAgB,EAChBC,OAAe,EACfG,OAAe,EACfC,KAAa,EACbC,YAAoB;EACpB;EACAG,gBAAwB;IAExB,MAAMZ,IAAI,GAAE;MACVF,QAAQ,EAAEA,QAAQ;MAClBK,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEA,OAAO;MAChBG,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK;MACZC,YAAY,EAAEA,YAAY;MAC1B;MACAG,gBAAgB,EAAEA;KACnB;IAED,OAAO,IAAI,CAAChB,IAAI,CAACK,IAAI,CAAS,wCAAwC,EAAED,IAAI,CAAC;EAC/E;EAEAc,QAAQA,CAAA;IAEN,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAS,sCAAsC,CAAC;EACtE;EAEAC,MAAMA,CAAClB,QAAgB;IAErB,MAAME,IAAI,GAAE;MACVF,QAAQ,EAAEA;KACX;EACH;EAAC,QAAAmB,CAAA,G;qBAlFUvB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5B,WAAW;IAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}