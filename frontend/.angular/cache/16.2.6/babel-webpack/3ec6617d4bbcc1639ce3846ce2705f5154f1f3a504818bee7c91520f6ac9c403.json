{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let GuestComponent = class GuestComponent {\n  constructor(router, userService, restaurantService) {\n    this.router = router;\n    this.userService = userService;\n    this.restaurantService = restaurantService;\n    this.page = 1;\n    this.user = new User();\n    this.error = \"\";\n    this.restaurants = [];\n    this.sortColumn = 'name';\n    this.sortOrder = 'asc';\n    this.searchName = '';\n    this.searchAddress = '';\n    this.searchType = '';\n  }\n  ngOnInit() {\n    let p = localStorage.getItem(\"page\");\n    if (p) this.page = parseInt(p);\n    let temp = localStorage.getItem(\"user\");\n    if (temp) {\n      this.user = JSON.parse(temp);\n      if (this.user.type != \"guest\") {\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n      if (this.user.accountStatus != 1) {\n        alert(\"This account is not active!\");\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n    } else {\n      this.router.navigate([\"\"]);\n    }\n    this.restaurantService.getRestaurants().subscribe(data => {\n      this.restaurants = data;\n    });\n  }\n  navigateTo(newPage) {\n    this.page = newPage;\n    localStorage.setItem(\"page\", newPage.toString());\n  }\n  updateInfo() {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone || !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, this.user.contactPhone, this.user.creditCardNumber).subscribe(data => {\n      if (data.msg === \"User information updated successfully!\") {\n        localStorage.setItem(\"user\", JSON.stringify(this.user));\n      }\n      alert(data.msg);\n      window.location.reload();\n    });\n  }\n  get sortedAndFilteredRestaurants() {\n    return this.restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(this.searchName.toLowerCase()) && restaurant.address.toLowerCase().includes(this.searchAddress.toLowerCase()) && restaurant.type.toLowerCase().includes(this.searchType.toLowerCase())).sort((a, b) => {\n      const valueA = a[this.sortColumn];\n      const valueB = b[this.sortColumn];\n      let comparison = 0;\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n      return this.sortOrder === 'asc' ? comparison : -comparison;\n    });\n  }\n  setSort(column) {\n    if (this.sortColumn === column) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortOrder = 'asc';\n    }\n  }\n  logout() {\n    localStorage.removeItem(\"page\");\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"\"]);\n  }\n};\nGuestComponent = __decorate([Component({\n  selector: 'app-guest',\n  templateUrl: './guest.component.html',\n  styleUrls: ['./guest.component.css']\n})], GuestComponent);","map":{"version":3,"names":["Component","User","GuestComponent","constructor","router","userService","restaurantService","page","user","error","restaurants","sortColumn","sortOrder","searchName","searchAddress","searchType","ngOnInit","p","localStorage","getItem","parseInt","temp","JSON","parse","type","removeItem","navigate","accountStatus","alert","getRestaurants","subscribe","data","navigateTo","newPage","setItem","toString","updateInfo","forename","surname","address","contactPhone","email","creditCardNumber","username","msg","stringify","window","location","reload","sortedAndFilteredRestaurants","filter","restaurant","name","toLowerCase","includes","sort","a","b","valueA","valueB","comparison","setSort","column","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\ETF\\Domaci i Projekti\\PIA Projekat\\frontend\\src\\app\\guest\\guest.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { Restaurant } from '../models/Restaurant';\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-guest',\n  templateUrl: './guest.component.html',\n  styleUrls: ['./guest.component.css']\n})\nexport class GuestComponent implements OnInit {\n\n  constructor(private router:Router, private userService: UserService, private restaurantService: RestaurantService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    let p = localStorage.getItem(\"page\")\n    if (p)\n      this.page = parseInt(p)\n\n    let temp = localStorage.getItem(\"user\")\n    if(temp)\n    {\n      this.user = JSON.parse(temp);\n\n      if (this.user.type != \"guest\")\n      {\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n      if (this.user.accountStatus != 1)\n      {\n        alert(\"This account is not active!\")\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n    }\n    else\n    {\n      this.router.navigate([\"\"]);\n    }\n\n    this.restaurantService.getRestaurants().subscribe(data => {\n      this.restaurants = data\n    })\n  }\n\n  page: number = 1\n  user: User = new User()\n  error: string = \"\"\n\n  restaurants: Restaurant[] = []\n\n  sortColumn: keyof Restaurant = 'name';\n  sortOrder: 'asc' | 'desc' = 'asc';\n\n  searchName: string = '';\n  searchAddress: string = '';\n  searchType: string = '';\n\n  navigateTo(newPage: number)\n  {\n    this.page = newPage\n    localStorage.setItem(\"page\", newPage.toString())\n  }\n\n  updateInfo()\n  {\n    if (!this.user.forename || !this.user.surname || !this.user.address || !this.user.contactPhone ||\n      !this.user.email || !this.user.creditCardNumber) {\n      this.error = \"Fields can not be empty!\";\n      return;\n    }\n\n    this.userService.updateInfo(this.user.username, this.user.forename, this.user.surname, this.user.address, this.user.email, \n      this.user.contactPhone, this.user.creditCardNumber).subscribe((data:any) => {\n        if (data.msg === \"User information updated successfully!\")\n        {\n          localStorage.setItem(\"user\", JSON.stringify(this.user))\n        }\n\n        alert(data.msg)\n        window.location.reload();\n    })\n  }\n\n  get sortedAndFilteredRestaurants(): Restaurant[] {\n    return this.restaurants\n      .filter(restaurant => \n        restaurant.name.toLowerCase().includes(this.searchName.toLowerCase()) &&\n        restaurant.address.toLowerCase().includes(this.searchAddress.toLowerCase()) &&\n        restaurant.type.toLowerCase().includes(this.searchType.toLowerCase())\n      )\n      .sort((a, b) => {\n        const valueA = a[this.sortColumn];\n        const valueB = b[this.sortColumn];\n        let comparison = 0;\n        if (valueA > valueB) {\n          comparison = 1;\n        } else if (valueA < valueB) {\n          comparison = -1;\n        }\n        return this.sortOrder === 'asc' ? comparison : -comparison;\n      });\n  }\n\n  setSort(column: keyof Restaurant): void {\n    if (this.sortColumn === column) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortOrder = 'asc';\n    }\n  }\n\n\n  logout()\n  {\n    localStorage.removeItem(\"page\")\n    localStorage.removeItem(\"user\")\n    this.router.navigate([\"\"])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}