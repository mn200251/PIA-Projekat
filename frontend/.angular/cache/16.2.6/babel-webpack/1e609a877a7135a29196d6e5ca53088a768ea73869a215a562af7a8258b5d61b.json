{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let AdminComponent = class AdminComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.page = 1;\n    this.users = [];\n    this.admin = new User();\n  }\n  ngOnInit() {\n    let temp = localStorage.getItem(\"user\");\n    if (temp) {\n      this.admin = JSON.parse(temp);\n      if (this.admin.type != \"admin\") {\n        localStorage.removeItem(\"user\");\n        this.router.navigate([\"\"]);\n      }\n    } else {\n      this.router.navigate([\"\"]);\n    }\n    // page 1 - list all users\n    this.userService.getUsers().subscribe(data => {\n      if (data) {\n        // filter out deactivated accounts\n        this.users = data.filter(user => user.accountStatus !== -1);\n      }\n    });\n  }\n  navigateTo(newPage) {\n    this.page = newPage;\n  }\n  updateInfo(user) {\n    if (!user.forename || !user.surname || !user.address || !user.contactPhone || !user.email || !user.creditCardNumber) {\n      alert(\"Fields can not be empty!\");\n      return;\n    }\n    this.userService.updateInfo(user.username, user.forename, user.surname, user.address, user.email, user.contactPhone, user.creditCardNumber).subscribe(data => {\n      alert(data.msg);\n      window.location.reload();\n    });\n  }\n  setStatus(user) {\n    let newStatus = 0;\n    if (user.accountStatus == -2) newStatus = 1;else if (user.accountStatus == 1) newStatus = -2;\n    this.userService.setStatus(user.username, newStatus).subscribe(data => {\n      alert(data.msg);\n      window.location.reload();\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"\"]);\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);","map":{"version":3,"names":["Component","User","AdminComponent","constructor","router","userService","page","users","admin","ngOnInit","temp","localStorage","getItem","JSON","parse","type","removeItem","navigate","getUsers","subscribe","data","filter","user","accountStatus","navigateTo","newPage","updateInfo","forename","surname","address","contactPhone","email","creditCardNumber","alert","username","msg","window","location","reload","setStatus","newStatus","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\ETF\\Domaci i Projekti\\PIA Projekat\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/User';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit{\n\n  constructor(private router: Router, private userService: UserService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    let temp = localStorage.getItem(\"user\")\n    if(temp)\n    {\n      this.admin = JSON.parse(temp);\n\n      if (this.admin.type != \"admin\")\n      {\n        localStorage.removeItem(\"user\")\n        this.router.navigate([\"\"]);\n      }\n    }\n    else\n    {\n      this.router.navigate([\"\"]);\n    }\n\n    // page 1 - list all users\n    this.userService.getUsers().subscribe(data => {\n      if (data)\n      {\n        // filter out deactivated accounts\n        this.users = data.filter(user => user.accountStatus !== -1);\n      }\n\n    })\n  }\n\n  page: number = 1\n  users: User[] = []\n  admin: User = new User()\n\n  navigateTo(newPage: number)\n  {\n    this.page = newPage\n  }\n\n  updateInfo(user:User)\n  {\n    if (!user.forename || !user.surname || !user.address || !user.contactPhone ||\n      !user.email || !user.creditCardNumber) {\n      alert(\"Fields can not be empty!\");\n      return;\n    }\n\n    this.userService.updateInfo(user.username, user.forename, user.surname, user.address, user.email, \n      user.contactPhone, user.creditCardNumber).subscribe((data:any) => {\n        alert(data.msg)\n        window.location.reload();\n    })\n  }\n\n  setStatus(user: User)\n  {\n    \n    let newStatus = 0\n    \n    if (user.accountStatus == -2)\n      newStatus = 1\n    else if (user.accountStatus == 1)\n      newStatus = -2\n\n    this.userService.setStatus(user.username, newStatus).subscribe((data:any) => {\n      alert(data.msg)\n      window.location.reload();\n    })\n  }\n\n  logout()\n  {\n    localStorage.removeItem(\"user\")\n    this.router.navigate([\"\"])\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,IAAI,QAAQ,gBAAgB;AAQ9B,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAiCvD,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAS,IAAIP,IAAI,EAAE;EAhCxB;EAEAQ,QAAQA,CAAA;IACN,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvC,IAAGF,IAAI,EACP;MACE,IAAI,CAACF,KAAK,GAAGK,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;MAE7B,IAAI,IAAI,CAACF,KAAK,CAACO,IAAI,IAAI,OAAO,EAC9B;QACEJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;QAC/B,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;KAE7B,MAED;MACE,IAAI,CAACb,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;IAG5B;IACA,IAAI,CAACZ,WAAW,CAACa,QAAQ,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC3C,IAAIA,IAAI,EACR;QACE;QACA,IAAI,CAACb,KAAK,GAAGa,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,aAAa,KAAK,CAAC,CAAC,CAAC;;IAG/D,CAAC,CAAC;EACJ;EAMAC,UAAUA,CAACC,OAAe;IAExB,IAAI,CAACnB,IAAI,GAAGmB,OAAO;EACrB;EAEAC,UAAUA,CAACJ,IAAS;IAElB,IAAI,CAACA,IAAI,CAACK,QAAQ,IAAI,CAACL,IAAI,CAACM,OAAO,IAAI,CAACN,IAAI,CAACO,OAAO,IAAI,CAACP,IAAI,CAACQ,YAAY,IACxE,CAACR,IAAI,CAACS,KAAK,IAAI,CAACT,IAAI,CAACU,gBAAgB,EAAE;MACvCC,KAAK,CAAC,0BAA0B,CAAC;MACjC;;IAGF,IAAI,CAAC5B,WAAW,CAACqB,UAAU,CAACJ,IAAI,CAACY,QAAQ,EAAEZ,IAAI,CAACK,QAAQ,EAAEL,IAAI,CAACM,OAAO,EAAEN,IAAI,CAACO,OAAO,EAAEP,IAAI,CAACS,KAAK,EAC9FT,IAAI,CAACQ,YAAY,EAAER,IAAI,CAACU,gBAAgB,CAAC,CAACb,SAAS,CAAEC,IAAQ,IAAI;MAC/Da,KAAK,CAACb,IAAI,CAACe,GAAG,CAAC;MACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEAC,SAASA,CAACjB,IAAU;IAGlB,IAAIkB,SAAS,GAAG,CAAC;IAEjB,IAAIlB,IAAI,CAACC,aAAa,IAAI,CAAC,CAAC,EAC1BiB,SAAS,GAAG,CAAC,MACV,IAAIlB,IAAI,CAACC,aAAa,IAAI,CAAC,EAC9BiB,SAAS,GAAG,CAAC,CAAC;IAEhB,IAAI,CAACnC,WAAW,CAACkC,SAAS,CAACjB,IAAI,CAACY,QAAQ,EAAEM,SAAS,CAAC,CAACrB,SAAS,CAAEC,IAAQ,IAAI;MAC1Ea,KAAK,CAACb,IAAI,CAACe,GAAG,CAAC;MACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAG,MAAMA,CAAA;IAEJ9B,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;CACD;AAhFYf,cAAc,GAAAwC,UAAA,EAL1B1C,SAAS,CAAC;EACT2C,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW3C,cAAc,CAgF1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}